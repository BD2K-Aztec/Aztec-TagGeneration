Truncated branch and bound achieves efficient constraint-based genetic design Motivation: Computer-aided genetic design is a promising approach to a core problem of metabolic engineeringthat of identifying genetic manipulation strategies that result in engineered strains with favorable product accumulation. This approach has proved to be effective for organisms including Escherichia coli and Saccharomyces cerevisiae, allowing for rapid, rational design of engineered strains. Finding optimal genetic manipulation strategies, however, is a complex computational problem in which running time grows exponentially with the number of manipulations (i.e. knockouts, knock-ins or regulation changes) in the strategy. Thus, computer-aided gene identification has to date been limited in the complexity or optimality of the strategies it finds or in the size and level of detail of the metabolic networks under consideration. Results: Here, we present an efficient computational solution to the gene identification problem. Our approach significantly outperforms previous approachesin seconds or minutes, we find strategies that previously required running times of days or more. Availability and implementation: GDBB is implemented using MATLAB and is freely available for non-profit use atComputational methods have been developed that allow the genomes of organisms to be designed for metabolic engineering purposes. These methods, which include OptKnock , OptReg , OptStrain , OptFlux and Genetic Design through Local Search (GDLS) , have proved to be effective for the metabolic engineering of Escherichia coli and Saccharomyces cerevisiae , and the same approach can be applied to other organisms. Such a computerbased approach to metabolic engineering facilitates rapid, effective engineering and, consequently, efficient computational design To whom correspondence should be addressed. techniques have significant implications for many applications including biofuel and drug production. The computational methods we describe are based on constraintbased models of metabolism that predict the production of desired compounds under genetic manipulations. Constraint-based models can achieve a high level of accuracy in their predictions, and over 50 organism-specific genome-scale models have been developed and used in various applications to date. A comprehensive review of the applications of constraint-based modeling, including a table listing existing organism-specific genome-scale models, has been conducted by. Constraint-based modeling is based on the stoichiometric matrix, or S matrix, which represents the metabolic network within a cell . More accurately, the S matrix is comprised of the stoichiometric coefficients of all metabolic reactions within a cell. Given the S matrix, methods such as flux balance analysis (FBA;), minimization of metabolic adjustment and regulatory on/off minimization allow the effect of genetic manipulations (such as gene deletions or knockouts) to be predicted. Computer design of genomes for metabolic engineering uses in silico predictions to identify genetic manipulations that result in favorable metabolic phenotypes. Although obtaining in silico predictions is much faster than performing genetic manipulations on the actual organism, the space of all possible genetic manipulations is nevertheless vast. Even if we only consider gene knockouts, the number of possible gene knockout configurations (i.e. specific sets of gene knockouts) increases exponentially with the total number of genes we allow to be knocked out. Thus, computational methods seeking to find an optimal set of knockouts generally have running times that increase exponentially with the number of allowed knockouts, which limits optimal genomic designs found in silico to a small number of knockouts . Moreover, with ever more biological knowledge being created and curated, the size and accuracy of constraint-based models is increasing, which causes an associated increase in the computational complexity of modeling and genomic design. As an example of the pace of improvement, the model we use in this study, the iAF1260 model of E.coli , is nearly twice of the size of the previous iJR904 model , published only 4 years prior. In those 4 years, the number of metabolic reactions modeled increased from 747 to 1387a near doubling. Given the pace at which model size has grown for E.coli over) and the application of constraint-based modeling to organisms beyond E.coli many with larger genomesit seems evident that models of the size of iAF1260 and larger will become standard in future. It has therefore become imperative that efficient computational methods for finding genetic manipulation strategies that overcome the exponential scaling of manipulation configurations are developed, and a significant body of work has been devoted to this goal . Here, we present a simple, elegant solution to the problem. Our approach, which we call Genetic Design through Branch and Bound (GDBB) uses a truncated branch and branch algorithm to tackle the bilevel optimization framework used in OptKnock , OptReg , GDLS and elsewhere. Truncated branch and bound is an adaption of the branch and bound algorithm. Branch and bound is a general algorithm for finding optimal solutions to various optimization problems. Truncated branch and bound stops processing before the algorithm determines that a solution is optimal and stops at a feasible near-optimal solution considered sufficient for practical purposes . Truncated branch and bound can be applied to any combinatorial optimization problem, and it has been previously shown to perform well on difficult optimization problems, such as the asymmetric traveling salesman problem and project scheduling problems . We show that GDBB, using this heuristic approach, vastly outperforms previous approaches, finding near-optimal solutions in seconds to minutes that otherwise would require days or more, thus representing a significant, enabling advance in computer design for metabolic engineering. GDBB can be applied to find near-optimal gene knockout strategies using the bilevel optimization framework used in OptKnock or near-optimal up-and downregulation strategies using the bilevel optimization framework used in OptReg . More generally, it can be applied to find near-optimal genetic manipulations strategies for any setup for which there exists a bilevel optimization framework that can be converted in a single-level mixed-integer linear program (MILP). Linear programming (LP) is a technique for the optimization of a linear objective function, subject to linear equality and linear inequality constraints. An MILP problem is a LP problem where some of the unknown variables are required to be integers. In general, MILP problems are NP-hard . Transforming bilevel optimization of FBA models to single level MILP problems has resulted in computational methods that efficiently search the space of genetic manipulations. This approach is much more efficient than exhaustive, brute-force search, but it is nevertheless very computationally intensive. To tackle the MILP, GDBB uses a truncated branch and branch algorithm. In this article, we show that truncated branch and bound performs extraordinarily well on bilevel optimization problems associated with genomic design. For simplicity, we focus exclusively on knockouts in this article, i.e. on finding knockout strategies that lead to favorable metabolic phenotypes.To illustrate the utility of GDBB, we consider the metabolic engineering of E.coli for acetate and succinate production. These cases serve as useful cases for comparison: they were previously used to compare the performance of GDLS with other approaches (in which GDLS compared favorably) and there is experimental experience with the metabolic engineering of E.coli for these purposes . As GDLS compares favorably with other approaches, such as the evolutionary algorithm and simulated annealing meta-heuristics, implemented in the OptFlux software platform , we primarily show the performance of GDBB in comparison with GDLS. For reference, we have also included the performance of the global search method, OptKnock . For a given number of allowed knockouts, global search is guaranteed to find an optimal solution (i.e. a knockout strategy that achieves the maximum synthetic production flux), but as such, its running time increases exponentially with the number of allowed knockouts. In, we show the performance of GDBB compared with that of GDLS and global search for acetate production in E.coli using the most recent genome-scale constraint-based model of E.coli, iAF1260 . Using the different approaches, we search for knockout strategies with a maximum running time of 86 400 s (24 h). We chose 24 h to be the time period for evaluating performance as a reasonable but arbitrary choice. We expect that performance gains found within 24 h can be extended to any given time period. We see that GDBB finds comparable solutions to those found by GDLS and global search with vastly improved running timeoften one or two or more orders of magnitude. As such, GDBB is able to find solutions within 24 h that are not found by the other two approaches. Indeed, GDBB finds a knockout strategy achieving an acetate production flux of 19.232 mmol h 1 gDW 1 , which is an increase of 2.62278 mmol h 1 gDW 1 (or 14) over the best solution found by GDLS in 24 h, and it does so in a mere 81 s. 
