Sequence analysis keeSeek: searching distant non-existing words in genomes for PCR-based applications The search for short words that are absent in the genome of one or more organisms (neverwords, also known as nullomers) is attracting growing interest because of the impact they may have in recent molecular biology applications. keeSeek is able to find absent sequences with primer-like features, which can be used as unique labels for exogenously inserted DNA fragments to recover their exact position into the genome using PCR techniques. The main differences with respect to previously developed tools for neverwords generation are (i) calculation of the distance from the reference genome, in terms of number of mismatches, and selection of the most distant sequences that will have a low probability to anneal unspecifically; (ii) application of a series of filters to discard candidates not suitable to be used as PCR primers. KeeSeek has been implemented in C++ and CUDA (Compute Unified Device Architecture) to work in a General-Purpose Computing on Graphics Processing Units (GPGPU) environment.In the recent past, different methods for finding non-existing sequences in genomes, previously called nullomers or unwords, have been proposed . Though nullomer definition is accepted, the term may be confusing and evocative of a k-mer of null length. For this reason, we propose neverwords to indicate strings that do not exist in a genome. Such neverwords have been proposed for the following aims: (i) studies of population genetics, species identification and evolution; (ii) drug discovery and development; (iii) target design for recalling or eliminating genetically engineered organisms (e.g. suicide targets); (iv) design of molecular barcodes or specific adaptors for PCR primers [e.g. for the detection of viral insertion sites in hosts genomes (. The algorithms proposed so far for neverwords generation are only focused on the detection of absent words in genomes, without providing any information about their distance in terms of number of mismatches. This additional information is crucial when such k-mers are used as barcodes or PCR primers: for these purposes, ideal neverwords must be distant enough to any position of the reference genome and must possess primer-like features. Here we present keeSeek, software developed for the design of distant k-mers that can be used as barcodes or PCR primers. keeSeek allows the user to generate, for any reference genome, a set of k-mers absent in that genome, selecting a desired length and a minimum number of mismatches along all positions of the reference. The advantage versus previous tools is the capability to produce longer sequences (results were obtained up to the length of 31 nt) and, most importantly, to provide information about the number of mismatches and the position of the best match in the reference. In addition, a set of filters has been implemented to select only k-mers with primer-like features. The algorithm is written in C++ and CUDA, to exploit the high parallelization provided by Graphics Processing Units (GPUs).We have assessed keeSeek on three model organisms, Mycobacterium tuberculosis, Arabidopsis thaliana and Homo sapiens, and at different word lengths, up to 31 nt.reports, for each reference genome, a small panel of 20-mers with a minimum distance of three mismatches and the relative computational time required to generate them. The results were validated by searching them with a thirdparty tool, glsearch , based on the Needleman and Wunsch algorithm . Additionally, a comparison of searching times between GPU and CPU implementations has been performed .Note: Each nullomer was generated in an independent run of the algorithm, using the anagram mode: we started by defining an equal distribution of the four nucleotides (5A, 5T, 5C and 5G), and we reshuffled the anagrams starting from a random seed (-R 0). One of the nullomers with the highest distance from the respective reference genome is shown for each run. Times refer to the first block of 128 evaluated k-mers (see Supplementary File S1.6 for details) obtained on a Tesla GPU M2050. Loading of the genome is not considered.. Computational times required to search for a sequence of length 20 on three selected genomes, obtained by running the GPU implementation of keeSeek (default options), its multithreaded CPU version (-N option) and glsearch algorithm. The y-axis is in logarithmic scale. See Supplementary File S1.7 for additional details 
