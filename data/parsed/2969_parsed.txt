genome_analysis mindthegap integrated detection and assembly of short and long insertions motivation insertions play_an in genome_evolution however such variants are difficult to detect from short_read sequen_cing data especially when they exceed the paired_end insert_size many approaches have been proposed to call short insertion variants based on paired_end however there remains a lack of practical methods to detect and assemble long variants results we propose here an original method called mindthegap for the integrated detection and assembly of insertion variants from re sequencing_data importantly it is designed to call insertions of any size whether they are novel or duplicated homozygous or heterozy gous in the donor genome mindthegap uses an efficient k_mer based method to detect insertion_sites in a reference_genome and subsequently assemble them from the donor reads mindthegap showed high recall and precision on simulated_datasets of various genome complexities when applied to real caenorhabditis_elegans and human na datasets mindthegap detected and correctly assembled insertions kb using at most gb of memory availability_and http mindthegap structural_variants svs are large_scale structural changes in the genome they have been typically defined in opposition to point_mutations which are single_nucleotide snps and short insertions_or indels svs therefore include insertions deletions and inversions of genomic_sequences recent research has shown that they play_an in evolution and diseases genomes however svs are challenging to discover using present day sequencing_approaches as they generally span genomic_regions that are longer than the reads computational_methods have been designed to extract evidence of svs from sequencing_data using two types of analyses paired_end of reads to a reference_genome and copy_number estimation using read_depth mindthegap is the first integrated method to detect and assemble insertion variants of any size and any type using modest computing_resources the find module of mindthegap differs from most other existing_methods by not relying on read_mapping instead the de_bruijn of reads is compared against the reference_sequence which enables fast and low memory analysis however one current limitation of the find module is that it fails to detect insertions when other polymorphism occurs near the insertion_site improvements to waive this limitation are under development based on a more detailed analysis of gaps longer than k furthermore the method could also be used to output snps and other types of structural_variants long insertion variants are challenging to detect and assemble thus there is a shortage of tools to compare mindthegap with we compared our results with soapindel which is a popular indel detection software limited to short insertions the novelseq software is designed to find and assemble large_insertions and therefore would have been another candidate for comparison however despite several attempts and reaching out to the author we were unable to run the software successfully on any of our datasets the novelseq cluster step ran indefinitely novelseq relies on a complex pipeline and we conjecture that it may be tailored to specific data types while most other insertion detection methods require to run external software mindthegap is stand alone and is therefore easy to use if needed the modular_organization of mindthegap allows users to replace the find module with the results of a classical insertion detection based on paired_end the fill module could also be used as a de_novo finishing step i e gap_filling between adjacent contigs in scaffolds although we did not evaluate its performance for this task one important design choice for the fill module is to perform assembly with all the k_mers in the read dataset this enables to assemble not only novel insertions but also duplicated insertions and transposition events classification of assembled insertions into the different event_types is not done by mindthegap but can be done by re mapping insertions to the reference_genome one drawback of considering all reads during insertion assembly is that the de_bruijn becomes more complex to analyze an important future work will be to improve the recall of the fill module by using paired_end information to guide traversal of contig graphs as repeated regions are notoriously_difficult to assemble we anticipate that our approach might not be effectivenote parameter r was set to and assembled insertions smaller than bp were filtered out for mobile element insertions however there exist methods tailored to the assembly of mei based on local_assembly with recruitment of mate reads our tests on the na dataset showed there is room for improvement only two long homozygous insertions were successfully assembled out of predicted ones we postulate that i polymorphism or repetitions near the insertion_sites hinder detection by the find module and ii the complexity of the human_genome makes de_novo of large contigs difficult as no other tool was able to assemble long insertions we could not assess whether our results were owing to weaknesses in our method or to specificities of this particular dataset complex insertion_sequences or mispredicted insertions 
