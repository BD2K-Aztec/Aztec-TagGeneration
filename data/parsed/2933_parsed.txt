sequence_analysis methylcoder software pipeline for bisulfite treated sequences motivation methylcoder is a software_program that generates per base methylation data given a set of bisulfite treated reads it provides the option to use either of two existing short_read each with different strengths it accounts for soft masked alignments and overlapping paired_end methylcoder outputs data in text and binary formats in addition to the final alignment in sam format so that common high_throughput tools can be used on the resulting output it is more flexible than existing software and competitive in terms of speed and memory use availability methylcoder requires only a python interpreter and a c compiler to run extensive documentation and the full source_code are available under the mit_license at https github com brentp methylcode whole_genome bs_seq is used to determine the methylation_levels at each cytosine in dna that has been treated with bisulfite unmethylated_cytosines are converted to uracil and then to thymine following pcr_amplification methylated_cytosines are not converted so an epigenetic mark is visible in the genetic_code in order to determine nucleotide_resolution methylation_levels bisulfite treated reads must be re aligned to the reference_genome since some of the cytosines c in each read may have been converted to thymines t direct alignment is not possible because conversions will appear as mismatches our approach is to artificially in silico convert remaining cs to ts in the reads and the reference_genome a short read_aligner can then be used to map the converted reads to the converted genome for each alignment the original read and reference_sequence can be recovered a reference c that is aligned to a t in a read can be considered as converted or unmethylated previous software for aligning bs_seq data used a variety of methods see huss for a more complete list bisulfite sequence mapping program uses a bit mask that treats cs and ts identically and hashing to map bisulfite treated reads earlier tools such as cokusalignment use strategies that are slower than current aligners bs seeker and bismark use a similar strategy to the one described here bs seeker is memory intensive and does not support paired_end both bismark and bs seeker to whom correspondence should be addressed are limited to the bowtie aligner and do not support color_space reads bisulfite treated reads analysis tool brat also uses a hashing approach and is the only other aligner that avoids double counting overlapping paired_end we introduce methylcoder a fast memory_efficient bs_seq pipeline it supports both paired and single_end in color_space or nucleotide formats methylcoder provides a single entry_point and common output_formats for the bowtie and genomic short_read nucleotide alignment program gsnap aligners each of these aligners has different strengths gsnap has no limitation on the size of the reference but does not consider quality information with the reads bowtie can only map to references gb in total length but considers quality and can map color_space reads utilizing these short_read while providing access to their arguments ensures that methylcoder is flexible and accessible as with aligners for genomic_dna there are many viable choices available for bs_seq mapping we introduce a resource to benchmark the time memory use and number of mapped_reads for the bs_seq aligners mentioned above 
