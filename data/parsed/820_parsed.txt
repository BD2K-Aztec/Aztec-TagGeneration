sequence_analysis brat bw efficient and accurate mapping of bisulfite treated reads we introduce brat bw a fast accurate and memory_efficient tool that maps bisulfite treated short_reads bs_seq to a reference_genome using the fm_index burrowswheeler_transform brat bw is significantly more memory_efficient and faster on longer_reads than current state of the art tools for bs_seq data without compromising on accuracy brat bw is a part of a software_suite for genome_wide single_base methylation data analysis that supports single and paired_end and includes a tool for estimation of methylation_level at each cytosine bisulfite_sequencing bs_seq combined with next_generation ngs instruments enables genome_wide analysis at a single_base bisulfite_treatment of dna followed by pcr converts unmethylated cytocines to thymines and leaves methylated cytocines unchanged bisulfite treated sequenced_reads have to be aligned to the reference_genome but the treatment introduces the computational challenge of mapping both cs and ts in a read to cs in the genome the most successful methods for mapping short_reads either use hashing or data_structures based on the burrowswheeler_transform where the latter approach is considered to yield more time efficient solutions than the former although several tools are available for bs_seq data most of them still use hashing including rmap bs soap maq and brat the fastest tools for mapping bs_seq reads are bismark and bs seeker both employ the mapping tool bowtie that internally uses the fm_index based on the_burrows as a consequence both tools are required to post process the output of bowtie to remove ambiguous reads or reads with too many mismatches bismark synchronizes instances of fm indexes run in parallel which takes a toll on time efficiency bs seeker outputs the results of distinct instances into separate files to whom correspondence should be addressed during mapping and then post processes mapping results which demands extra storage for intermediate results bismark and bsseeker can therefore require large amount of primary memory to complete the processing both tools support two distinct types of bisulfite libraries the first type yields sequenced_reads that are bisulfite converted versions of two original genomic strands the second type produces reads that correspond to four possible strands as a byproduct of pcr step to support the second type of libraries bismark and bsseeker align_reads to four distinct fm indexes even though a type bisulfite library would require only two fm indexes bismark builds four fm indexes in parallel requiring gb of memory for human_genome bowtie with offrate on the other hand bs seekers memory_footprint depends directly on the size of the input_file it may require up to gb of memory for m bp long_reads the typical number of reads lane for the illumina_genome additionally bs seeker currently does not support paired_end and allows a limited number of mismatches per read which makes it unsuitable for longer_reads in the supplementary_material summarizes the features of all the available tools for bs_seq data in this article we introduce brat bw a fast and accurate mapping tool that uses a very memory_efficient implementation of the fm_index brat bw is an evolution of brat which uses about half as much memory compared with bsseeker and bismark additionally its memory_footprint does not depend on the size of the input sequenced_reads likely to continue to increase with future sequencing_technologies advances brat bw supports both types of bisulfite libraries and handles single_end and paired_end it has no limitation on the maximum_length of the read or the number of allowed mismatches brat bw guarantees to find all matches as long as they have at most one mismatch in a prefix of length_bp user_defined of the read there are several advantages of designing a tool for bs_seq data based on the fm_index from the ground up instead of relying on a general_purpose tool such as bowtie brat bw processes both fm indexes on a single processor so no synchronization cost is required in addition the selection of correctly mapped unique reads is performed on the fly during mapping so no storage for intermediate results is necessary 
