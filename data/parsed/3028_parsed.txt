sequence_analysis mod bio apache modules for next_generation data we describe mod bio a set of modules for the apache http server that allows the users to access and query fastq tabix fasta and bam_files through a web_browser those data are made available in plain_text html xml json and json p a javascript based genome_browser using the json p communication technique is provided as an example of cross domain web_service availability_and https github com lindenb mod bio contact the open_source apache http server is the most widely used web_server http en wikipedia org wiki apache http server it has a generalized programming interface extending the functionality of the basic server those pieces of c code named modules register custom hooks in the core server a module has an access to the servers data_structures and is able to customize the response back to the client the apache server is used by the main centers in bioinformatics like the ncbi ucsc ensembl genomes and most of the time they provide an online area where the users can download some structured raw files it is often a ftp server which can go with a http server at the time of writing the genomes data are available through both protocols common tasks such as getting the first lines of a file or accessing the data in a given genomic_region are easily provided using standard linux tools or using the coordinate sorted index of samtools and tabix but this index needs to be downloaded and it remains difficult for the biologists to quickly get an overview of those data an interactive program such as integrative_genomics igv allows viewing the content of a remote bam_file but the index for the file must be downloaded too and interaction is limited to the software itself the distributed annotation system das protocol was also developed to answer those coordinate based queries but the response is limited to the xml format and it requires to define a registry and some entry points and it doesnt allow to fetch the original data ultimately it becomes hard to develop some web interactive applications which need to access remote data without downloading the whole dataset especially because of cross site scripting security issues a first way to circumvent this problem is to return a json p document a communication technique used in javascript programs to request data from a server in a different domain another solution is to enable the server to use the cross origin resource sharing cors protocol a strategy implemented by the dalliance genome_browser dalliance uses cors in combination of the http range header to fetch chunks of ngs_data but it depends of multiple javascript libraries and the whole indexes for the bam or tabix files must be loaded in the browsers memory to answer those issues we have developed mod bio a set of apache modules providing a user_friendly overview of the bioinformatics files through a web_browser modules are activated using the files extensions and thus there is no need to index documents in a database on the server side in practice when a remote directory is listed in a web_browser the files managed by mod bio are displayed with some extra hyperlinks that offer the possibility to display the contents in a browser using the following alternative formats modules are able to print the data in html or plain_text but also provide an option to retrieve the data using the xml or json formats coordinate sorted indexed files like bam or tabix indexed files can be queried by specifiying a genomic range in the url a module named mod fastq handles fastq_files and displays the first short_reads of a file giving an overview of the length of the reads of the platform used for sequencing a second module named mod faidx retrieves fragments of fasta reference_sequences indexed with samtools faidx another module mod tabix retrieves genomic_data such as vcf or gff files that have been compressed with bgzip and indexed with tabix finally the module named mod bam handles the sam alignments in a bam_file if the server does not support cors a supplementary parameter callback in the url turns each json output into a json p document the module mod bio interacts smoothly with the other apache modules like mod deflate which compresses the response sent to the client over the network hence apache server using mod bio are turned into a real web_service for bioinformatics mod bio was developed in the c programming_language it is heavily based on htslib the core c library of samtools bcftools and tabix https github com samtools htslib in the end for the system administrators mod bio provides a quick way to expose their data through a web_service or a web_browser biologists will find here an interface to explore the data future_developments will include the support of other indexed formats like bigwig bigbed and cram and consolidating the output_formats to fit formal specifications like those defined by the global alliance for genomics and health https github com ga gh schemas the source_code of mod bio is available on https github com lindenb mod bio we also have installed a demo server of mod bio on http cardioserve nantes inserm fr lindenb mod bio example html this demonstration includes a jsonp dynamic web_browser displaying a bam and its reference_sequence using the canvas html element we believe that mod bio can be used to release structured scientific data publicly it provides a quick interface to get an overview of next_generation output_files the client sends get requests to the http server running mod bio parameters like region and format modify the normal response of the server which returns structured data xml json back to the client where it can be gathered by a custom tool such as a genome_browser 
