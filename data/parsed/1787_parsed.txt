structural_bioinformatics fast protein_structure using gaussian overlap scoring of backbone peptide fragment similarity motivation aligning and comparing protein_structures is important for understanding their evolutionary and functional_relationships with the rapid_growth of protein_structure databases in recent_years the need to align superpose and compare protein_structures rapidly and accurately has never been greater many structural alignment_algorithms have been described in the past_years however achieving an algorithm that is both accurate and fast remains a considerable challenge results we have developed a novel protein_structure algorithm called kpax which exploits the highly predictable covalent geometry of c atoms to define multiple local coordinate frames in which backbone peptide_fragments may be oriented and compared using sensitive gaussian overlap scoring_functions a global_alignment and hence a structural superposition may then be found rapidly using dynamic_programming with secondary_structure specific gap penalties when superposing pairs of structures kpax tends to give tighter secondary_structure overlays than several popular structure alignment_algorithms when searching the cath database kpax is faster and more accurate than the very efficient yakusa algorithm and it gives almost the same high_level of fold_recognition as tm_align while being more than times_faster availability_and http kpax loria fr aligning and comparing protein_structures is important for understanding their evolutionary and functional_relationships by quoting lewis carrols red_queen character it takes all the running you can do to keep in the same place recently alluded to the computational challenge of searching increasingly_large protein_structure databases today years later with some protein_structures in the protein databank and with the number of new structures being solved growing_exponentially the need to compare the d structures of protein molecules rapidly and reliably has never been greater efficient pattern matching algorithms such as fasta and blast are now standard_tools for searching nucleotide_and sequence_databases dynamic_programming dp algorithms provide a rapid way to find the optimal global or local_alignments of pairs sequences however there is still no generally_accepted standard for how to align and compare two similar protein_structures this discrepancy arises because the additional complexity of working in d space makes structure alignment considerably more difficult than sequence_alignment for example two common and closely_related measures of structural_similarity are the number of residue equivalences and the root_mean deviation rmsd between the corresponding c atoms however while it is often possible to improve one at the expense of the other it is difficult to optimize these two quantities simultaneously furthermore because rmsd values tend to be dominated by long_distance pairs it can be useful to restrict rmsd based similarity_measures to selected core residues but this then raises the question of precisely which residues should be considered as core residues consequently different similarity scoring_schemes can assign different sets of optimal residue equivalences despite such difficulties many practical structural alignment_algorithms have been described and the number of recent_publications is growing rapidly these algorithms can often be classified according to how they use the internal geometries of proteins to calculate interatomic distances or cliques of distances interatomic c vectors or triplets of c atoms torsion_angles or combinations of distances and angles geometric hashing and voronoi tessellation techniques have also been used to calculate pose invariant measures of structural_similarity different algorithms may also be distinguished according to whether and how they use secondary_structure sses in the similarity scoring_function or whether they match sses as to whom correspondence should be addressed structural_units for example sheba finds an initial superposition using a dp scoring_matrix that combines sequence_homology secondary_structure similarity solvent_accessibility and polarity to obtain an initial superposition which is then optimized using dp to maximize the number of close c c distances the method of jung and lee prosup and tm_align identify short seed fragments to give initial superpositions which are then optimized in similar_ways yet other approaches define and match higher_order structural alphabets or fragments that might subsequently be re assembled most algorithms treat proteins as rigid_body objects but a few can take into account structural flexibility permutations of structural_motifs and even composite alignments involving multiple chains however almost all of these approaches are prohibitively_expensive if the aim is to search large protein_structure databases as well as the diverse geometric and symbolic representations listed above algorithms based on sophisticated algebraic approaches have also been described including lagrangian contact_map optimization eigenvector analysis and fourier correlation techniques recent improvements to the contact_map optimization approach using integer_linear can now find provably optimal structural_alignments in favourable cases however as before such techniques are currently too expensive to search large structural databases here our aim is to meet the need for a general_purpose structural_alignment algorithm that is sufficiently fast to support ad_hoc queries against large structural databases while also being sufficiently sensitive to provide high_quality but not necessarily optimal pair_wise alignments our overall approach is motivated by the basic observation that the four covalent_bonds of each c atom have a highly predictable tetrahedral geometry which could be used to superpose arbitrary pairs of c atoms and their covalent partner atoms using least_squares fitting thus armed with the corresponding d fitting matrix the relative positions of neighbouring up stream and down stream residues could easily be compared and scored however rather than using explicit least_squares fitting which is a computationally_expensive operation and which requires the coordinates of two sets of atoms we note that a similar but not strictly identical transformation can be achieved by individually translating each c atom to the coordinate origin and by aligning two of its covalent_bonds with the coordinate axes in other words applying such a transformation will allow the backbone peptide fragment associated with each c position to be placed in a standard or canonical orientation in the context of database_search this is clearly advantageous because it allows each structure to be pre processed separately in linear time from this starting_point we calculate a similarity_score for putative pairs of backbone fragments using a sum of products of gaussian functions centred on the c positions within each fragment and on a small number of further virtual atom positions that encode the apparent centre of mass com of each protein as described below we then use these gaussian overlap scores to construct a dp scoring_matrix with sse dependent gap penalties which allows an optimal set according to our scoring_function of equivalent residues to be found and superposed efficiently a particular feature of a scoring_function based on sums of gaussians is that it implicitly favours close contacts without necessarily needing to exclude long_range pairs although we implemented sse dependent gap penalties initially to improve database retrieval_performance we find that using such penalties together with our gaussian scoring_function tends to produce alignments with smaller numbers of aligned residues but with somewhat tighter d overlays of sses than the other alignment_algorithms studied here it should be noted that taylor and orengo first demonstrated the utility of using local coordinate systems they constructed a local coordinate frame for each residue using n c and c h bond vectors but crucially they used it only to compare patterns of intra_molecular vectors rather than inter molecular distances although later approaches that use internal torsion_angles such as yakusa and sabic share a similar insight to our approach the inter molecular scoring_functions in these algorithms can only compare one angle or one distance for each pair of residues in contrast for each position along a backbone our gaussian scoring_function can be used to score the similarity of two local backbone fragments by comparing the positions of up to three residues in each direction along the chain hence we also use gaussian overlap scores to define the secondary_structure of each residue according to its similarity to a model helix or sheet on a contemporary workstation our multi_threaded algorithm can calculate thousands of structural_alignments per second hence we named it kpax being short for thousands of protein_alignments by canonical c coordinate centres per second we have presented kpax a novel protein_structure and superposition algorithm that uses multiple c coordinate systems and a gaussian peptide fragment scoring_scheme to provide a sensitive structural similarity_score for the pairs of structures studied here kpax gives similar alignment statistics to sheba and it generally calls fewer aligned residues with lower rmsds than ce and tm_align however this does not imply low alignment_quality we have shown that the superpositions produced by kpax resemble more closely those produced by tm_align than those of ce and sheba and we have demonstrated that kpax produces tighter superpositions of sses than tm_align in several cases we have also shown that kpax may be used to perform fast and sensitive structural database_searches in our comparison with yakusa and tm_align using the cath database we showed that kpax is faster and more accurate than the very efficient yakusa algorithm and it gives almost the same high_level of fold_recognition as tm_align while being more than times_faster our timing estimates for ce ssm and dali predict even greater speed ups with respect to these algorithms these results demonstrate that kpax is both fast and respectably accurate in comparison with the current state of the art however it still has some caveats for example it produces only a single rigid global_alignment for each pair of compared structures it cannot handle permutations or multi structure pdb files and its spatial scoring_function is not well suited for comparing protein_domains that differ significantly in size nonetheless with the number of solved_protein growing ever more rapidly we believe the publicly_available kpax program will provide a useful tool for high_throughput comparisons of d protein_structures 
