reliability oriented bioinformatic networks visualization we present our protein_protein ppi network_visualization system robinviz reliability oriented bioinformatic networks visualization clustering the ppi_network based on gene_ontology go annotations or biclustered gene_expression data providing a clustered visualization model based on a central peripheral duality computing layouts with algorithms specialized for interaction reliabilities represented as weights completely automated data_acquisition processing are notable features of the system availability robinviz is a free open_source protected under gpl it is written in c and python and consists of almost lines of code excluding the employed libraries source_code user_manual and other supplementary_material are available for download atan observation applicable to most ppi_networks is that they contain proteins and interactions in large_quantities from an information_visualization perspective it is not desirable to present the drawing of a large graph at a single_shot for readability purposes a classical technique employed commonly in the graph drawing field is clustered visualizations in ppi settings simply applying this technique out of a blackbox without incorporating suitable biological semantics is usually not enough we construct a visualization model that applies the clustered visualization technique on the ppi_networks domain by incorporating biological data in the form of go annotations and gene_expression analysis results the core of the model consists of the central peripheral duality to represent the clustered visualization central view contains an abstract graph representing a clustering of the ppi_network based on go annotations or biclustering analysis of gene_expression data each central cluster has its own peripheral window for a detailed view and analysis of intracluster interactions within this model both the created abstract graphs and the ppi_network itself are weighted edge_weights in the ppi_network represent the reliability of the interactions whereas those in the created abstract graphs represent the abundance of reliable cross_talks between clusters an additional feature of robinviz is its incorporation of these weightsare weighted each central node is a collection of proteins from the underlying ppi_network an edge between a pair of central_nodes corresponds to the union of interactions between the proteins included in them associated with each central node there is a peripheral view graph containing all of its proteins and the edges connecting them in the underlying_network if co ontology is used as the verification concept of choice each user selected category from the provided go tree becomes a central node next a set of go annotation resources are selected by the user to assign the proteins associated with that node the marked annotations are merged and filtered according to the set of categories the user may also choose co expression as the verification concept in this case one of the three popular biclustering_algorithms from literature cc bimax and real implemented within the system are presented as alternatives once the algorithm and its specific parameters are decided the biclusters are computed accordingly the set of proteins corresponding to the genes found in each bicluster constitutes a central node edges and the peripheral views are then computed as described previously with regards to the weights if the co ontology concept is in use the weight of a central node is determined by the ppi hit ratio a combined measure of the size of the corresponding ppi subnetwork in the peripheral view and of the density of the high_reliability interactions in it with the co expression concept user is provided with additional options including h value and functional enrichment valuescommon measures of biclustering correlation the weight of an edge between two central_nodes is the weighted_sum of the reliability values of interactions between the proteins included in them finally the interaction reliability value itself is the weight assigned to a peripheral graph edge with such a visualization model each edge in the central graph provides clues of potential false_positives of the underlying ppi_network as far as the provided verification concept and the corresponding central_nodes are concerned analogously each disconnected pair of proteins in a peripheral view provides information regarding the false_negatives we note that the verification process may also be viewed from the opposite_direction giving rise to a bidirectional verification model see_supplementary for further details with regards to the layout computations we note that drawing constraints of weighted graphs are not the same as those of unweighted graphs in drawings of weighted graphs the neighborhood of a heavy weight node should not be too cluttered heavy weight edges should not be too long and the crossings between heavy weight edges should be avoided we provide weighted extensions of the popular graph drawing algorithms in use including the spring embedder the sugiyama style layered drawing and various circular track based_methods each extension aiming to satisfy the mentioned constraints a node coloring mechanism is embedded in the system to provide further clues on go categories each node in a peripheral view is drawn as a colored pie each color represents a high_level go category that the protein corresponding to the node is associated with the pie chart of a central node is colored according to the colors of the nodes in the corresponding ppi subnetwork thus giving a clue regarding the high_level go categories inside the corresponding peripheral view further details regarding a node can be obtained by right clicking on the node enrichment_analysis results including bonferroni_corrected p values and enrichment ratios based on high_level go functional_categories are available a second option available to nodes from both views is the online_information to investigate the interactions of a specific protein in more detail user can display hop or hop neighborhood of a specific protein from a peripheral view we note that in this case not only the interactions residing in the peripheral view graph but also all the interactions from the underlying ppi_network are visualized in the co expression mode heatmap and parallel coordinate visualizations are also generated for a detailed analysis of the bicluster corresponding to a central node further aids include search panel selection focus animation aids session save load capabilities and preconfigured parameter_settings 
