bioxsd the common data_exchange format for everyday bioinformatics web_services motivation the worldwide community of life_scientists has access to a large number of public bioinformatics databases and tools which are developed and deployed using diverse technologies and designs more and more of the resources offer programmatic web_service interface however efficient use of the resources is hampered by the lack of widely used standard data_exchange formats for the basic everyday bioinformatics data types results bioxsd has been developed as a candidate for standard canonical exchange format for basic bioinformatics data bioxsd is represented by a dedicated xml schema and defines syntax for biological_sequences sequence annotations alignments and references to resources we have adapted a set of web_services to use bioxsd as the input and output format and implemented a test case workflow this demonstrates that the approach is feasible and provides smooth interoperability semantics for bioxsd is provided by annotation with the edam ontology we discuss in a separate section how bioxsd relates to other initiatives and approaches including existing standards and the semantic_web availability the bioxsd xml schema is freely_available www bioxsd org bioxsd xsd under the creative commons by nd license the http bioxsd org web_page offers documentation examples of data in bioxsd format example workflows with source codes in common programming_languages an updated list of compatible web_services and tools and a repository of feature requests from the community the bioinformatics community shares a common_feature with a global business corporation namely the diversity of it systems a global corporation owns a myriad of it solutions belonging to its smaller or bigger sub companies implemented in diverse ways and covering diverse aspects and business areas of the corporation to achieve efficiency within the corporation or consortium all the it systems must be able to work together to inter operate to whom correspondence should be addressed in bioinformatics we do not have any corporate management to force standards for interoperability but it is clear that the bioinformatics community would benefit greatly from an it infrastructure that allows more efficient use of biological data and computational_resources in order to support new exploration and discoveries since the scientific_community lacks a centralized authority the community must develop its standards within collaborative_efforts in his visionary comment lincoln stein called for standardization in bioinformatics suggesting web_services http www w org standards webofservices as the unifying platform for programmatic interfaces to tools and data_sources nowadays the elixir project chooses soap web_services for programmatic_access to all considered bioinformatics databases and tools http www elixir europe org page php page wp the web_service interoperability organisation ws i http ws i org supported by the main it companies constrains even more strictly the w cs soap service standards in order to maximize interoperability among the web_services and the web_service programmatic libraries the embrace project european model for bioinformatics_research and community_education has developed guidelines for providing data_sources and computational_tools that are globally interoperable on the web of services the guidelines_recommend ws i compliant web_services with document literal wrapped soap binding technical_details in http www embracegrid info page php page tech documents even while following the w c and ws i standards the practical interoperability within the field of bioinformatics web_services is compromised by the incompatibility or inconsistency of input and output_formats of different services standard exchange formats have been identified as a necessary key to global interoperation by the elixir and embrace projects and by the biohackathon jamboree http hackathon dbcls jp developing an xml schema of standard data_exchange formats called a canonical data model is typical within it system integration in industry business and public administration the standard formats of the exchanged data enable web_service developers to use them as the input and output data_formats eliminating the need to define their own formats and thus saving development and maintenancethree different scenarios of sending data from an output of one web_service to an input of another web_service a plain textual data inside soap messages proprietary parsing and serialization or shims are necessary b different xml formats of output of the first service and input of the second translation of data is in general easier but still necessary c both services using the same standardized exchange format no transformation is necessary and data flow smoothly from one service to another costs this is especially useful when services are developed in a wsdl centric fashion as recommended by embrace the biggest advantage of the common standard formats is however for the users of services the common canonical data model gives users the ability to easily mix and match diverse web_services into custom analysis_pipelines workflows workflows are developed using either ordinary programming or scripting languages or specialized workflow tools like taverna or workflow languages like bpel http docs oasis open org wsbpel wsbpel v html the use of standard canonical formats diminishes the need to translate data between different formats of the output and input of the various tools such translations normally require custom parsers or development of predefined transformers referred to as shims the various scenarios of mix and matching different web_services are illustrated in a standard canonical format of the exchanged data simplifies workflow development and reduces the effort of developing and tailoring analysis_pipelines standard exchange formats aim to save time and resources and decrease the needs for specialized personnel with advanced programming_skills data_formats can be defined in several alternative ways xml schema xsd http www w org standards techs xmlschema is a formal language for defining data types and their formats xsd defines the structure of data_objects restricts the allowed values of atomic data and defines specialization and inclusion relations on the data types xml schema is primarily used to define the structure of xml documents soap messages or from the webservice perspective the data_objects not limited to define xml formats xsd can also be used to define object data models for object oriented programming_languages the source_code needed to define the data_objects in the chosen programming_language can be automatically generated from the particular schema using ordinary tools when used for so_called marshalling and unmarshalling of objects between their xml serialized representation and the computer memory representation such a framework is called a data binding due to a schema and the data binding we can abstract from the textual xml appearance of the exchanged data and regard it as a medium for directly transferring data_objects a number of industry supported tools are available for parsing validating or translating xml data corresponding to a defined xml schema if a schema describes the data format at an appropriately detailed level these widely available frameworks provide us with useful functionality this includes automatic validation of the data ensuring that our tools receive only valid inputs thus improving the security for the providers and eliminating senseless invocations and the need for validating the input in the source_code data validation thus lowers the burden for the tool provider and increases the usability for the user detailed schemas eliminate the need for writing and maintaining special parsers for each type and format of data making the inputs and outputs parsed on arrival unmarshalled into the data binding objects selection and projection or translation among different formats is simplified a detailed xsd makes it possible to semantically annotate details of data_formats using the sawsdl standard semantic annotation for wsdl and xml schema http www w org standards techs sawsdl the detailed xsd can also help develop or even generate comprehensive graphical_user for editing data and invoking services in addition very efficient compression of data can be achieved by schema aware compression tools which use the constraining xml schema to provide the minimum binary encoding of the data examples of such frameworks are emerging and their adoption will be crucial for the increasingly dataintensive bioinformatics for instance related to high_throughput initiated by the embrace project partners we have developed bioxsd bioxsd is the candidate for a reasonably lightweight but formal and detailed standard xml exchange format of commonly used everyday bioinformatics data bioxsd makes web_services i page i i i 
