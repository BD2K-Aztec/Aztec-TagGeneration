gene_expression plida cross_platform gene_expression normalization using perturbed topic models_motivation gene_expression data are currently collected on a wide_range of platforms differences between platforms make it challenging to combine and compare data collected on different platforms we propose a new method of cross_platform that uses topic models to summarize the expression_patterns in each dataset before normalizing the topics learned from each dataset using per gene multiplicative weights results this method allows for cross_platform even when samples profiled on different platforms have systematic_differences allows the simultaneous normalization of data from an arbitrary number of platforms and after suitable training allows for online nor malization of expression data collected individually or in small batches in addition our method outperforms existing state of the art platform normalization tools availability_and matlab_code is available atmicroarray platforms differ from one another in their manufacture labeling methods hybridization procedures number of probes per gene probe length and probe_sequences although these characteristics can affect the dynamic range precision and accuracy of the resulting gene_expression the major modern probe based microarrays e g affymetrix agilent applied_biosystems abi and illumina provide data of similar quality so long as they are normalized appropriately however even microarrays from the same provider can differ in the probes used to target specific genes and these differences can lead to systematic_differences in the relationship between their target abundance and the measured probe intensity the presence of these platform effects is well known and often acknowledged by the admission that gene_expression levels are measured in arbitrary_units however because most comparisons in gene_expression levels are done on a pergene basis among samples from the same platform these platform specific_biases have limited impact and can be safely ignored however quantitative comparisons between gene_expression from different microarray_platforms benefit from correcting these biases given the significant cost of collecting and analyzing human tissue there are significant_benefits to attempting to combine gene_expression from multiple studies to increase_statistical or provide a broader overview of disease the most straightforward method of cross_platform is to standardize the expression of each gene to have the same center using the median or the mean and the same variance on the different platforms using a gene specific affine transform this method has the advantage of being fast easy and having no parameters to tune but it does not work as well as more complex normalization_methods on supporting for example estrogen_receptor er_status prediction by integrating data across platforms of the many different cross_platform normalization_methods that were compared in a recent review by distanceweighted discrimination dwd and cross_platform were identified as superior choices cross_platform consists of a two step procedure in the first step k_means is used to find blocks of similar genes and samples across the platforms then within each block cross_platform fits a combination of additive and multiplicative weights to normalize the data between platforms within this block this process is done multiple times and the results from each run are averaged together to account for various possible clustering patterns their article reported the ability of cross_platform to significantly increase the ability to use data collected on one platform as training data to predict er_status in breast_cancer samples collected on a second platform dwd consists of finding the direction that best separates the data from the two platforms in log vector space and then translating data from each platform along that direction until the data from each platform overlaps implicit in dwds formulation is the assumption that gene_expression data are log normally distributed c f rocke and because it is based on linear_discriminant and that platform differences are the only systematic_differences between the two datasets are separated to whom correspondence should be addressed despite this existing work there are still unsolved_problems in cross_platform one is normalizing data collected on more than two platforms although it is possible to chain cross_platform steps together it is not clear what effect multiple normalization steps will have on the data and what the preferred chaining strategy tree based or linear should be another unaddressed problem in cross_platform is online use in other words normalizing data using a normalization function learned from a previously collected dataset online normalization would be useful for example for applying a gene_signature derived from another platform to new gene_expression where the cross_platform was previously_defined using a calibration dataset we are also interested in addressing use cases where crossplatform normalization is applied among heterogeneous datasets that differ in their sample_composition many methods including dwd but not cross_platform assume that systematic_differences between datasets are because of platform effects and can over normalize by removing all systematic expression differences between the two datasets including those due to differences in the samples represented for example breast_cancer datasets can differ in their expression subtype composition and in these cases over normalization would interfere with gene_signature construction on integrated datasets overnormalization can also interfere with the use of cross_platform in computational purification in which expression_profiles of normal_tissue are used to try to remove the impact of normal_tissue contamination in tumor expression_profiles one way of dealing with heterogeneity between datasets is to assume that the variation is found in a low_dimensional subspace of the dataspace using dimensionality_reduction techniques such as principal_components pca dimensionality_reduction is often used when analyzing gene_expression data from multiple_platforms for example use dimensionality_reduction to summarize gene_expression on multiple_platforms of the same samples but they do not attempt to make measurements on different platforms comparable however because gene_expression analysis measures the quantity of messenger rna_transcripts for a particular gene it is ultimately measuring a non negative quantity this makes topic models such as the latent_dirichlet lda particularly appropriate lda models count observations as coming from a convex combination of multinomial distributions and has been used previously for analysis of gene_expression data gene_expression data provide an inexpensive and high_resolution snapshot of cellular state but comparison and use of gene_expression collected on different platforms and technologies remain difficult methods of cross_platform have already been developed but have limitations that make them unsuitable for some desired uses of gene_expression data we developed plida to provide a cross_platform tool to overcome_these allowing the greater use of platform varied gene_expression data specifically plida is capable of normalizing gene_expression data collected on different platforms even when there are systematic_differences between the samples on each platform it does this by finding a low_dimensional topic model representation of the data and then normalizing this topic model across platforms this allows for the integration of more datasets than cross_platform normalization_methods that assume that all differences between experiments are solely due to the platform plida is also capable of online use by learning platform adjustment weights using existing data and then applying these weights to data collected in the future this allows data collected on different platforms to be used to train classifiers for data that have not been observed at the time of normalization as when a biomarker signature is used in the clinic finally plida is capable of normalizing an arbitrary number of platforms simultaneously 
