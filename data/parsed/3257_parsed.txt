genome_analysis ngs a library for rapid_prototyping of epigenomics software_tools motivation the development of computational_tools to enable testing and analysis of high throughputsequencing data is essential to modern genomics research however although multiple frameworks have been developed to facilitate access to these tools comparatively little effort has been made at implementing low_level programming libraries to increase the speed and ease of their development results we propose ngs a programming library in c specialized in manipulating both next_generation ngs data_sets and genomic_information files this library allows easy integration of new formats and rapid_prototyping of new functionalities with a focus on the analysis of genomic_regions and features it offers a powerful yet versatile and easily extensible interface to read write and manipulate multiple genomic file_formats by standardizing the internal data_structures and presenting a common interface to the data parser ngs offers an effective framework for epigenomics tool development availability ngs was written in c using the c standard it requires minimal efforts to build and is well documented via a complete docxygen guide online documentation and tutorials source_code tests code examples and documentation are available via the website at http www ngsplusplus ca and the github repository at https github com ngs lib ngsplusplus previous_years have witnessed an explosion in the amount of data produced using next_generation ngs_technologies as exemplified by the encode_project encode_project however analysis of these enormous datasets easily gb requires the use of a new generation of computational_tools as the quantity of data produced by ngs machines increases so will the time spent on developing new tools although substantial efforts have been made at integrating them into user_friendly frameworks such as galaxy or genespace genome space relatively little effort has gone into providing the groundwork needed to increase the productivity of ngs developers such as libraries and using standardized formats improvement in these areas would allow developers to greatly accelerate the speed at which they design and deploy new analysis software although certain tool suites such as bedtools and bamtools offer a library or api to assist developers these are generally aimed at giving access to the existing tool functionality rather than facilitating development of new ones as such they are highly_specialized the seqan library offers functionality for the developmental of future tools but it specializes in sequence_analysis rather than genomic_regions and features our proposed library ngs aims to fill this gap by offering a powerful set of generic and flexible options to accelerate development and prototyping of epigenomics analysis tools progress in the development of advanced bioinformatics_analysis tools has undoubtedly been hindered by the lack of available programming frameworks our library aims to assist in filling this gap for the community of c epigenomic developers by giving them access to robust building_blocks thus reducing the time spent on development significantly our efforts are now focused on including additional genomic formats and on increasing the breath of our tutorials future_developments will include the integration of mid level reusable functions such as similarity functions and normalization_methods the website provides a list of tutorials and commented working code examples to assist developers in getting started with the library finally theparsing interface then filtered as needed user_defined functions are executed via our operators and the transformed_data are stored via our writer interface 
