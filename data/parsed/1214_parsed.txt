structural_bioinformatics csb a python framework for structural_bioinformatics computational_structural toolbox csb is a cross_platform python class library for reading storing and analyzing biomo lecular structures with rich support for statistical_analyses csb is designed for reusability and extensibility and comes with a clean well documented api following good object oriented engineering practice availability stable release packages are available for download from the python_package index pypi as well as from the projects websitethe python programming_language is becoming an increasingly popular choice in research with its comprehensive numerical libraries and dynamic type system python facilitates rapid application development but although rapid_prototyping is very practical for experimenting with new techniques or features systematic use of ad_hoc scripting often turns into a burden preventing efficient code reuse this problem is solved with the use of continuously developed well abstracted and tested software libraries productivity in building solid reliable and extensible bioinformatics applications could therefore significantly benefit from the practice of using library code here we introduce the public release of csb a python_library designed for solving problems in the field of computational_structural csb improves over existing libraries such as biopython with its granular consistent and extensible object model and also provides new features like a comprehensive statistical api and support for new abstractions and file_formats this project is a quickly growing class library for structural_bioinformatics providing clean object oriented apis for working with biological macromolecular structures sequences sequence_profiles and fragment_libraries and also a significant amount of statistical modules including many probability_distributions and samplers we put a strong emphasis on quality and reliability achieved through continuous attention to good software design and best practices in test engineering structure chain residue and atom the structure class illustrates examples of csbs design philosophy structure instances are hierarchical objects implementing the composite pattern each level in this hierarchy is represented by a class derived from the base abstractentity every entity thus exposes a standard set of operations such as abstractentity transform which automatically propagate down the tree when invoked at arbitrary level users are free to define their own pluggable abstractentity implementations another aspect of the core library is our i o api for a broad variety of biological file_formats csb bio io for example csb bio io hhpred is the first publicly_available python module to date for working with hhpreds hmm and result files another module csb bio io mrc implements objects for processing cryo_electron maps while csb bio io clans provides i o for clans reading and writing pdb files is done using our pdb api which is part of csb bio io wwpdb it is worth mentioning that the default pdb parser in csb differs_significantly from existing solutions such as biopython structureparser reads and initializes all residues from seqres if available rather than the atom fields in the file atom records are subsequently mapped to the residue objects using a simple and fast alignment algorithm therefore chain objects in csb always contain the complete primary structure of the pdb chain as defined by the seqres fields this feature eliminates the need to relate the pdb atoms back to the real sequence of the protein in questiona process which is often difficult and error_prone when benchmarked over the complete pdb database our seqres mapping algorithm fails for about structures this is frequently an indication of a pdb format issue in this to whom correspondence should be addressed case the parser would raise a characteristic exception upon which the client can switch to an atom based parsing mode we compared the performance of regularstructureparser with pdb i o modules from alternative libraries biopython pycogent and the c based open structure as expected openstructure was the fastest and parsed pdb entries with s per structure csb is positioned between biopython s and pycogent s with s per structure which suggests that the seqres mapping feature comes with an acceptable_performance overhead our library also hosts a collection of statistical_models in the csb statistics namespace among these models are standard uniand multivariate probability_distributions such as the normal and the gamma_distribution and also more exotic distributions such as the multivariate_normal inverse gaussian_distribution used to model multivariate heavy tailed data several estimators based on maximum_likelihood and gibbs_sampling are implemented moreover we provide a general framework for markov_chain monte_carlo and implementation of standard schemes such as random_walk metropolis hastings hamiltonian monte_carlo and replica exchange monte_carlo methods to analyze monte_carlo output are also provided such as for example a non parametric histogram reweighting scheme for the estimation of free_energy differences 
