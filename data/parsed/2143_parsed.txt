g sqz compact encoding of genomic_sequence and quality data large volumes of data generated by high_throughput instruments present non trivial challenges in data storage content access and transfer we present g sqz a huffman coding based sequencing_reads specific representation scheme that compresses data without altering the relative order g sqz has achieved from to compression on benchmark_datasets and it allows selective access without scanning and decoding from start this article focuses on describing the underlying encoding scheme and its software implementation and a more theoretical problem of optimal compression is out of scope the immediate practical benefits include reduced infrastructure and informatics costs in managing and analyzing_large sequencing_data high_throughput methods and instruments generate hundredsof millions to billions of short_reads storage management and transfer of such large volumes of data necessitate an order of magnitude more infrastructure capabilities algorithms and software are required to analyze terabytes of data within practical constraints of resources such as computer processors memory storage time etc and have to cope with the new challenge of handling very large files containing dense data with constantly increasing throughput monetary costs of processing and managing sequencing_data are becoming a larger factor in research planning to that end this article proposes a lossless order preserving and compact encoding scheme called genomic squeez g sqz for sequence_read data and provides a software implementation typically genomic sequencing_data consists of annotated genomic bases in their relative order annotation is required due to reasons such as i nucleotide base_calling algorithms typically report error probability generally called quality_score to account for intrinsic uncertainties in sequence identification processes ii additional information needs to be reported when sequence identification is inconclusive incomplete or erroneous and iii for various downstream_analyses assigning unique to whom correspondence should be addressed identifiers to sequencing_reads is desirable this overhead of storing annotation_information dramatically increases file sizes and any storage reduction approach_requires compressing both base and annotation data the salient_features of g sqz are i specifically_designed for sequencing_reads in known format s and not for arbitrary data ii implicit pairing and simultaneous encoding of base_quality data iii other than counting frequency of base quality pairs no other string matching is employed iv order of base quality data is unchanged and v data can be retrieved selectively without serial scans and decoding from the beginning a feature that can be utilized by multi_threaded parallel_computing applications g sqz is designed for sequencing_reads unlike aligned sequences in sam bam formats since no restriction is imposed on the number of symbols it is possible to include any number of distinct bases including other iupac symbols error symbols etc and larger range covering higher 
