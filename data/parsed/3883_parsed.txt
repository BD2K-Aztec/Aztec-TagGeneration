rapsearch a fast and memory_efficient protein similarity_search tool for next_generation data with the wide_application of next_generation ngs techniques fast tools for protein similarity_search that scale well to large query datasets and large_databases are highly_desirable in a previous work we developed rapsearch an algorithm that achieved a fold speedup relative to blast while still achieving similar levels of sensitivity for short protein_fragments derived from ngs_data rapsearch however requires a substantial memory_footprint to identify alignment seeds due to its use of a suffix_array data_structure here we present rapsearch a new memory_efficient implementation of the rapsearch algorithm that uses a collision free hash_table to index a similarity_search database the utilization of an optimized data_structure further speeds up the similarity searchanother times we also implemented multi threading in rapsearch and the multi thread modes achieve significant_acceleration e g x for thread mode rapsearch requires up to g memory when running in single thread mode or up to g memory when running in thread mode availability_and implemented in c the source_code is freely_available for download at the rapsearch website the applications of next_generation ngs in transcriptome_sequencing and metagenomics projects have resulted in enormous amounts of sequence a key_step to analyzing these sequences is to identify the protein_coding and their putative functions by similarity_searches which for example is useful for studying the functional content or the taxonomic_composition of a microbial_community as a popular protein similarity_search tool blast however has become a bottleneck for the computational_analysis of massive ngs_datasets on the other hand fast algorithms such as blat can work up to times_faster than blast at identifying very similar protein_sequences but will still miss a substantial fraction of weaker similarities to whom correspondence should be addressed to address this challenge we developed a new protein database_search tool rapsearch which follows the seed extension approach as used in blast but is based on flexible length seeds on a reduced amino_acid alphabet of symbols each representing a group of amino_acids when tested on several ngs_datasets rapsearch achieved up to a x acceleration when compared with blast while missing of potential protein hits however because rapsearch uses a suffix_array to index the database sequences for seed identification it uses substantial memory for searches in large_databases here we present rapsearch a new implementation of the rapsearch algorithm which uses a collision free hash_table to index a protein database rapsearch significantly_reduces the memory requirement e g from g to g when searching against the ncbi nr database while further accelerating the similarity search_process another times in rapsearch we also implemented a multi threading technique that allows users to accelerate the similarity_search even further on multi core cpus we used the same ngs_datasets as used into test rapsearch see the example datasets in the supplementary_material the integrated microbial genome img v and the ncbi nr as of non redundant set databases were used as the search databases compares the performance of rapsearch to rapsearch and blast on four query datasets on a computer with four xeon ghz x cpus with g ram see more detailed comparison between rapsearch and blast in since rapsearch uses the same seed extension algorithm as rapsearch it gives identical results as rapsearch except that it runs times_faster due to its optimized data_structure therefore rapsearch retained the high_sensitivity of rapsearch relative to blat see the comparison between rapsearch and blat in and in rapsearch also requires less memory than rapsearch running in single thread mode requires up to g memory one fourth the g memory required by the original rapsearch whereas running in thread mode requires up to g memory which is typically available on regular computer clusters furthermore the thread mode achieved about a x acceleration compared with singlethread mode while the thread mode achieved an almost x acceleration indicating that our multi threading implementation is efficient note that blat runs only slightly faster than rapsearch but times slower than rapsearch rapsearch uses the same probabilistic_model to evaluate the significance of protein sequence_alignments used in blast and reports the e values similarly the output of rapsearch has the same format as blast and can be directly adopted into any analytical pipeline to replace blast as the similarity search_engine therefore rapsearch is readily used for routine protein similarity_searches for ngs_data 
