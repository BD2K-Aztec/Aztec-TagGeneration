databases_and an infrastructure for ontology_based information systems in biomedicine ricordo case study the article_presents an infrastructure for supporting the semantic interoperability of biomedical resources based on the management storing and inference based querying of their ontology_based annotations this infrastructure consists of i a repository to store and query ontology_based annotations ii a knowledge_base server with an inference engine to support the storage of and reasoning over ontologies used in the annotation of resources iii a set of applications and services allowing interaction with the integrated repository and knowledge_base the infrastructure is being prototyped and developed and evaluated by the ricordo project in support of the knowledge_management of biomedical resources including physiology and pharmacology models and associated clinical data availability_and the ricordo toolkit and its source_code are freely_available fromimprovement in computer technology makes it possible to store large volumes of biomedical resources e g mathematical_models of physiological_processes and related data the biomedical community is becoming increasingly aware of the importance of annotating this data in order to enable querying and retrieval as a result communities are engaged in working together to create annotation standards e g miriam and biomedical_ontologies e g obo to provide a consistent method of sharing heterogeneous resources these initiatives have improved the prospect of semantic interoperability of resource annotation based on biology nevertheless reaching this interoperability goal remains a challenge while simple retrieval based on direct matching of terms used in annotation is certainly straightforward search using complex descriptions of biological_entities denoted by those terms involves possibly demanding reasoning over ontologies reasoning is the process by which statements are automatically inferred based on a set of axioms automated reasoning enables flexible retrieval of the applications are deployed in a tomcat application server the applications interact with i the owl knowledge_base which is deployed in a pellet owllink server and ii the virtuoso rdf repository the application does not require access to original data and model resources but has to point to a relevant set of ids thus resources are depicted outside the box a knowledge_base created by the pellet owllink server it is possible to query over the ontologies using owllink api requests and responses the infrastructure includes a web_application for user_interaction with resources as well as web_services that provide programmatic_access to the owl reasoner server on the client side the web_application is implemented in google web toolkit http code google com webtoolkit and hosted on a tomcat http tomcat apache org server with query services running on the server side to interact with the resources rest json http www json org based web_services provide external access to the owl reasoner server thus enabling the integration of reasoning over large ontologies into third_party applications the web_application supports a number of functionalities including i the annotation of resources using a uri for the resource to be annotated and a uri for an ontology term to be associated with that resource to create a related rdf statement that is stored ii the definition of complex terms based on class expressions in owl el and using terms and relations from biomedical_ontologies we call such defined terms composites defining a composite assigns a unique_identifier to this term for the storage and subsequent re use of its definition iii the querying of resources achieved in two steps the first generates a list of ontology_terms by querying the owl knowledge_base the rdf store is then queried for resources annotated with terms from this list in our current configuration the knowledge_base includes biomedical_ontologies relevant to data and model resources this set of core ontologies cordo includes fma pato go cell_type chebi hpo and its class definitions as well as composite terms developed within ricordo the rdf store maps ontology_terms according to the are applied to resolve miriam urns an example of a search is to query the rdf store for resources related to volumes of some part of the heart finding the relevant ontology_terms is achieved by querying the knowledge_base using the manchester owl syntax in this use case pato and inheres in some part of some fma represents the class of volumes of a part of the heart this class definition is used to generate a list of subclasses and equivalent classes from the knowledge_base via the owllink interface this list is then passed to the rdf query engine the application implements a set of templates that allow the formulation of queries each template has a particular form to specify the query terms and relations an example of a query template is relation some term where relation and term refer to an ontology property and a class respectively selecting a particular template generates fields to capture the terms and relations entering into the description of an owl class auto completion of ontology_terms and relations in these fields is supported by the ontology lookup service performance of the overall prototype is largely influenced by performance of the owl reasoning module thus an initial evaluation of reasoning over the cordo ontologies was performed this was carried_out on a server with a dual cpu intel_xeon ghz with gb_memory the start up of the kb involves loading the ontologies s and classification of the ontologies min query times depend on the complexity of the queries as well as caching thus the results of the query pato and inheres in some part of some fma can be retrieved in s the prototypical implementation of the infrastructure in the ricordo context allows searching data and model resources using ontologies the web_applications allow the retrieval and annotation of resources with both terms from reference ontologies and composites of those terms web_services provide programmatic_access to the ontology resources future work will include distribution of the rdf store and owl reasoning the metadata is stored independently of the annotated resources this independent storage supports efficient metadata management and preserves both the structural_integrity and confidentiality of these resources furthermore the separation of data and ontologies as well as the subsequent separation of querying of metadata and reasoning over ontologies allows the storage of large_amounts of metadata without affecting the performance of ontological reasoning the architecture can be employed to support ontologybased metadata management in any area of application the solution 
