sequence_analysis ptpan overcoming memory limitations in oligonucleotide_string for primer_probe motivation nucleic_acid diagnostics has high_demands for non heuristic exact and approximate oligonucleotide_string concerning in silico primer_probe in huge nucleic_acid sequence collections unfortunately public sequence repositories grow much faster than computer hardware performance and main_memory capacity do this growth imposes severe problems on existing oligonucleotide primer_probe applications necessitating new approaches based on space efficient indexing structures results we developed ptpan spoken peter pan pt is for position tree the earlier name of suffix_trees a space efficient indexing structure for approximate oligonucleotide_string in nucleic_acid sequence_data based on suffix_trees it combines partitioning truncation and a new suffix_tree stream compression to deal with large_amounts of aligned and unaligned data ptpan operates efficiently in main_memory and on secondary storage balancing between memory_consumption and runtime during construction and application based on ptpan applications supporting similarity_search and primer_probe have been implemented namely findfamily probematch and probedesign all three use a weighted levenshtein distance_metric for approximative queries to find and rate matches with indels as well as substitutions we integrated ptpan in the worldwide used software_package arb to demonstrate usability and performance comparing ptpan and the original arb index for the very large ssu_rrna database silva we recognized a shorter construction time extended functionality and dramatically_reduced memory_requirements at the price of expanded but very reasonable query times ptpan enables indexing of huge nucleic_acid sequence collections at reasonable application response times not being limited by main_memory ptpan constitutes a major advancement regarding rapid oligonucleotide_string in primer_probe now and in the future facing the enormous growth of molecular sequence_data availability supplementary_material ptpan stand alone library and arb ptpan binary on http ptpan lrr in tum de fast methods for non heuristic exact and approximate oligonucleotide_string are of central importance for in silico primer_probe and evaluation many applications in the field of nucleic_acid diagnostics are based on the usage of indexing structures to speed up computations a prominent example is the pt server the central search index of the software_package arb which is used worldwide for phylogenetic microbial sequence analyses of molecular_markers such as ribosomal_rna based on suffix_trees the pt server is suitable for highly_efficient approximate oligonucleotide_string supporting the design and in silico evaluation of phylogenetic primers and probes widely_applied in microbiology furthermore it is the basic component of the probecheck server and the recently_published comprehensive signature search tool cassis the pt server has to fit into main_memory during construction and application this imposes limitations on the rapidly_growing databases current collections of small_subunit ssu_rrna such as greengenes or silva are already becoming unsuitable for common desktop computers the growth of silva see statistics at http www arb silva de documentation background release reveals the fatality of the memory dependence in near future in addition the pt server relies on hamming distance_metric for approximate string matching concerning primer_probe and evaluation the resulting inability to identify insertions_or indels prohibits the detection of possible sequencing_errors or mutations which can lead to a misjudgment of the sensitivity of primers or probes with severe implications to experimental_results finally the pt server can only be constructed from an arb database limiting its field of application strictly to the arb environment consequently a new memory_efficient and sustainable approach is required coping with the increasing sequence_data flood extended levenshtein edit distance_metric search includes significant matches with indels and thus improves the future in silico prediction of sensitivity_and of an oligo primer probe sequence for the same reason the new approach should support indexing of ambiguous sequence characters and treating matches at ambiguous positions in an efficient way it seems reasonable to treat all ambiguities as wildcard in string matching n character page ptpan combines several techniques to construct a persistent and space efficient suffix_tree the core_structure is a partitioned truncated and stream compressed suffix_tree utilizing the suffix_tree approximate string matching algorithms as well as primer_probe functionality have been implemented the three main steps of the ptpan construction algorithm are as follows data_retrieval and preparation section partition determination and index header storage section we presented ptpan a persistent and space efficient suffix index for oligonucleotide_string which deals with limited main_memory it incorporates enhanced non heuristic exact and approximate search capabilities to find exact as well as approximate matches containing substitutions and indels due to a user_defined search string distance it has been developed and optimized to support similarity_searches and primer_probe in huge nucleic_acid sequence collections highly demanded in molecular microbial diagnostics ptpan is integrated into the arb software_package and available as stand alone library we have reviewed memory_efficient indexing structures according to their viability for non heuristic approximate oligonucleotide_string with respect to our main focus primer_probe in large nucleic_acid sequence_databases section in doing so we have evaluated bwa for suitability page for our approach in practice bwa is a successful non heuristic short read_mapper based on a space saving index structure with fast construction times although short_read is a problem related to oligonucleotide_string for primer probe evaluation it differs in the actual goal bwa aims at the best_hit for a short_read in contrast primer_probe for microbial diagnostics targets at finding all matches with distance smaller or equal to a required value to the query string every match is important to detect in silico sensitivity_and of a primer probe as good as possible in particular to identify potentially cross_reacting non target_sequences and respective organisms in the analyzed data_collection bwa performed approximate string matching faster than ptpan for default_settings though missing significant matches to get thorough enough results for careful primer probe evaluation bwa parameter_settings had to be adopted resulting in a performance worse than ptpan furthermore essential information for advanced evaluation of primer probe candidates is not provided see section extending bwa by required functions would lead to a further incalculable slowdown as we concluded we focused our further efforts on suffix_trees on secondary storage the remaining challenges of high space requirements and inability to efficiently carry out approximate string matching were targeted we employ partitioning and truncation combined with a new suffix_tree stream compression to reduce space requirements and optimizing the index structure for topdown traversal required by approximate oligonucleotide_string though the achieved memory_efficiency has an implication for the current_implementation of probedesign the length of probes is limited to the depth of the suffix_tree at maximum nevertheless this is sufficient for many applications such as pcr or fluorescence_in fish designing longer probes is possible using a sideway if no other options exist probematch results e g of a mer probe target candidate provide context information of each match with this a target candidate sequence can be elongated according to the matching base characters within the context since probematch is not limited to mers this procedure can be repeated iteratively in order to design longer oligonucleotide_probes alternatively concatenation of overlapping mer probe target_sequence candidates could be applied an index providing comparable functionality targeting the same field of application namely primer_probe based on oligonucleotide approximate string matching is the widely used pt server integrated into the arb software_package a detailed comparison between pt server and ptpan revealed similarities as well as important differences as public nucleic_acid may contain ambiguous base characters proper handling is required both indexes treat all ambiguities as n character during build and wild card during search the great advantage of this is the identification of matches containing ambiguous characters which helps to optimize in silico primer probe evaluation in addition both indexes support basic and weighted match mode section this is extremely advantageous during search and evaluation of diagnostic oligonucleotide primer probe candidate_sequences in particular a weighted mismatch allows to measure a fine grain distance between a match and the search sequence string taking type and position of substitutions into account this enables rating of in silico specificity and sensitivity of a probe by evaluating its distance to target and non target_sequences this is important when predicting the ability of an oligonucleotide_probe to cross react with a non target oligonucleotide sequence stretch despite mismatches both ptpan and the pt server return a meaningful result list for each query facilitating fast evaluation of query hits significantly the list incorporates hit names absolute and relative_position in the original multiple_alignment number of mismatches weighted mismatch scores and the sequence contexts in a multiple differential alignment for list creation the original sequence_data are required to retrieve context information to avoid memory intensive permanent accesses to the original database during applicationas with the pt serverptpan incorporates all sequence and alignment information making it independent of the sequence_data source besides the similarities there are some major_advantages of ptpan compared with the pt server for approximate string matching the pt server utilizes the hamming distance_metric for finding exact_matches and those with substituted bases however it misses matches with indels this could be a major_drawback when trying to assess in silico coverage and specificity of diagnostic oligonucleotide primer probes mcilroy and colleagues have recently shown that oligo probes can form stable hybrids with non target_sequences despite indels leading to false_positives in fish thus the ability to include indels into the probe design and evaluation process is of great interest ptpan utilizing the levenshtein distance_metric also detects matches with real indels and those resulting from sequencing_errors at the target_position sections and this is a major advancement for in silico primer_probe the pt server relies entirely on source sequences in the arb database format for index construction ptpan currently supports arb databases and multifasta files moreover it provides an interface easy to implement for other sequence data_formats ptpan is available as stand alone library too hence it is easily usable for oligo string matching beyond the arb software environment finally ptpans central advantage over the pt server is its significantly_lower main_memory demand during index construction and application section the pt server has comparable memory_requirements on disk as it reduces space consumption by truncation but significantly_higher demands in main_memory section this causes severe problems when trying to applyptpan is a space efficient persistent nucleic_acid sequence_data index with suffix_trees on secondary storage as core_structure it combines partitioning truncation and a new stream compression technique it performs well for approximate oligonucleotide_string probe design and similarity_search functions all taking indels into account even largest gene sequence_databases can be searched efficiently on common desktop computers now and in the future due to ptpans superior sustainability as future core component of the worldwide used software_package arb complementing or even replacing the arb pt server it will offer thousands of users advanced functionality with significantly_reduced hardware requirements currently the only ptpan trade_off is the slower though still reasonable query time to overcome this constraint facing the continuous data flood the efficient usage of multicore architectures by parallelization could be a promising continuative approach 
