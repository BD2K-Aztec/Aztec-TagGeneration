goldilocks a tool for identifying genomic_regions that are 'just right' we present goldilocks a python_package providing functionality for collecting summary_statistics identifying shifts in variation discovering outlier regions and locating and extracting interesting regions from one or more arbitrary genomes for further analysis for a user provided definition of interesting availability_and goldilocks is freely_available open_source distributed under the mit licence source_code is hosted publicly at https github com samstudio goldilocks and the package may also be installed using pip install goldilocks documentation can be found atgoldilocks is a python_package designed to take a census of sequence_data in order to find regions that meet some criteria that are just right for further analysis it can be used by importing the package into a standalone script or via the command_line the tool accepts sequence_data which could be from one or more individuals with one or more sequences from each organized into chromosomes or contigs and stored as fasta goldilocks must also be supplied with a desired census strategy defining the criteria of interest such as occurrences of individual nucleotide_bases motifs deviations from a reference or gc_content chromosomes or contigs are slid beneath a window of a user_defined length and overlap and the strategy is applied over all input genomes goldilocks was developed as part of a quality_control study to first determine what constitutes bad quality data for a large study a pipeline was constructed to repeatedly perform variant_calling withholding one sample from the analysis in turn a given samples downstream effect could then be quantified by measuring the difference in the accuracy of a run in the absence of that sample however repeated application of computationally expensive_and analysis of whole genomes was unsustainable the problem space needed to be reduced to a representative region the genomes goldilocks for our study we defined a mb region as just right if it contained within percentiles of the median number of single_nucleotide snps appearing over all regions of our genome_wide these regions were then sorted by the number of snps appearing within the corresponding regions in a separate genotyping chip study this allowed us to maximize the number of sites at which to check consensus between a run of our quality_control pipeline and the snp chip goldilocks was originally designed to return regions that matched these explicit criteria across multiple samples the package has since been made more flexible and can be used to find regions of interest based on any arbitrary criteria such as gc_content density of target motifs pre defined metrics and uncalled nucleotides ns thealternative counting mechanisms such as those available in galaxy through emboss or various statistics tools in the galaxy toolshed can accomplish similar functionality however as different tools require specific input_formats and produce a variety of output_formats additional data_handling steps are required as part of any pipeline making_it to customize or swap counting plugins goldilocks is not intended to replace already existing dedicated software for counting tasks that require specific optimized data_structures such as khmer for counting k_mers but instead provides a general suite of swappable counters genome_browsers such as the ucsc_genome allow the user to view a variety of tracks displaying the locations of different genomic properties interpreting large_amounts of sequencing_data by eye in such browsers can be difficult alternative browsers that allow zoomed browsing of interesting regions such as the layercake visualization_tool attempt to ameliorate this problem goldilocks will automatically find regions of interest suitable for further browsing or plotting if required epiviz and epivizr combine both statistical_analysis and visualization connecting a web_based browsing environment to an r bioconductor based calculation environment users interactively add more tracks or plots to further explore the areas surrounding the regions of interest in the genome their platform is comprehensive and provides a far larger scope for analysis than goldilocks we see goldilocks as a lightweight python solution for straightforward queries and a useful addition to existing bioinformatics_pipelines goldilocks has minimal dependencies the core requires just numpy and matplotlib to enable plotting we provide a command_line that offers access to the base functionality of the package to users without having to write a script of their own for example usage see the supplement goldilocks is packaged with a testing suite results and coverage of which are available online along with documentation source_code is publicly_available under an open_source licence for review and community contribution 
