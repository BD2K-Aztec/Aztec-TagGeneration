sequence_analysis graph accordance of next generation sequence assemblies motivation no individual assembly algorithm addresses all the known limitations of assembling short_length sequences overall reduced sequence contig length is the major_problem that challenges the usage of these assemblies we describe an algorithm to take advantages of different assembly algorithms or sequencing_platforms to improve the quality of next generation sequence ngs assemblies results the algorithm is implemented as a graph accordance assembly gaa program the algorithm constructs an accordance graph to capture the mapping information between the target and query assemblies based on the accordance graph the contigs or scaffolds of the target assembly can be extended merged or bridged together extra constraints including gap sizes mate_pairs scaffold order and orientation are explored to enforce those accordance operations in the correct context we applied gaa to various chicken ngs assemblies and the results demonstrate improved contiguity statistics and higher genome and gene coverage availability gaa is implemented in oo perl and is available here http sourceforge net_projects gaa wugi the need for cost efficient whole genome_assemblies has driven the adoption of many assembly programs exclusive to short sequence_lengths such as cabog newbler roche life_sciences abyss allpathslg and soapdenovo compared to sanger read based assemblies ngs assemblies are less representative of genome content especially in regions with repetitive structure for example segmental_duplications furthermore fragmentation of assemblies can limit further annotation processes such as gene prediction in silico several factors present_challenges for ngs assembly however the predominant barriers to sequence_assembly are repeats and polymorphism in genomes typically one assembly algorithm can outperform others in assembling certain genomic_regions even the same assembler performs differently over varying parameter_settings such as different k_mer sizes a longer k_mer is better for resolving high coverage repetitive_regions whereas a shorter k_mer is better for finding paths in low coverage polymorphic regions the latter is analogous to what is a known hurdle for transcriptome_assemblies which is significantly unbalanced representation of each transcript due to expression_level variation in different tissue_types moreover sequencing_platforms have various biases thus assemblies generated from different platforms can complement each other therefore a combination of assemblies from different sequencing_platforms or algorithms or parameter_settings for the same algorithm is very promising to improve assembly qualities existing hybrid assembly and merging methods are mostly developed for small_genomes such as mira http sourceforge net apps mediawiki mira assembler index php title main page minimus http sourceforge net apps media wiki amos index php title minimus and maia reconciliator and gam can only merge assemblies generated from the same dataset we have developed an efficient algorithm to generate an accordance assembly from two or more large genome_assemblies it uses the blat aligner to align a query assembly to a target assembly based on the alignment we construct an accordance graph which is searched for maximal sub paths contigs along each sub path are candidates to be merged together besides weighing the edges in the graph using alignment scores contig lengths and overhang sizes scaffold information including order orientation and gap sizes are fully explored to validate each merging event the query and target assemblies go through a misassembly detection stage where potential breakpoints were evaluated by the ce statistic this algorithm is implemented as a program named gaa it takes as inputs two draft assemblies one as the target and the other as the query the query is utilized to improve the target assembly we applied gaa to the chicken genome gallus_gallus with an estimated genome_size of gb two de_novo assemblies were generated with newbler and cabog and one illumina assembly was generated with soapdenovo the raw coverages of data and illumina data are and fold respectively in the era of ngs assemblies with fragmented representation all methods need to be explored that will improve sequence contig and scaffold length a post assembly that will blend the strengths of different assembly algorithms or sequencing_platforms is one option we have pursued here gaa can significantly improve contiguity of ngs assemblies and resolve most assembly mistakes in the less stringent assembly the proposed algorithm can also recover missing genes our previous results showed that both and illumina de_novo assemblies can reveal some novel sequences that are missing in the sanger reference assembly the significant_improvement in the merged ns assembly further shows the advantages of cross_platform merging the target assembly is the master and lays out the backbone of the final assembly then the query assembly is explored to piece together fragmented regions in the target assembly some errors from the query assembly could be introduced into the final assembly if the query assembly is more accurate at the base level we can update gaa in the future version to generate a more accurate merged assembly by swapping target assembly bases with query assembly bases the underlying algorithm of gaa uses evidences from gap sizes mate_pairs to enforce the correct context and prevent query errors there are more mate_pairs that are satisfied in the merged assemblies which shows the strength of gaa to generate better connectivity by merging assemblies in the context besides overlaps since the gaa algorithm can detect and avoid most misassembled regions due to the lower stringency of query assemblies we suggest choosing the more stringent assembly as the target and using the relaxed assembly to improve it in summary we have implemented a graph accordance assembly program which can significantly improve the contiguity and gene coverage of ngs assemblies it provides an efficient method for reducing biases of different sequencing_platforms gaa can also be easily adapted to combine transcriptome or metagenomic assemblies generated with different k_mer sizes as suggested by surget groba and montoya burgos funding national_human grant hg to g m w 
