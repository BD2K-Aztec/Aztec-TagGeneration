bioinformatics original paper genome_analysis detecting genome_wide epistases based on the clustering of relatively frequent items motivation in genome_wide gwas up to millions of single_nucleotide snps are genotyped for thousands of individuals however conventional single locus based_approaches are usually unable to detect genegene_interactions underlying complex_diseases due to the huge search_space for complicated high order interactions many existing multi_locus approaches are slow and may suffer from low detection_power for gwas results in this article we develop a simple fast and effective algorithm to detect genome_wide multi_locus epistatic_interactions based on the clustering of relatively frequent items extensive experiments on simulated_data show that our algorithm is fast and more powerful in general than some recently_proposed methods on a real genome_wide casecontrol dataset for age_related amd the algorithm has identified genotype combinations that are significantly_enriched in the cases with recent development in high_throughput single_nucleotide snp_genotyping technologies the number of snps that can be typed simultaneously on a dna_chip has grown from in to million in genomewide genotype data as well as phenotype information for some common diseases have been accumulated in an accelerated rate for the past_years e g these genome_wide gwass have proven to be a powerful approach to reveal susceptibility_genes for some complex_diseases nevertheless the primary analysis paradigm for gwas is dominated by single locus based statistical_approaches however epistatic_interactions epistases among multiple genes play_an in the pathogenesis of human complex_diseases many studies have also to whom correspondence should be addressed demonstrated that epistasis contributes to diseases such as breast_cancer diabetes obesity and coronary_heart single locus based_approaches may not be able to detect all interacting genes especially for those with small marginal_effects recently the problem of detecting genome_wide epistases has drawn much attention many computational algorithms have been proposed existing_approaches for searching genegene or snpsnp interactions can be grouped into four broad categories exhaustive_search stochastic_search data_mining machine_learning and stepwise search methods based on exhaustive_search enumerate all possible combinations of multiple_loci and perform desired interaction tests e g or logistic_regression for each combination proposed a combinatorial partitioning method cpm which searches all possible ways of dividing m locus genotype combinations into k genotypic partitions and selects the best one to account for quantitative_traits cpm is only computationally_feasible for small_datasets even for two locus interactions due to the enormous_number of possible partitions inspired by cpm proposed a multifactor_dimensionality method mdr which partitions the multi_locus genotype space into two classes and exhaustively searches for the best classification model in predicting the disease status it utilizes repeated crossvalidations and permutation_tests to evaluate classification_accuracy and significance respectively similar to cpm mdr cannot handle large_datasets even for two locus interactions though many extensions of mdr have been proposed recently including mb_mdr and rmdr they are unable to tackle large gwas data efficiently in another attempt proposed a boolean operationbased screening and testing boost method which can detect two locus interactions for currently available gwas data however because the search_space grows exponentially with the number of involved genes snps methods based on exhaustive_search can hardly be extended to include more than two loci instead of explicitly enumerating all possible combinations of m locus stochastic_methods use random_sampling procedures to search the space of interactions among them bayesian epistasis association_mapping beam is one of the representatives beam takes casecontrol genotypes as its input and iteratively uses the markov_chain mcmc page we first discuss the control of false_positive using simulated background genotype data then compare the performances of edcf mb_mdr boost snpruler epimode and chisq on different disease_models at last we present the results of edcf on a real gwas dataset the programs of mb_mdr c implementation boost bit snpruler and epimode are downloaded from the websites of their authors recall that mbmdr is a recent extension of mdr boost is a fast exhaustive_search approach to detect two locus interactions snpruler uses rule inference and can deal with three locus and higher_order interactions and epimode is a recent extension of beam using stochasticby partitioning all d locus genotype combinations into two groups mdr significantly_reduces the dimensionality of the d locus genotype combination space from d to which potentially improves its detection_power however the simple partitioning method utilized by mdr may not work well in practice especially when the case control ratios of some genotype combinations are close to the overall ratio mb_mdr and rmdr are two recent extensions of mdr to address this problem the authors propose to separate all multi_locus genotype combinations into a high_risk group a lowrisk group and an unknown risk group to determine which group a genotype combination belongs to mb_mdr uses the test and rmdr uses fishers_exact in general mb_mdr and rmdr outperform mdr especially in the presence of low minor_allele or genetic_heterogeneity however fishers_exact for every genotype combination causes rmdr running even slower than mdr though mb_mdr is faster than mdr the repeated cross_validations and permutation_tests are still time consuming and prevents its usage in large_scale gwas_studies furthermore the validity of test requires that all cells in the contingency_table are not very small when the minor_allele is very low there are always many empty entries in a multilocus interaction contingency_table and the test based grouping of mb_mdr will be inefficient edcf clusters the genotype combinations into three groups by assuming that the counts of multi_locus genotype combinations follow binomial distributions edcfs clustering is more robust than mb mdrs grouping and much faster than rmdrs grouping in our experiments edcf outperforms mb_mdr when f m for models and while in the other cases edcf has similar performance as mb_mdr after the clustering edcf obtains a contingency_table and uses the test to evaluate the significance of the interaction by avoiding the cross_validation step edcf is much faster than mb_mdr and rmdr though edcf generally outperforms other algorithms in the simulations it has some limitations since edcf separates genotype combinations into g g and g based on clustering relatively frequent items when h is small the disease related genotype combinations may be not significant enough to be relatively frequent items in such a case all genotype combinations may be clustered into group g and edcf will lose some power e g in supplementary on some two locus models with no marginal_effects and low h edcf currently cannot directly address the problem of population_stratification which if exists may alleviate the type_i of edcf one should always test for and correct stratification if it exists before performing association tests finally like many data_mining approaches edcf has some parameters such as k f s s and that need to be specified by the user the choices of these parameters may also affect the efficiency and or power of edcf although we have provided some default values in this article based on simulations it would have been better if the parameters were chosen automatically based on input_data parameter k is the number of interaction modules that one wishes to investigate and f s controls the buffer size of interaction modules involving a small number of loci both parameters primarily depend on the available computational_resources obviously edcf runs faster with a smaller f s but with the price of possibly missing some real interactions in our experiments we chose s and according to simulations these values might be too conservative for real_data analysis of the same sizes because of correlations among snps and ld structures in real_data how to choose proper values for s and using real gwas data could be computationally_challenging we will investigate this in our future work in this work we have only tested disease_models with risk allele_frequencies detecting rare snps in association studies is a much harder problem which itself requires special_attention and novel algorithms page in this article we have developed a new algorithm called edcf based on the clustering of relatively frequent items edcf groups all d locus genotype combinations into three groups and uses the statistic to measure significance to control type_i we have combined bonferroni_correction and permutation_tests and proposed a fast multi test correction_method by combining the advantages of the test and mdr edcf is an effective and efficient algorithm for detecting epistatic_effects for gwas extensive experiments on simulated_data illustrate that edcf is more powerful in general in finding epistatic_interactions than some of the recently_proposed algorithms in terms of efficiency edcf is comparable to boost in detecting two locus interaction modules and is much faster than mb_mdr snpruler and epimode on a real genome_wide amd dataset several genotype combinations reported by edcf are significantly_enriched in cases which may imply their involvement and association with amd as interaction modules 
