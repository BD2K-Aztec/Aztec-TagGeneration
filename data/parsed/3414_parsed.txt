pannzer high_throughput functional_annotation of uncharacterized_proteins in an error_prone environment motivation the last decade has seen a remarkable growth in protein databases this growth comes at a price a growing number of submitted protein_sequences lack functional_annotation approximately of sequences submitted to the most comprehensive protein database uniprotkb are labelled as unknown protein or alike also the functionally annotated parts are reported to contain of errors here we introduce a high_throughput tool for more reliable functional_annotation called protein annotation with z_score pannzer pannzer predicts gene_ontology go classes and free_text descriptions about protein functionality pannzer uses weighted k nearest_neighbour methods with statistical_testing to maximize the reliability of a functional_annotation results our results in free_text description line prediction show that we outperformed all competing_methods with a clear margin in go prediction we show clear improvement to our older method that performed well in cafa challenge availability_and the pannzer program was developed using the python programming_language version the stand alone installation of the pannzer requires mysql_database for data storage and the blast blastall v tools for the sequence similarity_search the tutorial evaluation test_sets and results are available on the pannzer web_site pannzer is freely_available ekhidna biocenter helsinki fi pannzer a correctly annotated proteome is the cornerstone of a successful genome research_project and therefore accurate and reliable functional_annotation tools are needed however due to the huge amount of various sequence_data and diverse methods used in the functional_annotation processes a large part of these sequences are at risk of being annotated incorrectly the last decade has seen an explosion in the number of genomes being sequenced and the near future will increase the number far higher experimental_characterization is not a viable_option for low_throughput methods are time consuming complex and expensive and therefore restricted only to small_subsets of proteins of interest annotations are also generated by biocurators by interpretation of experiments from literature the quality of these literature based annotations relies heavily on the expertise of biocurators while experimental methods have problems the computational_methods struggle on a whole new level of challenges the error_rate of computationally annotated databases has been increasing rapidly in recent_years a recent study estimates the error level has risen from to within the last decade in the gene_ontology go databases the error levels grow even higher among computationally created go annotations the error level has been estimated to be as high as and even within manually_curated go annotations between and the increasing error_rate in these databases is believed to stem mostly from the propagation of erroneous annotations with usage of poorly performing in silico functional_annotation tools we have designed a high_throughput annotation tool called protein annotation with z_score pannzer in order to create more reliable annotations and thereby reduce further error propagation in annotation projects pannzer uses the whole sequence_similarity neighbourhood and weighted statistical_testing in the annotation_process in an attempt to maximize the evidence for correct annotation in doing so pannzer prevents function transfer from incorrectly annotated sequences to an uncharacterized sequence here we evaluate pannzer in two separate tasks in the prediction of free_text description lines de and in the prediction of go classes the description line is a free_text sentence about the protein_function written by biologists it contains valuable information in human_readable format therefore it is surprising how little attention correct de annotation has gotten in recent_years some methods do exists e g genequiz pedant autofact and blannotator we introduce a principled metric for the evaluation of description prediction which allows numerical comparison of description similarities in the prediction of free_text description line we show a clear improvement to other existing_methods the go functional_annotation has become the standard tool in computationally based bioinformatics analyses due to this the majority of method development in functional_annotation is nowadays focused on go classes e g gotcha argot and blast go a more comprehensive list of go prediction_tools can be found from our results show an improved_performance over alternative scoring_methods and we also show improvement to our earlier version of pannzer that was ranked third in critical assessment of protein_function algorithms cafa challenge the evaluation of the pannzer method performance was conducted using description prediction and also prediction of go classes for the description prediction and the go prediction we used evaluation test_sets described in section we did the go evaluation to estimate the performance improvement of our latest_version of pannzer against the pannzer version that participated in the cafa challenge as the amount of newly submitted sequences grow rapidly in public_databases and the functional_annotation is critical step before studying these sequences we need more reliable_methods for in silico functional_annotation the pannzer method outperforms competing_methods in functional_annotation prediction_accuracy and brings novel statistical testings to the analysis in particular the k nearest_neighbour clustering with statistical testings bring major_advantages over traditionally used nearest_neighbour method e g best blast hit our results in description prediction show that the use of the nearest_neighbour does not bring any advantage in functional_annotation it is remarkable how evenly correct and incorrect description hits are distributed over the blast result lists in the standard blast using default_parameters against the noself database the correct hit count does not rise above incorrect count in any index of the result list including the best_hit it seems that the probability of having correct annotation from the best_hit is no different to any other hit in a blast result list free_text description is the most comprehensive way to describe functionality of a protein and is required for every protein_sequence that is submitted to a public sequence database the current release of uniprotkb contains more than million unique descriptions about protein functions and go annotations that contain today non obsolete live terms despite a large fraction of synonymous descriptions the difference is considerable go annotation suffers of biased usage of large and general go terms which explains the unexpectedly good performance of the naive go prediction method figs and according to our results naive method outperforms the best blast hit method clearly this highlights the fact that closest neighbour based_methods should be avoided surprisingly description prediction has obtained recently very little attention in the bioinformatics community this could be because the free_text annotation is seen as an ill defined problem without effective evaluation metrics and difficulties in handling synonyms and homonyms to alleviate these shortcomings to some extent we propose dsm as a new standard in description evaluation since descriptions and gos are used in different contexts both annotations are needed de annotations are used by the biologists andthe improvement of the pannzer method compared with version that participated in cafa challenge are shown other non computationally related researchers whereas go terms are frequently used in computational functional analysis and have become the standard in e g enrichment_analysis pannzer is the only tool to our knowledge that does both types of prediction functional_annotation of uncharacterized_proteins in an error_prone environment 
