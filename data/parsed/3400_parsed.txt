databases_and owl perl creating perl modules from owl class definitions support for utilizing owl ontologies in perl is extremely limited despite the growing importance of the semantic_web in healthcare and life_sciences here we present a perl framework that generates perl modules based on owl class definitions these modules can then be used by other software applications to create resource_description rdf data compliant with these owl models availability owl perl is available for download from cpan under the module name owl perl it is released under the new bsdthe semantic_web can be envisioned as two layerslinked data and explicit knowledgeencoded in two technologies resource_description rdf http www w c org rdf and web_ontology owl http www w org tr owl features respectively in rdf data_points or data entities are named by universal resource indicators uris and pairs of uris are linked together with meaningful predicates that describe the relationship between the two uris the resulting network or graph is then interpreted by knowledge encoded in owl ontologies the uris become explicitly typed as instances of ontologically defined classes based on the network of predicates and values surrounding them thus a uri with the predicates color texture taste weight with values red crunchy sweet g might be classified as type apple by a fruit ontology or as basketable item by a gift basket ontology though the above is a scenario in which ontologies are used to interpret and classify existing data ontologies can also be used to guide the creation of structured data in a manner akin to how an xml schema is used to constrain the structure of a valid xml document this is useful as it allows one to generate and publish data compliant with some defined knowledge structure in order to facilitate others integration and interpretation of that data the bioinformatics community is rapidly adopting semantic_web technologies though there is a wide variation in the extent to which formal logics have been adopted by the various projects at one end of the spectrum perhaps the most recognized community is to whom correspondence should be addressed the open biological ontologies project obo obo ontologies are primarily declarative class hierarchies where the conditions for class_membership are not part of the computable definition of the class at the other end of the spectrum are ontologies such as phosphabase and the lipid ontology where each class is axiomatically defined by the properties and property values that are required by members of that class it is these logically rich ontologies that we aim to support with owl perl support for both rdf and owl is strong in the java programming_language in the perl programming_language there are several projects that provide support for rdf including rdf core http search cpan org dpokorny rdf core however perl support for owl is extremely limited onto perl and go perl http search cpan org cmungall go perl both handle obo style ontologies but cannot consume the full breadth of owl logical constructs moreover these two projects are primarily aimed at manipulating the ontology itself rather than creating instance data class owl http search cpan org dist class owl intends to create perl classes from owl ontologies however the code appears to be non functional is not documented and has not been updated for more than a year so we assume the project has been abandoned here we present owl perla perl application that consumes owl dl ontologies and creates perl packages representing each class in that ontology in a manner similar to jastor in java each perl object includes stub methods allowing you to get and set the properties that define that class importantly instances of that perl object can serialize themselves as ontologically valid instance data in rdf format owl perl was developed specifically to enhance perl code support for the sadi semantic automated discovery and integration semantic web_service project however any project that must programmatically generate rdf data compliant with owl dl definitions could benefit from owl perl we believe the audience for owl perl will expand as richer description logic owl ontologies become increasingly pervasive in bioinformatics 
