appagato an approximate parallel and stochastic graph querying tool for biological_networks motivation biological network_querying is a problem requiring a considerable computational effort to be solved given a target and a query network it aims to find occurrences of the query in the target by considering topological and node similarities i e mismatches between nodes edges or node labels querying tools that deal with similarities are crucial in biological network_analysis because they provide meaningful_results also in case of noisy_data in addition as the size of available networks increases steadily existing algorithms and tools are becoming unsuitable this is rising new challenges for the design of more efficient and accurate solutions results this paper_presents appagato a stochastic and parallel algorithm to find approximate occurrences of a query network in biological_networks appagato handles node edge and node label mismatches thanks to its randomic and parallel nature it applies to large_networks and compared with existing_tools it provides higher performance as well as statistically_significant more accurate results tests have been performed on proteinprotein_interaction annotated with synthetic and real gene_ontology case studies have been done by querying protein_complexes among different species and tissues availability_and appagato has been developed on top of cuda c toolkit framework the software is available online http profs sci univr it bombieri appagato technological_advances have led to the inference and the validation of structured interaction networks involving genes proteins drugs phenotype and diseases according to the data type such networks are referred to as i proteinprotein_interaction ppi_networks representing either physical or functional interactions among proteins ii gene_regulatory that express how the activity of genes is regulated iii metabolic_networks describing biochemical_reactions between chemical compound of cells and iv signalling_networks representing inner outer cell communications a typical example that highlights the advantages and possibilities of analysing interaction relationships is protein_function although sequence_homology is commonly used to functionally annotate proteins a great amount of them remained uncharacterized in disease studies genes showing similar_phenotypes tend to be neighbours in protein_interaction and their aggregation in connected sub networks is effective to detect biomarkers also finding similar functional and topological sub networks helps analysing the conservation among species in all these applications graphs serve as the underlying structures for representing biological_networks for the sake of clarity in this article we use the terms graph and network indistinctly and graph algorithms solve problems such as network_alignment network_querying motif extractions and network perturbation malod dognin and pr zulj in this article we address the problem of approximate network_querying which finds in a target network similar occurrences of a so_called query network the notion of similarity takes_into both the similarities between target nodes and query nodes and a cost measuring the differences of nodes and their connections an approximate network_querying algorithm has to find the query occurrences among all possible with the maximum combined similarity querying tools that deal with similarities are effective in biological network_analysis because they provide results also in case of noisy_data they are also suitable in the case of partial knowledge of users when formulating queries furthermore they can be used to compare data from different species where some fundamental and functional structures are partially preserved solving approximate network_querying implies applying instances of subgraph isomorphism which is a np complete problem in literature several heuristics have been proposed to solve such a problem in reasonable running time examples_include restricting the topology of queries to paths or trees applying network_alignment strategies dealing with node similarities and ignoring the query topology fixing the topology and computing differences of node labels other methods consist of building indexes to reduce the query time filtering the set of possible similar target data to find only exact occurrences of the query in the network finding the largest part of the query exactly contained in the target graph and replace the query edges not present in the target with paths we have created appagato a tool that relies on an iterative sampling method to compute functional and topological similarities between a query and a target network through a matching probability matrix and a weighted sampling procedure it selects a seed from which the querytarget matching starts then by associating a cost to each approximation it iteratively extends the match by selecting the approximations with the lowest possible cost the algorithm runs k times and returns a set of k approximate matches appagato performs approximate network_querying by considering the topology of query taking_into node and edge deletions together with differences on node labels to speed up the querying process in large biological_networks appagato has been implemented to run on graphics_processing gpus owing to their low_cost high performance and easy integration to any personal computer gpus have been increasingly_applied to accelerate bioinformatics problems our aim is to handle large biological_networks in a reasonable time yielding accurate results we compare appagato with resque and nema because to the best of our knowledge they are the most efficient and stable tools in literature close to appagato on both the problem they address and on the approximation concept they assume we run the tools with different ppi_networks as input and compared nodes by using similarities of protein_sequences and functional gene_ontology we extensively compare the tools in terms of running time costs of returned matches and accuracy in finding protein_complexes among different species the results show that appagato outperforms the other two tools yielding more accurate results on large ppi_networks 
