gene_expression matrix_eqtl ultra_fast eqtl_analysis via large matrix operations motivation expression_quantitative eqtl_analysis links variations in gene_expression levels to genotypes for modern datasets eqtl_analysis is a computationally_intensive task as it involves testing for association of billions of transcript snp single_nucleotide pair the heavy computational_burden makes eqtl_analysis less popular and sometimes forces analysts to restrict their attention to just a small subset of transcript snp_pairs as more transcripts and snps get interrogated over a growing number of samples the demand for faster tools for eqtl_analysis grows stronger results we have developed a new software for computationally_efficient eqtl_analysis called matrix_eqtl in tests on large_datasets it was orders_of than existing popular tools for qtl eqtl_analysis while finding the same eqtls the fast performance is achieved by special preprocessing and expressing the most computationally_intensive part of the algorithm in terms of large matrix operations matrix_eqtl supports additive linear and anova models with covariates including models with correlated and heteroskedastic errors the issue of multiple testing is addressed by calculating false_discovery this can be done separately for cis and trans eqtls the goal of expression_quantitative eqtl_analysis is to identify single_nucleotide snps which are significantly associated with expression of known genes these associations can help reveal biochemical_processes underlying living_systems discover the genetic_factors causing certain diseases and determine pathways that are affected by them expression qtl_analysis is used to determine hotspots dna regions affecting multiple_transcripts construct causal networks discover subclasses of clinical_phenotypes and select genes for clinical_trials see reviews of there are various approaches to eqtl_analysis most eqtl studies perform separate testing for each transcript snp pair the association between expression and genotype can be tested for using linear_regression and anova models as well as nonlinear techniques including generalized linear and mixed models bayessian regression and models accounting for pedigree and latent_variables several methods has been developed to find groups of snps associated with expression of a single gene expression qtl_analysis is known to be computationally_intensive the issue is most pronounced for modern eqtl datasets which have genotype measured over millions of snps and gene_expression over tens_of of transcripts for such data the eqtl_analysis involves over ten billion tests the following three studies analyzing relatively small_datasets indicate that non linear methods can be prohibitively slow for large data applied family_based tests to a dataset with samples they tested only transcript snp_pairs and report the total computation time to be under h on processors in parallel on a linux cluster were running efficient mixed model association emma which is said to be computationally_efficient they analyzed a dataset with samples snps and transcripts they tested all transcript snp_pairs and report the computation time of a few hours using a cluster of processors tested their method on a dataset measuring transcripts and snps in samples they report that estimation took h when parallelized across processors this is more than a processor year note that the dimensions of a modern eqtl dataset can greatly exceed those in the examples above in this article we present a new tool matrix_eqtl for fast eqtl_analysis of large_datasets our tests show that matrix_eqtl is orders_of than existing popular qtl eqtl software moreover the computation time of matrix_eqtl stays practically unchanged when covariates are added to the model such performance is achieved in particular by expressing the most computationally_intensive part of the algorithm in terms of large matrix operations this allowed to implement the algorithm using high_level programming_languages r and matlab relying on their efficient implementation of matrix operations matrix_eqtl tests for association between each snp and each transcript by modeling the effect of genotype as either additive linear least_squares model or categorical anova model optionally matrix_eqtl can test for the significance of genotype covariate interaction matrix_eqtl does not require genotypes to be discrete unless anova model is chosen the models can include covariates to account for such factors as gender clinical_variables population_structure and surrogate variables matrix_eqtl also supports heteroscedastic and correlated errors to account for relatedness of the samples matrix_eqtl performs a separate test for each genesnp pair and corrects for multiple_comparisons by calculating false_discovery fdr it is known that the snps located near a gene are more likely to affect its expression to account for this fact matrix_eqtl supports separatewe measured the performance of matrix_eqtl and six programs for qtl and eqtl_analysis plink merlin r qtl snpmatrix emap and fastmap plink is a command_line toolset for whole_genome association analysis it is a general_purpose tool written in c c not particularly optimized for eqtl_analysis merlin is a command_line for fast pedigree_analysis written in c c it is designed for analysis in pedigree but has an option for analysis of unrelated samples r qtl snpmatrix and emap are r packages for qtl eqtl_analysis part of emap is coded in c and requires gsl library gnu scientific library fastmap is a fast association_mapping tool written in java it uses the discrete nature of genotype data to speed up calculations fastmap is optimized for permutation_based testing among selected tools only fastmap and emap do not handle covariates note that fastmap is the only tool out of seven that has a graphical_user all methods except r qtl were set to use the simple linear_model to test for association between levels of gene_expression and frequencies of the minor_allele of the genotype r qtl does not support the simple linear_model and was set to estimate the anova model haleyknott method we estimated the time that matrix_eqtl and other eqtl tools require to analyze a typical modern eqtl dataset as the model dataset we chose cystic_fibrosis cf dataset from the dataset contains genotype_information for snps and the gene_expression for transcripts for patients we applied eqtl methods to a randomly_generated dataset containing genes and genes across samples which is of the number of genes and snps in the cf dataset the performance of all eqtl tools depends dominantly on the dimensions of the dataset and the computation time is approximately_linear with respect to the number of genes and the number of snps we used this observation to estimate the time required for the analysis of the full dataset the performance of each method is reported in matrix_eqtl requires only s to analyze the test_dataset this did not allow us to make precise estimates of its performance so we applied matrix_eqtl to the whole dataset and reported the performance in to reduce the output we set the p value threshold at level for each method with such option the specifications of the machine used to run the tests except emap which does not run on windows are provided at the end of section all methods that support covariates were additionally tested with covariates set to the first eigenvectors of the genotype sample covariance_matrix 
