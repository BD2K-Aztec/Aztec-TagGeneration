genome_analysis spocs software for predicting and visualizing orthology paralogy relationships among genomes at the rate that prokaryotic_genomes can now be generated comparative_genomics studies require a flexible method for quickly and accurately predicting orthologs among the rapidly_changing set of genomes available spocs implements a graph_based ortholog prediction method to generate a simple tab_delimited table of orthologs and in addition html files that provide a visualization of the predicted ortholog paralog relationships to which gene protein expression metadata may be overlaid availability_and a spocs web_application is freely_available cbb pnnl gov portal tools spocs html source_code for linux systems is also freely_available under an open_source atthe prediction of orthologs and paralogs is a fundamental step in many comparative_genomics studies for example orthology and paralogy relationships are used to identify the core and auxiliary genes among related organisms assign protein_function to genes in a new genome and predict gene expansion events such as those that give rise to protein_families though the concepts of orthology and paralogy were defined many years_ago the advent of whole_genome and the wide availability of these genomic_data has been the catalyst for the development of numerous ortholog prediction programsfor a recent review in large_parts these programs rely on the identification of homologous_genes proteins and frequently employ blast basic_local to identify these many methods have focused on eukaryotic_genomes in which widespread gene_duplication and domain rearrangement have made predicting orthologs particularly challenging in prokaryotes however the challenge lies in keeping up with the rate of genomic_data generation as a bacterial_genome can now be sequenced in a day or two and many are often left in high_quality draft stage comparative_genomics studies on these data require the flexibility to quickly and accurately_predict orthologs on the fly when the genome data are updated frequently we have previously_employed a graph_based ortholog paralog prediction method that combines the pairwise two species predictions from inparanoid using custom perl scripts to produce orthologs for groups of species here we present a robust software_tool called spocs species paralogy and orthology clique solver that implements this approach providing flexible and readily extensible ortholog predictions for groups of species defined by the user provided a set of n proteomes fasta formatted files of the predicted proteins from a species and an optional proteome to serve as the outgroup spocs proceeds through three main_stages first spocs executes a series of blast runs between every pair of species to identify reciprocal best hits this is the most compute intensive stage requiring n independent blast runs when spocs is run locally the blast results are stored in the scratch directory allowing subsequent spocs runs that include some of the same n species to avoid performing blast runs if they already exist in the second stage spocs uses the blast results to generate an orthology paralogy relationship graph_based on merging the pairwise ortholog and in paralog relationships as defined by finally spocs identifies cliques in each graph by breaking it into subgraphs and using the branch and bound clique finding algorithm to iteratively find all cliques in each subgraph we classify the graphs into four subjective categories complete semicomplete incomplete and degenerate the complete graphs include no more than one protein per species and every protein node in the graph is connected to every other protein by a reciprocal best_hit edge i e a maximum clique semicomplete graphs may be reported in which no more than one protein per species is present but with less than the maximal number of edges this is a tunable parameter for which the default is by definition these complete and semicomplete cliques are the result of single unique graphs that resolve to single unique cliques the incomplete graphs have no more than one protein per species and less than the maximal number of edges more missing edges than specified for semicomplete the degenerate graphs have more than one protein node from one or more of the species for the incomplete and degenerate graphs the clique finding algorithm will identify as many maximum cliques as possible 
