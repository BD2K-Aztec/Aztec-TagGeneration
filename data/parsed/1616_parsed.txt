structural_bioinformatics esbtl efficient pdb parser and data_structure for the structural and geometric_analysis of biological_macromolecules the ever increasing number of structural biological data calls for robust and efficient software for analysis easy structural_biology template library esbtl is a lightweight c library that allows the handling of pdb data and provides a data_structure suitable for geometric constructions and analyses the parser and data model provided by this ready to use include only library allows adequate treatment of usually discarded information insertion code atom occupancy etc while still being able to detect badly formatted files the template based structure allows rapid design of new computational_structural applications and is fully compatible with the new remediated pdb archive format it also allows the code to be easy to use while being versatile enough to allow advanced user developments robust implementation of new methods is a major_challenge in modern computational_structural for new ideas and biological_hypotheses to be tested in silico programs have to be fast robust and quick to develop using a general_purpose compiled language provides high performance c is thus suitable for computationally_expensive techniques and or large amount of data the use of template libraries makes c a very versatile language used in a wide_variety of applications indeed templates allow functions and classes to operate with generic types so that they do not need to be rewritten to work on a different data type the success of the boost c library providing a general_purpose extension of the c standard library shows the wide use of a library extensively using templates among a large community many solutions for handling macromolecules and the pdb format have already been developed most of these such as btl bioc pdblib were developed some time ago and are either not maintained or do not fully benefit from the features of c in terms of genericity and versatility the mmdb parser developed by rcsb and the ccp parser are mainly c style and are very application specific making them very difficult to use for other large_scale applications ball is an exhaustive c advanced compiled library thus it is large and requires several external components other recent tools for handling pdb data such as the biopython pdb parser the mmtk toolkit were mainly designed in python making the code easy to use but relatively slow because of the use of an interpreter these libraries were not designed for heavy geometric computations and thus do not provide easy access to geometric constructions such as voronoi diagrams which are widely used in structural_bioinformatics here we present easy structural_biology template library esbtl which provides a large variety of template classes and functions to parse pdb data esbtl offers a data model suitable for the structural and geometric_analysis of biological_macromolecules these can be used with d geometric algorithms and constructions such as those provided by the cgal library cgal is intended to geometry algorithm development and provides a wide_range of robust geometric code and tools however its point based data_structures are not suited to represent macromolecular objects there is no convenient way to attach information to points not only does esbtl provide a robust pdb parser but also an optional integrated library interface to perform geometric computations using cgal triangulation alpha shape skin_surface etc in a very simple way prototyping of computational_structural and biogeometry applications is thus made very easy esbtl should fill in the gap for efficient development and be a valuable software_tool to the structural_bioinformatics community the esbtl parser and structure library provides a very easy to use and powerful library for large_scale structural_biology applications it is very lightweight and its template structure allows to use it as a robust base for efficient software_development on the contrary to many other projects as it is an include only library it is easy to install and does not require a handful of external libraries interestingly a coarse_grained model builder is supplied for multilevel application development new features will be added to the library and contributions to the project are welcome 
