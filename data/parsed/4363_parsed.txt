speeding up tandem mass_spectral identification using indexes motivation tandem_mass ms_ms has been routinely used in proteomics_studies post_translational ptm identification is a challenging_problem in tandem mass spectral_analysis results in this article we define two scoring_functions for identifying peptides proteins with ptms from ms_ms match scores and diagonal scores as well as two spectral identification problems based on the two scores we propose several index based_algorithms for the two problems both theoretical and experimental analyses show that the index based_algorithms significantly improve on speed when compared with existing algorithms contact tandem_mass ms_ms has been routinely used in proteomics_studies in an ms_ms experiment digested peptides in bottom up approaches or intact proteins in top_down approaches are measured by mass_spectrometers to generate tandem_mass and the spectra are analyzed by software_tools to identify the peptides or proteins in ms_ms spectral identification query ms_ms are searched against either a protein database or a spectral library when the query spectrum is searched against a protein database it is a common procedure to select a set peptides proteins whose molecular_masses are similar to the precursor mass of the spectrum within an error tolerance then convert the peptides proteins to theoretical spectra which the query spectrum is actually compared with in this case searching against a protein database can be treated as searching against a theoretical spectral library given a query ms_ms spectrum s and a set t of ms_ms the spectral identification problem is to compute the similarity_score between s and each spectrum in t and report the best scoring spectrum in t post_translational ptms of proteins play_a in generating the heterogeneity in proteins and also help in utilizing identical proteins for different cellular_functions in different cell_types many studies in mass_spectrometry involve ptm identifications in the blind mode of ptm identification where ptms are unknown the main task is to compute the similarity_score between a spectrum from to whom correspondence should be addressed comparison between a spectrum s with a ptm and a spectrum t without ptms spectrum s has a ptm of when compared with spectrum t the ptm is represented as three consecutive s in the shaded area in the vector representation of s the second and third s in s are shifted by to the right when compared with t a there is only one matched mass pair between s and t the mass pair is connected by a dotted line b there are two matched mass pairs between s and t a modified_form of a peptide and another theoretical spectrum from the unmodified form of the same peptide we define match scores and diagonal scores which are two similarity_scores between a spectrum with ptms and a spectrum without ptms based on the two scores we define the match spectral identification msi problem and the diagonal spectral identification dsi problem for identifying spectra with ptms we used diagonal scores as a filter in top_down protein identification in and found that existing algorithms are time consuming for computing diagonal scores when the spectral library is large in the past several years high_accuracy spectra have become available due to the advance of mass_spectrometers which makes it possible to use indexes to speed up the computation of match scores and diagonal scores in this article we propose several index based_algorithms for the msi and dsi problems which significantly improve on speed when compared with existing algorithms we implemented all algorithms in java and tested the algorithms on a desktop computer with a g cpu and g memory the speed of the index based_algorithms is related to the resolution of ms_ms and the algorithms are fast for high_resolution ms_ms it is a surprising result that using indexes speeds up the computation of diagonal scores generally fft is the best solution for computing the convolution of two vectors but when the two vectors are sparse the simple comparison algorithm and algorithm are much faster than fft and the index based 
