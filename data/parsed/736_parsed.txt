bioasf a framework for automatically generating executable pathway_models specified in biopax motivation biological_pathways play_a in most cellular_functions to better understand these functions diverse computational and cell_biology researchers use biological_pathway data for various analysis and modeling purposes for specifying these biological_pathways a community of researchers has defined biopax and provided various tools for creating validating and visualizing biopax models however a generic software framework for simulating biopax models is missing here we attempt to fill this gap by introducing a generic simulation framework for biopax the framework explicitly separates the execution model from the model structure as provided by biopax with the advantage that the modelling process becomes more reproducible and intrinsically more modular this ensures natural biological constraints are satisfied upon execution the framework is based on the principles of discrete event systems and multi agent systems and is capable of automatically generating a hierarchical multi agent system for a given biopax model results to demonstrate the applicability of the framework we simulated two types of biological_network models a gene_regulatory modeling the haematopoietic_stem regulators and a signal_transduction network modeling the wnt b catenin signaling_pathway we observed that the results of the simulations_performed using our framework were entirely consistent with the simulation_results reported by the researchers who developed the original models in a proprietary language availability_and the framework implemented_in is open_source and its source_code documentation and tutorial are available at http www ibi vu nl programs bioasf the national_human nhgri has defined a biological_pathway as a series of actions among molecules in a cell that leads to a certain product or a change in a cell http www genome gov biological_pathways play_a in most cellular_processes including metabolism gene_expression regulation and signal_transduction according to pathguide http www pathguide org there are more than resources including databases in which biological_pathway data are stored in various data_formats to increase the uniformity of pathway data from different sources make biological_pathway data exchangeable and increase the efficiency of computational pathway research a community of researchers have defined biopax biological_pathway exchange a semantic web_based standard language to specify biological pathway_models at the molecular and cellular_level a biological_pathway specified in the biopax language is called a biopax model currently the most comprehensive biological pathway_databases including pathway_commons kegg nci nature pid reactome wikipathways and netpath provide pathway descriptions in biopax format since the introduction of biopax the biopax community has provided various tools paxtools for reading and writing biopax models validator for validating a biopax model to see whether or not it complies with the biopax specification pattern search for enabling the search of specific topological structures in a biopax model and chibe for visualizing biopax models in the standard systems_biology sbgn format although simulation of biological pathway_models makes it possible to achieve an adequate level of understanding of pathway_models a generic software framework for simulating biological pathway_models specified in biopax has not been available to date we address this omission by introducing bioasf biopax based agent oriented simulation framework bioasf is different in a number of ways from the existing simulation frameworks for biological_pathways handling qualitative regulatory and signaling pathway_models these frameworks are mostly based on either petri_nets or process calculi in a petri_net a place can represent molecules such as genes proteins or complexes and a transition can represent their interactions firing of a transition leads to consuming substrates and creating products the execution is constrained by the weight of an arc which connects a place with a transition an example of a petri_net based simulation framework is cell illustrator in process calculi a communicating process represents molecules a communication event represents an interaction and a state change represents a modification of the molecule an example of a process calculi based simulation framework is bio pepa note that because the focus of the simulation frameworks that are based on the systems_biology sbml is mainly the dynamic simulation of quantitative_models we do not mention these frameworks in this paper one important difference between petri_net and process calculibased frameworks and bioasf is the language used to specify pathway_models in a typical petri_net based simulation framework a pathway model is specified in various proprietary languages in which molecules are assigned to places and molecular_interactions are assigned to transitions in a typical process calculi based simulation framework a pathway model is specified in a language containing terms such as actions and synchronizations this language is primarily meant for specifying performance models of computer and communication systems on the contrary bioasf uses a standard language biopax for specifying pathway_models another important difference between the mentioned frameworks and bioasf is the type of network they build during simulation both petri_net and process calculi based frameworks use intrinsically flat networks and the nature of the network nodes is very generic places and transition nodes in a petri_net and processes and reaction nodes in process calculi in bioasf the network nodes have a natural semantic meaning are organized hierarchically and the network exhibits a high degree of modularity bioasf gets its modularity from biopax in which biological_entities are defined in a hierarchical fashion providing natural modularity for model developers moreover in bioasf there is a clear_distinction the biological_network model and simulation execution model the biological_network model in bioasf is represented as a network in which nodes are biological_entities such as proteins genes biochemical_reactions regulatory_interactions interconnected via welldefined properties and according to the constraints defined in the biopax language note that biopax is a specification language and it does not provide any execution semantics in order to simulate biopax models bioasf provides the simulation execution model see appendix the simulation execution model is represented as a network in which nodes are agents controlling the execution of their corresponding biological_interactions in the biological_network model the simulation execution model enforces three types of constraints during a model execution i constraints defined in biopax ii constraints defined by simulation rules and iii constraints defined by analysis rules hence bioasf explicitly requires the corresponding inputs the explicit specification of these separate inputs enhances the reproducibility and consistency of the modeling procedure for example from a biological viewpoint a protein cannot be translated from another protein rna is translated into proteins biopax respects this constraint the constraints provided by biopax disallows a template reaction interaction an interaction that polymerizes its product based on a template and is used for specifying transcriptions translations and replications to accept a protein or small_molecule as its template biopax requires the template to be either an rna for specifying translations or dna for specifying transcriptions and dna replications however due to intrinsically very generic nature of nodes in petri_net and also process calculi frameworks it is possible to define a node representing a protein and accidentally use this as a template for a transcription translation or a replication reaction depicts the different inputs and the output of bioasf a bioasf user provides biological_network data specified in biopax a list of initial concentration values of the physical entities simulation rules indicating how biological_interactions should be performed and analysis rules indicating how the simulation_results over time are interpreted and analyzed based on these inputs bioasf automatically generates a hierarchical multi agent system where each agent in the system is a goal_directed and autonomous entity responsible for executing a biopax interaction and pathway throughout the simulation the result of the execution of a biopax interaction influences the behavior of the agents and makes changes in the concentration of physical entities in the environment during the simulation it is possible to query bioasf about the current simulation_data such as number and type of executed interactions and concentration level of physical entities the following sections elaborate in more detail on the internal components organization and various features of bioasf in order to validate bioasf we have simulated two different biological_network models in bioasf a gene_regulatory modeling the haematopoietic_stem hsc regulators and a signal_transduction network modeling the wnt b catenin signaling_pathway both original models have been developed in petri_net we first made biopax models for both networks used the bioasfs plugin to express the interaction rules required by the models plugged the corresponding analysis module in bioasf prepared the initial concentration values for the physical entities occurring in the models generated java code for all agents and finally ran the simulations we observed that the results of the simulations_performed using bioasf were similar to the results reported by the researchers in in the following sections we give a brief explanation of the simulations and show the results we introduced here a simulation software framework called bioasf for simulating biological pathway_models specified in biopax we demonstrated the applicability of bioasf by simulating models of haematopoiesis and wnt b catenin signaling which reproduced the results reported by the researchers who developed the original models these two models had already been developed in our group and therefore the exact data of the original in silico experiments initial concentration simulation and analysis rules wereavailable the availability of this data is required in order to compare the simulation_results of bioasf with the results of the original ones although obtaining such input_data to compare modelling frameworks may be difficult particularly when originating in other groups we feel that the clarity of bioasf and its explicit input requirements safeguard sound simulation of pathway_models developed by other groups the main advantages of bioasf are i ability to directly simulate pathway_models specified in the standard language for pathway descriptions i e biopax ii support for hierarchical nested pathway simulations iii inherent scalability because of using agent technology iv extensibility by providing pluggable architecture v provision of flexibility to the biological model developers by enforcing the separation of concerns principles i e a clear distinction is made among biological model execution model simulation rules and simulation result analysis and vi formal specification of the execution model in mathematical set notation the current bioasf limitations are i disability to simulate differential_equations ii required rules can only be specified in java and iii no user_interface for starting stopping debugging simulations this makes the framework well suited for developers but not yet easily_accessible to biologists nevertheless the web_site includes an extended tutorial to help non expert users getting started as mentioned in section each simulation requires its specific rules on pathway and interaction levels governing execution of a pathway or interaction in bioasf these rules currently are specified in java which negatively influences the frameworks usability and deployability the preferred way would be to express simulation rules in a rule language such as semantic_web rule language swrl and relate these rules to the biological_interactions in biopax models this is similar to the approach taken in the semantic markup for web_services owl s where the pre conditions of an owl s service can be expressed in a rule language in this way both biological_models and simulation rules can be provided by the same users e g biomedical_researchers the bioasf framework can be used in different scenarios for example the framework can be used for model calibration in this the ctnnb b catenin levels for initial wnt levels from to simulated times over steps using bioasf and petri_net respectively bioasf i scenario a biopax model can be visualized in sbgn and shown to users users can define break_points and watch points on pathways and interactions similar to the debugging of application codes when a break_point is hit users can then inspect the concentration value of the related physical entities and they can change these values during the simulation in order to influence the simulation_results and consequently adjust their model another possibility would be to use bioasf as a tool for measuring the fitness of individuals in the population in a genetic_programming experiment the purpose of such an experiment would be to automatically generate biological_pathways based on a combination and integration of gene_expression data protein to protein interaction data existing pathway data gene_ontology data and triplets representing other biological data our future work will be focused on these items 
