osa a fast and accurate alignment_tool for rna_seq accurately mapping rna_seq to the reference_genome is a critical step for performing downstream_analysis such as transcript assembly isoform detection and quantification many tools have been developed however given the huge size of the next_generation datasets and the complexity of the transcriptome rna_seq read_mapping remains a challenge with the ever increasing amount of data we develop omicsoft sequence aligner osa a fast and accurate alignment_tool for rna_seq benchmarked with existing_methods osa improves mapping speed fold with better sensitivity and less false_positives availability osa can be downloaded from http omicsoft com osa it is free to academic users osa has been tested extensively on linux mac os x and windows platforms contact rna_seq a high_throughput used to sequence complementary_dna has been widely thought of as a revolutionary tool for transcriptomics study compared with microarray_technology conventional expressed_sequence est or other tag based sequencing it has less sampling bias higher_resolution and much broader expression range coverage for human mouse and other mammalian organisms with a relatively well annotated genome mapping short_reads from next_generation ngs to reference transcriptome genome is usually the first and essential step for rna_seq this reference based_approach tends to be more sensitive and computationally_efficient than a de_novo approach many tools have been developed in recent_years tophat maps the reads to reference_genome using bowtie the consensus islands are first clustered the splice_junctions are then generated by enumerating the canonical donor and acceptor_sites between the neighboring islands for putative introns rna_seq unified mapper rum and rnaseqr align the reads against both to whom correspondence should be addressed transcriptome and genome using bowtie the results are merged and the un mapped_reads are further aligned to genome with blat soapsplice first maps reads to reference_genome indexed with burrows_wheeler transformation bwt and then unmapped reads are aligned again using two segment strategies mapsplice and splicemap also use similar break and assemble approach for longer_reads we introduce omicsoft sequence aligner osa an ultra_fast rna_seq aligner mapper different from the majority of existing_methods relying on bowtie or bwa which use a bwt based index osa uses a k_mer indexed genome hash_table and avoids breaking down longer_reads into sub reads and merging steps which becomes increasingly computationally_expensive with the longer_reads from the newer sequencing_machines osa is times_faster than popular rna_seq aligners developed and used so_far it works well for both short and long_reads and its performance does not deteriorate for high sequencing_error data osa also significantly_improves the ability to detect both short and long indels as well as exon_junctions osa implements various optimization strategies at different stages of mapping pipeline to improve alignment speed and accuracy all the reference and read sequence_matching are achieved through super fast bitwise operations for each read where quality values are available osa will first scan the reads from end until the first acceptable_quality nucleotide is found this trimming process removes the ambiguous reads at the end and significantly_improves the alignments speed during alignment stage a seed and extend strategy is used to test each potential matching position a similar strategy has been used in gsnap and blat in addition osa takes_advantage of the properties of paired_end to filter the alignment results and limit alignment space we simulated sets of million pairs of paired_end rna_seq with three independent simulations at each of four error_rates and using the beer pipeline we compare osa with tophat v and v rum v and soapsplice v on a four core ghz amd phenom tm ii x processor desktop with gb ram running opensuse linux see supplementary methods for details the speed the alignment_accuracy and the percentage of indels and exon_junctions correctly_identified are evaluated for different tools either with a gene model or without gene model osa has superior speed it is about times_faster compared with other tools on linux platform for all the tools the alignment speed decreases with error_rates this is expected as the aligner has to try more scenarios for non perfect matching osas speed improvement is more dramatic at high_error the benchmark results also show that using a gene model slightly improves the alignment speed except tophat and accuracy supplementary when a gene model is provided osa matches most reads to the correct location of the transcriptome genome tophat is the close second both algorithms perform well even without a gene model rum and tophat work much better with a gene model at low_error and their performances deteriorate when error_rate increases to supplementary all tools detect of exon_junctions osa soapsplice and rum have higher sensitivity than tophat however osa has much fewer false_positives than rum and soapsplice supplementary rum has the best sensitivity detecting indels however it also increases the percentage of the false_positives and decreases the positive prediction value ppv tophat detects a much smaller number of indels this might be improved after integration with the latest bowtie which supports indel detection at the alignment stage osa achieves good sensitivity at detecting indels while controlling the false_positives supplementary due to sequencing_errors or random error introduced during simulation one read can match to a different location on the genome with a better or equal matching score a large portion of these false_positives could be attributed to these sequencing random errors we tested the junction and indel detecting again after adjusting the metrics for these reads and we can see that the ppv of all tools improves especially soapsplice and rum however the overall detection pattern is still the same supplementary tables s b and s b we also tested osa against tophat which performs better than other tools we benchmarked against with eight randomly_selected ngs_datasets from ncbi sra these datasets include both single and paired_end reads with different length and from both human and mouse species with various sequencing_depths similar to the simulation outcomes we find that osa is several times_faster than tophat and maps more reads moreover it also identifies much more known and novel exon_junctions supplementary 
