genome_analysis genometric query_language a novel approach to large_scale genomic_data management motivation improvement of sequencing_technologies and data_processing pipelines is rapidly providing sequencing_data with associated high_level features of many individual_genomes in multiple biological and clinical conditions they allow for data_driven genomic transcriptomic and epigenomic characterizations but require state of the art big_data computing strategies with abstraction levels beyond available tool capabilities results we propose a high_level declarative genometric query_language gmql and a toolkit for its use gmql operates downstream of raw_data preprocessing pipelines and supports queries over thousands of heterogeneous datasets and samples as such it is key to genomic big_data analysis gmql leverages a simple data model that provides both abstractions of genomic_region data and associated experimental biological and clinical metadata and interoperability between many data_formats based on hadoop framework and apache pig platform gmql ensures high scalability expressivity flexibility and simplicity of use as demonstrated by several biological query examples on encode and tcga datasets availability_and the gmql toolkit is freely_available use atnext generation sequencing ngs allows high_throughput genome_sequencing dna_seq transcriptome_profiling rna_seq dnaprotein interaction assessment chip_seq and epigenome characterization chip_seq bs_seq dnase_seq continuous improvements of ngs_technologies in quality cost of results http www genome gov sequencingcosts and sequencing time are leading shortly to the possibility of sequencing an entire_human in few minutes for a cost of sequencing of genomes in several different biological and clinical conditions for their genomic transcriptomic and epigenomic characterization is becoming widespread very large_scale sequencing_projects are emerging the genomes_project aims at establishing an extensive catalogue of human genomic_variation genomes it recently released a list of more than million variant sites using data from individuals from different populations http www genomes org announcements initial phase variant list and phased genotypes the cancer_genome tcga project is a full scale effort to systematically explore the provides public access to more than experimental_datasets including the just released data from its phase more than experiments of mainly chip_seq assays in human and mouse https www encodedcc org thanks to such high availability of several different types of ngs_data from numerous individual_genomes it is now possible to look at multiple instances of many different genomic_features simultaneously so as to characterize their functional role and elucidate genetic and epigenetic phenomena this requires a new generation of informatics systems and languages for querying heterogeneous datasets it also requires the state of the art parallel_computing strategies for distributing the computation upon clouds of computing elements to achieve scalability and performance although most of current bioinformatics_analysis tools do not support parallelization lately cloud_computing and high performance parallel systems mainly based on hadoop and mapreduce frameworks which are typically used in other areas have also been adopted in bioinformatics o a few specific parallel tools have been implemented in particular biopig and seqpig have been proposed for the efficient processing of bioinformatics programs using pig latin a high_level language for batch data_processing recently also sparkseq has been proposed as general_purpose tool for processing of dna and rna sequencing_data using the apache spark engine in this article we propose genometric query_language gmql with the associated data model and data management system to query and compare multiple and heterogeneous genomic_datasets for biomedical knowledge_discovery gmql uses the genomic_data model gdm based on the notion of genomic_region which may span several bases each region can be compared with millions of other regions typically using metric properties this justifies the language name in addition gdm also covers metadata of arbitrary structure gmql is a high_level declarative language that allows expressing queries easily over genomic_regions and their metadata in a way similar to what can be done with the well known relational algebra and structured query_language sql over a relational_database thus it does not require software programmer expertise from a system perspective gmql is part of gendata http www bioinformatics deib polimi it gendata a system which supports a data_warehouse layer for storing data_files in their original formats providing suitable privacy levels and a data selection layer enabling abstractions from file_formats and parallelization the work inis the closest to ours as it reports a genome query_language gql for ngs_data using an sql extension our approach exhibits two main differences with respect to gql and to all mentioned previous_works first and foremost they start from the reads of ngs machines i e raw_data and thus they must address a number of problems for identifying regions of interest on the genome which in the current_practice are normally solved by ad_hoc specific tools e g mutation and peak callers conversely gmql starts from processed datasets processing raw_data from within an integrated system is potentially very powerful as no information is left outside of the query system but there is as well a risk of replicating efforts and of giving up the efficiency of specialized data analysis tools that are widely_accepted by the scientific_community a second major difference with previous_works is that none of them integrate metadata within their computation conversely gmql supports metadata management thus it can use metadata for sample_selection and matching and query results carry along metadata that can be inspected after query execution many widely available experimental_data e g in encode and tcga provide processed datasets and metadata thus gmql can directly be used on them in addition each research laboratory produces data in many processed formats through gmql they can be compared with both locally produced and publicly_available data in a mid_term perspective gmql will be the appropriate tool for querying millions of processed genomic_datasets and samples that will become available 
