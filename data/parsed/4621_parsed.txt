phylogenetics the newick utilities high_throughput phylogenetic_tree processing in the unix shell we present a suite of unix shell programs for processing any number of phylogenetic_trees of any size they perform frequently used tree operations without requiring user_interaction they also allow tree drawing as scalable_vector svg suitable for high_quality presentations and further editing and as ascii graphics for command_line inspection as an example we include an implementation of bootscanning a procedure for finding recombination breakpoints in viral_genomes availability c source_code python bindings and executables for various platforms are available fromphylogenetic trees are a fundamental component of evolutionary_biology and methods for computing them are an active area of research once computed a tree may be further processed in various ways small_datasets consisting of a few trees of moderate_size can be processed with interactive gui programs as datasets grow however interactivity becomes a burden and a source of errors and it becomes impractical to process large_datasets of hundreds of trees and or very large trees without automation automation is facilitated if the programs that constitute an analysis_pipeline can easily communicate data with each other one way of doing this in the unix shell environment is to make them capable of reading from standard input and writing to standard outputsuch programs are called filters although there are many automatable programs for computing trees e g phyml phylip programs for processing trees e g treeview itol are typically interactive here we present the newick utilities a set of automatable filters that implement the most frequent tree processing operations to whom correspondence should be addressed the newick utilities have the following features bullet no user_interaction is required bullet input is read from a file or from standard input output is written to standard output bullet all options are passed on the command_line no control files bullet the input format is newick bullet the output is in plain_text newick ascii graphics or svg bullet there are no limits to the number or size of the input trees bullet each program performs one function with some variants and bullet the programs are self documenting option h the newick utilities add tree processing capabilities to a shell users toolkit since they have no hard coded limits they can handle large_amounts of data since they are non interactive they are easy to automate into pipelines and since they are filters they can easily work with other shell tools tree processing may also be programmed using a specialized package e g bioperl ape or ete but this implies knowledge of the package and such programs tend to be slower and use more resources than their c equivalents the difference is particularly apparent for large trees 
