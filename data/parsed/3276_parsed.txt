genome_analysis non parametric bayesian_approach to post_translational refinement of predictions from tandem_mass motivation tandem_mass ms_ms is a dominant approach for large_scale high_throughput post_translational ptm profiling although current state of the art blind ptm spectral_analysis algorithms can predict thousands of modified peptides ptm predictions in an ms_ms experiment a significant percentage of these predictions have inaccurate modification mass estimates and false modification site assignments this problem can be addressed by post_processing the ptm predictions with a ptm refinement algorithm we developed a novel ptm refinement algorithm iptmclust which extends a recently_introduced ptm refinement algorithm ptmclust and uses a non parametric bayesian_model to better account for uncertainties in the quantity and identity of ptms in the input_data the use of this new modeling approach_enables iptmclust to provide a confidence_score per modification site that allows fine_tuning and interpreting resulting ptm predictions results the primary goal behind iptmclust is to improve the quality of the ptm predictions first to demonstrate that iptmclust produces sensible and accurate cluster assignments we compare it with k_means mixtures of gaussians mog and ptmclust on a synthetically generated ptm dataset second in two separate benchmark experiments using ptm data taken from a phosphopeptide and a yeast proteome study we show that iptmclust outperforms state of the art ptm prediction and refinement algorithms including ptmclust finally we illustrate the general applicability of our new approach on a set of human chromatin protein complex data where we are able to identify putative novel modified peptides and modification_sites that may be involved in the formation and regulation of protein_complexes our method facilitates accurate ptm profiling which is an important step in understanding the mechanisms behind many biological_processes and should be an integral part of any proteomic_study availability our algorithm is implemented_in and is freely_available for academic use from http genes post_translational ptms are known to play_a in the cell and are instrumental in many disease related studies a core task in studies involving ptms is ptm prediction i e identification of peptide_sequences and ptms associated with each modified_peptide within a biological_sample a preferred experimental_procedure for ptm prediction is tandem_mass ms_ms followed by an analysis with a blind ptm search_engine see for reviews blind_ptm are commonly used because they can detect both known and novel ptms however ptm predictions produced by blind_ptm contain inaccurate modification masses and incorrect modification positions the fragmentation process is often incomplete and the presence of labile ptms may interfere with this process these issues result in spectra missing peaks that in turn may lead to ambiguous or erroneous modification predictions naturally_occurring stable_isotopes such as carbon and electronic noise contribute to inaccurate mass measurements these issues are more prominent in spectra generated from low mass resolution spectrometers e g ion_trap mass_spectrometers which are still commonly used in todays ms studies therefore it is prudent to incorporate ptm refinement as part of a ptm prediction pipeline as it can significantly improve the quality of ptm predictions previous_studies that post_processing greatly_improves the number of positive predictions while reducing the amount of false ptm assignments ptm refinement can be classified into two types of approach one that scores the localization of ptms and one that refines observed modification masses and modification positions the first type provides a way to evaluate the quality of predicted modification_sites from ptm search_engines the two main strategies for scoring the reliability of modification site localizations are i to calculate the probability that a peak responsible for the site determination is matched at random and ii to compute the search_engine score difference between predictions with varying site localizations methods that use the former strategy include a score ptm score embedded in maxquant and andromeda the to whom correspondence should be addressed the author published_by all_rights for permissions please_e journals permissions_oup com phosphorylation localization score pls in inspect slomo phosphinator phosphors examples of the latter scoring strategy are mascot delta score the site localization in peptide slip score in protein prospector and the variable modification localization score in spectrum mill a review of the different modification site scoring localization methods is provided in ptm refinement using a modification site localization scoring algorithm can be achieved by reassigning the modification position to the highest scoring position for each modified_peptide however modification site localization scoring_methods are limited when used for general ptm refinement owing to the following three reasons first a predefined list of ptms is required for these scoring_methods second these scoring_methods assume that input predicted modification masses are error_free and are mapped precisely to one of the ptms in the predefined list lastly most of these scoring_methods are designed to score only phosphorylated predictions consequently modification site localization scoring_methods are ill suited to analyze ptm datasets generated from blind_ptm the second type of ptm refinement approach is to refine both observed modification masses and modification positions two recently_published algorithms that use this type of ptm refinement method are ptmfinder and our previous algorithm ptmclust ptmfinder takes a peptide level approach to ptm refinement where it groups and reanalyzes spectra mapping to the same modified peptide_sequence to produce for each spectrum a final peptide_sequence with a modification mass and a modification position hence refinement using this method is limited to modified peptides that occur multiple times in the same dataset as shown in a recent study a modified_peptide is rarely found more than three times even for a large_scale genome_wide experiment furthermore ptmfinder suffers from favoring high_abundance modified peptides and discretizing observed modification masses in contrast ptmclust accounts for errors of the observed modification masses and modification positions at the ptm level and overcomes several issues that ptmfinder has the principle behind and the distinguishing_feature of ptmclust is modeling modifications at the ptm level instead of at the peptide level while peptide level modeling can benefit from correcting low_level errors the ptmclust approach has the advantage of accounting for low_abundance modified peptides because other peptides with the same underlying ptm can help identify the correct but unknown modification mass and modified amino_acid ptmclust uses a generative_model to capture the hidden relationship between factors_influencing the ptm mapping_process it uses the expectation_maximization em_algorithm and a modified_version of the split and merge model_selection method to learn and infer an optimal parameter setting for the model as part of the model_selection procedure a range of models are learned by adjusting a model_complexity parameter and the final model is selected by weighting the trade_off between false_positives determined using decoy peptides and correct real peptides detected the resulting ptm predictions are of higher quality than those taken from existing blind_ptm alone and those post analyzed with ptmfinder here we address some limitations of ptmclust i the use of a greedy method for selecting the number of ptm clusters ii the need for manual parameter_tuning and iii the lack of a confidence_score per modification position we overcame these limitations by extending the ptmclust model to allow for an unbounded number of mixture components that can account for uncertainties in the quantity and identity of ptms in the input_data the model makes use of an infinite non parametric mixture_model so we refer to it as infinite ptmclust or iptmclust this extension parallels the conversion from a finite to an infinite standard mixture_model imm but the complex nature of the underlying ptmclust model makes this extension non trivial we derived and implemented a gibbs_sampling algorithm and a split and merge metropolis hastings algorithm which enable iptmclust to efficiently infer the groupings of input modified peptides and refine the peptides modification masses and modification positions iptmclust achieves the following benefits i it outperforms ptmclust and other ptm refinement algorithms ii it provides a more highly automated model_selection method that does not require manual parameter_tuning and iii it outputs modification position level confidence_scores that users can use to assess the quality of the result and further refine their analyses in a series of benchmark experiments on both synthetic and real_world phosphopeptide datasets we show that iptmclust outperforms ptmclust and other state_ofthe ptm prediction and ptm refinement algorithms to ensure broad_applicability we have designed and optimized iptmclust to analyze ptm data generated from both lowand high_resolution ms_ms processed by popular blind_ptm as with ptmclust the input to iptmclust is a list of ptm predictions consisting of the peptide_sequence modification position and modification mass our first goal is to demonstrate that iptmclust outperforms existing algorithms both in terms of finding correct clustering assignments and in refining ptms on a set of noisy modified peptide_sequences to this end we conducted two experiments we benchmarked iptmclust against standard clustering_algorithms k means and mog as well as our previous algorithm ptmclust the key observation given in supplementary is that iptmclust using the split merge algorithm attains the most consistent results across different settings and achieves increasingly better results than ptmclust as the problem becomes more complex given that the true modification positions are known for simulated_data we can evaluate how well ptmclust and implementations of our new algorithm perform for the task of ptm refinement supplementaryshows the same trend as above iptmclust with the split merge algorithm outperforms the others in almost all cases we also compared blind_ptm sims inspect and modmap a state of the art ptm refinement algorithm ptmfinder and our algorithms ptmclust and iptmclust on detecting the true modification positions from a well studied phosphopeptide dataset in each of the experiments we use both the split merge and the gibbs_sampling inference algorithms for iptmclust we report results based on map estimation for iptmclust for both experiments the second goal is to directly show the applicability of iptmclust to datasets taken from studies of complex protein solutions to achieve_this we analyze data taken from a genome_wide yeast and a human chromatin specific protein complex study we have limited our analyses to only post_processing ptm predictions generated from sims with either ptmclust or iptmclust we include analysis from ptmclust to highlight that iptmclust is producing sensible results in these experiments we initialize k means mog and ptmclust with settings that are outlined in the settings for the number of burn in and total samples for iptmclust are described in the supplementary_information accurately identifying ptms and their potential_roles in clinical studies such as biomarker_discovery and drug_development is an important task although thousands of ptm candidates have been reported using blind_ptm these blind ptm search algorithms suffer from mass measurement inaccuracy and uncertainty in predicting modification positions making the findings error_prone the importance of post_processing ptm predictions using a ptm refinement algorithm have been established in the previous state of the art algorithm ptmclust achieves a significantly_higher ptm prediction_accuracy over blind_ptm alone and outperforms existing ptm refinement algorithm ptmfinder despite significant improvements in ptm prediction ptmclust has three main drawbacks of particular interest i it uses of a greedybased non automatic model selection_algorithm ii it requires manual parameterization on the maximum number of ptm groups and iii it does not provide a confidence_score per modification position to address_these we introduce iptmclust iptmclust extends ptmclust by using an infinite mixture_model approach that achieves the following three benefits i outperforming ptmclust and other ptm refinement algorithms ii providing a fully_automated model_selection method without the need for any manual parameterization and iii offering modification position level confidence_scores that users can use to assess the quality of the results and to greater refine their analyses through a series of benchmark experiments using both synthetic and real phosphopeptides and yeast proteome data we demonstrated that iptmclust better models the ptm generative process and outperforms ptmclust ptmfinder and other blind_ptm in addition we analyzed data generated from a yeast proteome study using iptmclust in which we reported an improvement over the base blind ptm search algorithm sims in detecting annotated ptms thousands of putative ptms were found in this analysis moreover in our in depth look at ptm predictions for three human protein_complexes med pol and prc iptmclust identified numerous validated and putative phosphorylated and acetylated peptides that may be involved in the formation and regulation of proteinprotein_interactions further investigations are warranted but we believe a number of these putative predictions are valid ptms and can serve to further our understanding of the complexities involved in proteinprotein_interactions to summarize our new algorithm iptmclust is easy to use achieves overall greater performance than the state of the art provides confidence_scores at the modification position level that allow for a higher flexibility when evaluating potential ptms and is designed to be broadly_applicable to ptm predictions generated from any blind ptm search_engine given the rapid advancement of mass_spectrometer technology how applicable is iptmclust going forward we explore this question by analyzing data generated from high massresolution mass_spectrometers e g from an orbitrap although mass accuracy has improved with the use of high mass resolution mass_spectrometers the presence of isotopes for example can result in deviations in observed modification masses in addition higher mass accuracy does not necessarily equate to errorless modification site determination we have shown in our analysis of the human protein complex data that problems with mass measurement inaccuracy and uncertainty predicting modification positions continue to exist for data generated from high mass resolution mass_spectrometers such as an orbitrap used in the experiment our results demonstrate that iptmclust can improve on ptm predictions taken from data with high_mass and continue to be a vital component of a genome_wide ptm study in designing iptmclust we have developed two different inference algorithms the split merge metropolis hastings and the gibbs_sampling algorithm while the gibbs_sampling method is the standard inference algorithm for bayesian mixture_models and imms the split merge method is shown to perform better when dealing with complex datasets results of our synthetic data experiments also exhibit this trend iptmclust using the gibbs_sampling method displays a performance drop while its counterpart using the split merge sampling algorithm perform consistently well as the data used gets more complex it is important to note that when there are few ptms within a small modification mass window say da e g when two or three ptm groups added in our experiment with the synthetic data our algorithm using the gibbs_sampling performs at par with or slightly worse than its counterpart using the split merge method furthermore iptmclust using the gibbs_sampling runs faster per iteration quicker than iptmclust using the split merge method hence for large_datasets where running time can be overwhelmingly long we recommend running iptmclust with the gibbs_sampling method as it provides a good trade_off between quality of the result and computational_cost despite outperforming its competitors iptmclust has a number of limitations similar to ptmclust it is unable to handle more than one modification per input peptide_sequence and ptm groups identified can contain multiple ptms if their modification masses are similar the latter problem is less of an issue when working with high mass resolution data moreover iptmclust does not consider the underlying spectrum when refining a ptm prediction the presence of certain peaks in the spectrum can add to support to a residue along the peptide_sequence as being the modification position its limitations notwithstanding iptmclust is shown to outperform both ptmclust and previous state of the art in our benchmark tests using both synthetic and real_world ptm data 
