systems_biology a comparison of algorithms for the pairwise_alignment of biological_networks motivation as biological inquiry produces ever more network data such as proteinprotein_interaction gene_regulatory and metabolic_networks many algorithms have been proposed for the purpose of pairwise network alignmentfinding a mapping from the nodes of one network to the nodes of another in such a way that the mapped nodes can be considered to correspond with respect to both their place in the network_topology and their biological attributes this technique is helpful in identifying previously undiscov ered homologies between proteins of different species and revealing functionally_similar subnetworks in the past_few a wealth of different aligners has been published but few of them have been compared with one another and no comprehensive_review of these algorithms has yet appeared results we present the problem of biological network_alignment provide a guide to existing alignment_algorithms and comprehensively benchmark existing algorithms on both synthetic and real_world biological data finding dramatic_differences between existing algorithms in the quality of the alignments they produce additionally we find that many of these tools are inconvenient to use in practice and there remains a need for easy to use cross_platform tools for performing network_alignment many areas of bioinformatics now use and produce network data including proteinprotein_interaction ppi_networks and gene coexpression_networks and the tools and techniques of graph_theory are being brought to bear to produce new techniques for biological network_analysis comparing two biological_networks is a particularly challenging_problem as many interesting questions we might ask about these networks are computationally_intractable to answer here we focus on the task of aligning two ppi_networks from different species that is we want to find a mapping from the nodes of one network to the nodes of another in such a way as to maximize the topological and biological similarity of the pairs of nodes that are aligned to one another this allows for the identification of both homologous_proteins as well as similar modules or pathways in the networks themselves successes of ppi network_alignment so_far include uncovering large shared subnetworks between species as diverse as saccharomyces_cerevisiae and homo_sapiens and reconstructing phylogenetic_relationships between species based solely on the amount of overlap discovered between their ppi_networks most papers in the literature report promising results in creating alignments that show large regions of biological and topological_similarity between the ppi_networks of various species the ultimate_goal of network_alignment is to transfer knowledge of protein_function from one species to another because sequence similarity_metrics such as blast bit scores are not conclusive_evidence of similar function the purpose of aligning two ppi_networks is to supplement sequence_similarity with topological information so as to identify orthologs as accurately as possible the primary challenge in designing such an aligner is to accurately estimate the topological_similarity of two nodes and to combine that with sequence_similarity to produce an alignment the aligners published so_far vary_widely in their approaches to doing so and some aligners are much better at optimizing for one of these goals than the others furthermore an exact solution to the network_alignment is unattainable the problem of global_alignment is equivalent to the subgraph isomorphism problem which is np complete so aligners settle for approximate solutions the variety of approaches in use and the lack of a popular standard solution present a difficult situation for those who would simply like to compare some biological_networks that they have produced in the course of their research these algorithms differ greatly in the quality of the alignments they produce and even more greatly in their compute time in this article we survey and benchmark network_alignment that are pairwise and global pairwise alignment_algorithms align two graphs only they are contrasted with multiple alignment_algorithms which try to find transitive alignments between more than two input networks at a time borrowing terminology from sequence_alignment we also distinguish between global alignment_algorithms which attempt to find a single overall alignment from one network to another and local aligners which may output several mutually incompatible alignments for the input networks local_alignment is more useful when we to whom correspondence should be addressed desire to identify several potential orthologs per input protein whereas global_alignment is more helpful for identifying larger conserved networks that are indicative of a common_ancestor global alignments can also be somewhat easier to interpret as the produced mapping is one to one because pairwise global aligners have been much more popular in the recent_literature and because it is unclear how to compare a global algorithm with a local algorithm or a pairwise aligner to a multiple aligner we evaluate pairwise global aligners only we present the problem of network_alignment overview the various approaches that have been proposed to solve the problem and evaluate the quality of the alignments produced by a wide_range of different alignment_algorithms from the first generation of global_alignment tools to the most recently_published techniques given the rapid pace at which new techniques are being published many of these algorithms have never been directly compared with one another therefore we include extensive comparisons and benchmarks in this article we make use of a recently_developed framework for testing alignment_algorithms with synthetic ppi_network data as well as a real_world ppi dataset we find great_differences in the quality of the alignments produced by existing alignment programs in the last few years many new algorithms for pairwise global_network have appeared but few of them had been compared directly by benchmarking these algorithms on synthetic and real_world data we have shed light on the relative behavior and performance of these algorithms the results have been surprising and show that these algorithms can behave very differently on different datasets several algorithms perform well but the great_differences in behavior from one test to another and the tendency for some of the existing programs to crash makes_it to recommend any one aligner those who want to use network_alignment as part of their work should try a few of the better performing algorithms found here and see how their performance compares for the particular dataset in question we suggest spinal natalie and pinalog as good aligners to try at first they produce their alignments quickly while giving competitive results ghost is also an excellent performer but its high memory_requirements slow speed and crashes render it more difficult to use c graal and migraal may be worthwhile in some situations although other aligners perform better in general all members of the graal family share a bottleneck in the unpredictably slow graphletcounting step and this step also tends to crash because plot of the goc versus integrated conserved_structure score for aligners with user adjustable trade_off between topological and biological similarity we explored a range of trade_off levels for these aligners on the c elegansd melanogaster alignment problemnetal does not currently use sequence_similarity in constructing alignments its uses are more limited but it can produce much higher ics scores and larger connected components than other aligners on a given dataset which may be useful in understanding the relative performance of other aligners we cannot recommend graal and isorank as they are bested by many aligners on both goc and ics scores this is understandable given that most of these other aligners were benchmarked against graal and isorank when they were being designed we have also found a number of issues that future investigators of network_alignment must focus on first and foremost code and documentation quality must be improved for a tool to see widespread use many of these programs crash often are poorly documented or run slowly sensitivity to noise is also an issue given the drastic differences in aligner performance between the noise_free synthetic data and the noisy real_world data it is clear that future alignment_algorithms must become even more robust to such difficulties last of all we have seen that many aligners perform well at yielding either good topological or good biological matches but few do both well this must become a higher_priority in aligner design 
