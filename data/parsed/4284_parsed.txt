sequence_analysis slamem efficient retrieval of maximal_exact using a sampled lcp array motivation maximal_exact or just mems are a powerful_tool in the context of multiple_sequence and approximate string matching the most efficient algorithms to collect them are based on compressed indexes that rely on longest common prefix array centered data_structures however their space efficient representations make use of encoding techniques that are expensive from a computational point_of with the deluge of data generated by high_throughput new approaches need to be developed to deal with larger genomic_sequences results in this work we have developed a new longest common prefix array sampled representation optimized to work with the backward search method inherently used by the fm_index unlike previous implementations that sacrifice running time to have smaller space ours lead to both a fast and a space efficient approach this implementation was used by the new software slamem developed to efficiently retrieve mems the results show that the new algorithm is competitive against existing state of the art approaches availability_and the software is implemented in c and is operating system independent the source_code is freely_available for download atwith the new high_throughput becoming faster cheaper and more accurate the number of available genomes is growing fast metagenomics is also pushing forward the need to align new sequences to those already known to compare different strains or assemblies build phylogenetic_trees identify new genes identify mutations or polymorphisms observe structural_variations and perform other relevant operations it is well known that dynamic_programming approaches are prohibitive both in terms of required memory and processing time when aligning large_genomes or a number of different genomes to approach these problems strategies using seeded alignments with shared segments which are identical among the sequences and act as anchor points for the alignment have been developed these anchors can be fixed_length exact_matches or k_mers as those used in the blast tool however this type of match is inefficient because it can lead to an oversized number of hits and these still have to be extended in both directions using pairwise_comparisons implying a significant processing time much more efficient is the identification of maximal unique matches mums that have been introduced first by mums are identical substrings that occur exactly once in each sequence and whose occurrences cannot be extended to either side without producing a mismatch the second version of mummer introduced a new more compact suffix_tree st representation and the third and last one added the ability to output maximal_exact mems these are similar to mums but can occur any number of times which is useful when the number of mums is insufficient to produce enough anchors for a solid alignment e g when many repeated regions exist also using mems instead of mums multiplies the regions covered by anchors reducing considerably the areas requiring further processing however the bottleneck of mummer is the memory_requirements of its st index structure which can become problematic when it does not fit into the main_memory other closedsource tools based on enhanced_suffix esas such as vmatch and coconut have also been released but they share the same problem for this reason and to deal with larger sequences other approaches to find mems have been developed the sparsemem approach makes use of a sparse sa as an index which trades memory space for extra computational time later backwardmem used a backward search method over a compressed esa more recently essamem improved sparsemem by enhancing it with a sparse child array that reduces computational time maintaining the same memory_footprint this method currently shows the best tradeoff between time and memory_consumption for mem identification in this work we propose another approach as an alternative to these previous tools we have developed a new sampled representation of the longest common prefix lcp array optimized to work with the backward search method inherent from the to whom correspondence should be addressed fm_index results show the effectiveness of the new method for a number of different genomes 
