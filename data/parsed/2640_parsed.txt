sequence_analysis keeseek searching distant non existing words in genomes for pcr based applications the search for short words that are absent in the genome of one or more organisms neverwords also known as nullomers is attracting growing interest because of the impact they may have in recent molecular_biology applications keeseek is able to find absent sequences with primer like features which can be used as unique labels for exogenously inserted dna_fragments to recover their exact position into the genome using pcr_techniques the main differences with respect to previously_developed tools for neverwords generation are i calculation of the distance from the reference_genome in terms of number of mismatches and selection of the most distant sequences that will have a low_probability to anneal unspecifically ii application of a series of filters to discard candidates not suitable to be used as pcr_primers keeseek has been implemented in c and cuda compute_unified to work in a general_purpose computing on graphics_processing gpgpu environment in the recent_past different methods for finding non existing sequences in genomes previously called nullomers or unwords have been proposed though nullomer definition is accepted the term may be confusing and evocative of a k_mer of null length for this reason we propose neverwords to indicate strings that do not exist in a genome such neverwords have been proposed for the following aims i studies of population_genetics species identification and evolution ii drug_discovery iii target design for recalling or eliminating genetically_engineered organisms e g suicide targets iv design of molecular barcodes or specific adaptors for pcr_primers e g for the detection of viral insertion_sites in hosts genomes the algorithms proposed so_far for neverwords generation are only focused on the detection of absent words in genomes without providing any information about their distance in terms of number of mismatches this additional information is crucial when such k_mers are used as barcodes or pcr_primers for these purposes ideal neverwords must be distant enough to any position of the reference_genome and must possess primer like features here we present keeseek software developed for the design of distant k_mers that can be used as barcodes or pcr_primers keeseek allows the user to generate for any reference_genome a set of k_mers absent in that genome selecting a desired length and a minimum number of mismatches along all positions of the reference the advantage versus previous tools is the capability to produce longer_sequences results were obtained up to the length of nt and most importantly to provide information about the number of mismatches and the position of the best match in the reference in addition a set of filters has been implemented to select only k_mers with primer like features the algorithm is written in c and cuda to exploit the high parallelization provided by graphics_processing gpus we have assessed keeseek on three model_organisms mycobacterium_tuberculosis arabidopsis_thaliana and homo_sapiens and at different word lengths up to nt reports for each reference_genome a small panel of mers with a minimum distance of three mismatches and the relative computational time required to generate them the results were validated by searching them with a thirdparty tool glsearch based on the needleman and wunsch algorithm additionally a comparison of searching times between gpu and cpu implementations has been performed note each nullomer was generated in an independent run of the algorithm using the anagram mode we started by defining an equal distribution of the four nucleotides a t c and g and we reshuffled the anagrams starting from a random seed r one of the nullomers with the highest distance from the respective reference_genome is shown for each run times refer to the first block of evaluated k_mers see supplementary_file s for details obtained on a tesla gpu m loading of the genome is not considered computational times required to search for a sequence of length on three selected genomes obtained by running the gpu_implementation of keeseek default options its multithreaded cpu version n option and glsearch algorithm the y axis is in logarithmic scale see supplementary_file s for additional details 
