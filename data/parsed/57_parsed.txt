accurate self correction of errors in long_reads using de_bruijn motivation new long_read sequencing_technologies like pacbio smrt and oxford nanopore can produce sequencing_reads up to bp_long but with an error_rate of at least reducing the error_rate is necessary for subsequent utilization of the reads in e g de_novo the error_correction problem has been tackled either by aligning the long_reads against each other or by a hybrid_approach that uses the more accurate short_reads produced by second_generation to correct the long_reads results we present an error correction_method that uses long_reads only the method consists of two phases first we use an iterative alignment_free correction_method based on de_bruijn with increasing length of k_mers and second the corrected reads are further polished using long_distance dependencies that are found using multiple_alignments according to our experiments the proposed method is the most accurate one relying on long_reads only for read sets with high coverage furthermore when the coverage of the read set is at least the throughput of the new method is at least higher availability_and lorma is freely_available atwith the diminishing costs high_throughput has become a commonplace technology in biological_research whereas the second generation sequencers produced short but quite accurate reads new technologies such as pacific_biosciences and oxford nanopore are producing reads up to bp_long but with an error_rate at least although the long_reads have proven to be very helpful in applications like genome_assembly the error_rate poses a challenge for the utilization of this data many methods have been developed for correcting short_reads but these methods are not directly applicable to the long_reads because of their much higher_error moreover most research of short_read error_correction has concentrated on mismatches the dominant error type in illumina data whereas in long_reads indels are more common recently several methods for error_correction of long_reads have also been developed these methods fall into two categories either the highly erroneous long_reads are self corrected by aligning them against each other or a hybrid strategy is adopted in which the long_reads are corrected using the accurate short_reads that are assumed to be available most standalone error_correction tools like proovread lordec lsc and jabba are hybrid methods pbcr is a tool that can employ either the hybrid or self correction strategy most hybrid methods like pbcr lsc and proovread are based on the mapping_approach they first map the short_reads on the long_reads and then correct the long_reads according to a consensus built on the mapped short_reads pbcr extends this strategy to selfcorrection of pacbio reads by computing overlaps between the long_reads using probabilistic locality sensitive hashing and then correcting the reads according to a consensus built on the overlapping reads as the mapping of short_reads is time and memory consuming lordec avoids the mapping phase by building a de_bruijn dbg of the short_reads and then threading the long_reads through this graph to correct them jabba is a recent tool that is also based on building a dbg of short_reads while lordec finds matches of complete k_mers in the long_reads jabba searches for maximal_exact between the k_mers and the long_reads allowing it to use a larger k in the dbg in this paper we present a self correction_method for long_reads that is based on dbgs and multiple_alignments first our method performs initial correction that is similar to lordec but uses only long_reads and performs iterative correction rounds with longer and longer k_mers this phase considers only the local_context of errors and hence it misses the long_distance dependency information available in the long_reads to capture such dependencies the second phase of our method uses multiple_alignments between carefully_selected reads to further improve the error_correction our experiments show that our method is currently the most accurate one relying on long_reads only the error_rate of the reads after our error_correction is less than half of the error_rate of reads corrected by pbcr using long_reads only furthermore when the coverage of the read set is at least the size of the corrected read set of our method is at least higher than for pbcr 
