structural_bioinformatics fast and accurate non sequential protein_structure using a new asymmetric linear sum assignment heuristic motivation the three_dimensional tertiary_structure of a protein at near atomic_level resolution provides insight alluding to its function and evolution as protein_structure decides its functionality similarity in structure usually implies similarity in function as such structure alignment_techniques are often useful in the classifications of protein_function given the rapidly_growing rate of new experimentally_determined structures being made available from repositories such as the protein_data fast and accurate computational structure comparison tools are required this paper_presents spalignns a non sequential protein_structure alignment_tool using a novel asymmetrical greedy search technique results the performance of spalignns was evaluated against existing sequential and non sequential structure alignment_methods by performing trials with commonly used datasets these benchmark_datasets used to gauge alignment_accuracy include i pairwise_alignments implied by the homstrad database of homologous_proteins ii a subset of difficult alignments from set i that have low structure similarity iii pairwise_alignments of proteins with similar structure but different topology and iv a subset of pairwise_alignments from the ripc set spalignns is shown to achieve_greater alignment_accuracy lower or comparable root_mean distance with increased structure overlap coverage for all datasets and the highest agreement with reference alignments from the challenging dataset iv above when compared with both sequentially constrained alignments and other non sequential alignments availability_and spalignns was implemented in c the source_code binary executable and a web_server version is freely_available at http sparksthe three_dimensional tertiary_structure of proteins at near atomic_level resolution provides an indication of their function and evolutionary_relationships in particular similarity in structure usually implies similarity in function accordingly functions of a protein without annotated functions can be predicted if it is structurally_similar to proteins with known functions these comparisons are productive because protein_structures are often more conserved than their sequences accurate computational structure comparison is complementary to the much slower process of manual classification which is unable to keep pace with newly determined structures from structural_genomics as a consequence protein_structure has become an important technique for computational_biology researchers involved in protein classification evolutionary_relationship determination protein functional prediction molecular_modelling and protein_engineering protein_structure has been studied for over thirty_years with a large number of computational_tools and techniques developed to address the problem in general protein_structure can be defined as generating the set of residue pair mappings which maximizes the detection of similarity whilst minimizing geometric divergence to date this has been achieved in two ways sequentially and non sequentially a valid sequential alignment is achieved through adherence of the following two constraints exclusivity no amino_acid can be aligned with more than one amino_acid in the other protein and ordering the order of amino_acids must be maintained with respect to the alignment that is if amino_acids i and j in one protein are aligned with amino_acids k and l in the other protein then i j if and only if k l alternatively non sequential alignments release the ordering constraint and only enforce the exclusivity constraint which in some instances has been found to improve similarity detection performance compared with sequentially constrained alignments potentially uncovering hidden or unexpected relationships assisting with evolutional and functional_annotations representative examples of sequential alignment_methods in early studies include dali ssap ce fatcat tmalign frtmalign and salign a recent sequential alignment_method is spalign which optimizes a size independent score called sp score which fixes the cutoff distance at a and removes size dependence by using a normalization pre factor spalign demonstrated improvements of alignment_accuracy compared with dali ce tmalign and frtmalign as shown in representative examples of non sequential alignment_methods in earlier_studies include dali this tool can produce both sequential and non sequential alignments geometric hashing sarf mass b mustang gangsta snap flexsnap click and mican both gangsta and click methods make use of combinatorial based_approaches to produce non sequential structure alignments gangsta is an extension of the original genetic_algorithm for non sequential and gapped structure alignment gangsta tool and replaced their genetic_algorithm component with a combinatorial_approach providing improved_efficiency and reliability click alignments are generated by grouping locally aligned representative atoms within a certain distance threshold and then matches these groups into the best combination that maximizes coverage with the least_squares fit flexsnap uses a greedy_algorithm for chaining aligned fragment pairs afps allowing for flexible alignments to be produced by introducing hinges between afps mican is based on the geometric hashing paradigm and focuses on sses for alignment utilizing a multiple vector representation for each sse this study employed combinatorial_optimization techniques specifically a linear sum assignment problem lsap algorithm to produce non sequential structure alignments of proteins we developed the asymmetrical greedy search ags algorithm that locates an approximate lsap solution efficiently with negligible difference from the global minimum the new non sequential alignment software_package spalignns is based on the optimization of sp score for structure alignment spalignns achieves highly_accurate alignment results with better or comparable rmsd at a higher number of aligned residue pairs in a significantly_shorter computational time than click 
