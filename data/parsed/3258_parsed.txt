ngsane a lightweight production informatics framework for high_throughput data analysis the initial steps in the analysis of next generation sequen_cing data can be automated by way of software pipelines however individual components depreciate rapidly because of the evolving technology and analysis methods often rendering entire versions of production informatics pipelines obsolete constructing pipelines from linux bash commands enables the use of hot swappable modular components as opposed to the more rigid program call wrapping by higher_level languages as implemented in comparable published pipe lining systems here we present next_generation analysis for enterprises ngsane a linux based high_performance enabled framework that minimizes overhead for set up and processing of new projects yet maintains full flexibility of custom scripting when processing raw_sequence the initial steps of analyzing next_generation ngs_data can be automated in standardized pipelines for e g the many steps in snp_calling and rna_seq analysis this is critical as further decreasing sequencing_costs and expanding use of replicates to assess biological_variability will substantially_increase future study sizes therefore making the automated documented and reproducible processing of large_numbers of samples across diverse projects using high_performance hpc clusters paramount yet because of the constantly_evolving technology software and new application areas maintaining such production informatics pipelines can be labor_intensive to address_this several software_packages have been published in recent_years however currently available tools are either web_based services e g galaxy where even api based access to the web_service functionality is not readily amenable to production scale analysis practices or heavyweight frameworks written in user_friendly languages such as snakemake and nestly python kosterkoster and rahmann gatks queue scala https github com broadgsa gatk or bpipe groovy which encapsulate the actual program call in a wrapper script specific syntax hindering the development of pipeline extensions ngsane is a lightweight linux based hpc enabled framework that minimizes overhead for set up and processing of new projects yet maintains full flexibility of custom scripting for processing raw_sequence ngsane allows end_users and developers to construct pipelines from call statements that can be tested on the command_line directly without syntax alterations or wrapper script involvement providing flexibility in software usage a substantial advantage when analysis_pipelines are constantly revised as new algorithms are developed we describe ngsanes aims below data security and reusability the framework separates project specific files from reference data scripts and software suites that are reusable in other projects access to confidential data is handled transparently via the underlying linux permission system the transaction between projects and framework is facilitated by a project specific configuration file that defines paths to reference data as well as the analysis tasks to perform ngsane supports systems with hierarchical storage management specifically data migration facility by ensuring files are online when needed hpc and parallel execution ngsane supports sun_grid and portable batch system job scheduling and can be operated in different modes for development and production thus enabling flexible processing of ngs_data hpc job partitioning and submission is independent from the program calls therefore enabling new technologies e g hadoop to be incorporated hot swapping and adaptability individual task blocks e g read_mapping are packaged in bash script modules which can be executed locally or on subsets to test module code submission parameters and compute node environment in stages during production ngsane automatically submits separate module calls for each input_file or set of files to the hpc queue this allows different existing modules parameter_settings or software to whom correspondence should be addressed the author published_by this is an open_access the terms of the creative_commons http creativecommons org licenses bync which permits non commercial re use distribution and reproduction in any medium provided the original_work for commercial re use please_contact permissions_oup com versions to be executed by changes to the project specific configuration file rather than the software code hot swapping reproducibility and checkpoint recovery a full audit trail is generated recording performed tasks used reference data timestamps software version as well as hpc log files including any errors ngsane gracefully recovers from unsuccessfully executed jobs be it owing to failed commands missing or incorrect input or under resourced hpc jobs by cleanly restarting after the most recent successfully executed checkpoint robust execution and full monitoring in our experience modular workflows are executed in stages with optional human quality_control nsane hence focuses on providing robust checkpointing and intuitive report generation however workflows can be fully_automated by using ngsanes control over hpc queuing systems and by leveraging the customizable interfaces between modules when submitting multiple dependent stages at once automated project summary creation ngsane generates a high_level summary project card and c to enable informed decisions about the experimental success this interactive html report provides an access point for new lab members or collaborators furthermore the project card can be used as a gold_standard for software_development when using a continuous integration server complete customization ngsanes configuration file contains details about the submission system typical hpc resource allocations and location of third_party software however ngsanes credo is that every parameter can be overwritten hence default_parameters can be adjusted in the project specific configuration file to indicate different software versions additional resources or an altered output location additional parameters such as a specific hpc queue or new parameters in a software release can be provided to each program via a special free form variable in the configuration file repeated calls as stated by pipelines often have to be rerun on the full or a subset of the data with possibly altered parameter_settings ngsane facilitates and documents this by allowing multiple automatically created configuration files knowledge_transfer ngsane provides a unified_framework i e folder structure for processing data from different experimental_protocols this allows co investigators and reviewers to easily understand and reproduce work from ngsanes log and report files ngsane is open_source and available via github currently implemented workflows include those for adapter trimming read_mapping peak_calling motif_discovery transcript assembly variant_calling and chromatin conformation analysis these workflows use publicly_available published software yet allow the end_user to add his her own code and create new workflows as required ngsane is also available as amazon machine image and can be deployed to the amazon elastic compute cloud ec using starcluster to allow on demand processing of samples without requiring software installation or hpc maintenance b 
