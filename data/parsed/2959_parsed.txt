micc an r package for identifying chromatin_interactions from chia_pet data chia_pet is rapidly emerging as an important experimental approach to detect chroma tin long_range at high_resolution here we present model based interaction calling from chia_pet data micc an easy to use r package to detect chromatin_interactions from chia_pet sequencing_data by applying a bayesian mixture_model to systematically remove random li gation and random collision noise micc could identify chromatin_interactions with a significantly_higher sensitivity than existing_methods at the same false_discovery availability_and high_throughput aiming to detect chromatin_interactions are rapidly developing these years among them chia_pet can genome widely detect chromatin_interactions that are associated with the protein of interest it is suitable for studying physical_interactions between regulatory_elements such as enhancerpromoter interactions however chiapet experiment suffers from high levels of noises caused by chromatin random collision events and random ligation in solution therefore it needs effective computational_methods to process raw chia_pet data up to now there are few tools in hand to deal with chia_pet data chia_pet tool is the first one freely_available to the public which combines p values from hyper geometric test and an arbitrary and strict threshold for no less than paired_end tags pets to identify chromatin_interactions however this strategy does not consider random collision noise and the cut_off for pet count may result in losing some relatively weaker but nonrandom interactions recently another method called chiasig tries to take chromatin random collision events into account the authors showed an improvement than chia_pet tool by comparing with c data however chiasig is much too conservative thus suffers from high false_negative here we present micc an easy to use r package to process chia_pet data it aims to detect chromatin_interactions at a high_sensitivity while controlling false_discovery fdr at a reasonable level the input of micc is raw pet clusters derived from chia_pet data the final output of micc includes i a list of posterior_probabilities that describe the pet clusters as true interaction clusters and ii the corresponding fdr micc can always detect significantly more interactions than chia_pet tool and chiasig at the same fdr on different datasets the interactions detected by micc are also more consistent between biological_replicates cluster tipc a random collision pet cluster rcpc or a random ligation pet cluster rlpc we used three types of features i pet count c ab between anchor regions a and b ii total pet count c a c b in anchor region a b and iii genomic_distance d ab between anchor regions a and b d ab if a and b are in different chromosomes if a b is an rlpc c ab is modeled to follow a hyper geometric distribution if a b is a tipc or rcpc we modeled it as a discrete pareto distribution i e zeta distribution since c ab follows power_law when c ab is sufficiently_large c ab supplementary the parameters of the zeta distributions depend on d ab supplementary and we set it as a quadratic fractional function it is noticed that logc a c b is significantly_larger for reproducible pet clusters between replicates than that of those non reproducible ones supplementary thus we used c a and c b as features to estimate the prior probability of an rcpc the feature d ab is then used to describe the prior probability for observing an rlpc to filter out random ligation noise supplementary the full model consists of three components each of which is the conditional probability_distribution of pet count for tipc rcpc and rlpc respectively the prior probability and parameters for each component can be described by total pet count in anchor regions and the genomic_distance between two anchors we proposed a new method micc to call significant chromatin_interactions from chia_pet data compared with chia_pet tool micc recovered a significantly_greater fraction of interactions detected in higher depth sequencing library using a much lower depth sequencing library it also gives a more consistent ranking for the pet clusters thus can improve the reproducibility between experimental replicates by comparing with c data we showed that micc can detect significantly more validated interactions than chiasig besides the interactions with low pet count detected bypet interactions validated by c left and fraction of total c validated chia_pet interactions that are predicted by either computational_methods right micc have a significant fraction of overlapping with c data suggesting micc is feasible to search for weak interactions these features make micc superior over other existing_tools especially when processing chia_pet data with less sequencing_depth 
