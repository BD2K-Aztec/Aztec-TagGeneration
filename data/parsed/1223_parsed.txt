genome_analysis cwig compressed representation of wiggle bedgraph format motivation bigwig a format to represent read density data is one of the most popular data types they can represent the peak_intensity in chip_seq the transcript_expression in rna_seq the copy_number in whole_genome etc ucsc encode_project uses the bigwig format heavily for storage and visualization of tb encode hg database tb of the total space is used to store bigwig files bigwig format not only saves a lot of space but also supports fast queries that are crucial for interactive analysis and browsing in our benchmark bigwig often has similar size to the gzipped raw_data while is still able to support random queries per second results although bigwig is good enough at the moment both storage space and query time are expected to become limited when sequencing gets cheaper this article_describes a new method to store density data named cwig the format uses on average one third of the size of existing bigwig files and improves random query speed up to times availability_and http as the next_generation ngs cost reduces huge amount of reads can be generated nowadays after aligning the reads on a reference_genome we can generate the read density i e the number of ngs_reads covering each base in the genome density data are useful because it can be used to represent the transcript_expression in rna_seq the peak_intensity in chip_seq the copy_number in whole_genome etc for example shows plots of density signals of a chip_seq region and a rna_seq region respectively currently read density is often represented using the wiggle wig format the bedgraph format or the bigwig format they all store the densities of ngs_reads along the whole reference_genome wig and bedgraph are uncompressed text formats thus are usually huge bigwig is the compressed form of wig and bedgraph its compression approach is to sort and partition the density data into blocks and compress them by gzip bigwig also supports a few types of queries over any selected region coverage max min average and standard_deviation these queries facilitate efficient downstream_analysis and enable fast visualization of the data with bigwig format ucsc_genome can support interactive browsing of density data in fact bigwig is one of the most popular track types in the hg browser tracks of all hg tracks are bigwig tracks and they use tb it is equivalent to of the total space for all ucsc hg tracks to reduce space and improve query speed the resolution of the density signals of some ucsc tracks has been reduced which affects the accuracy in the future it is important to reduce the storage space of density data and improve their query speed while maintaining the accuracy of the data our project aims to develop an alternative storage format for density signal our design is based on careful observations of the data and knowledge of succinct and compressed data_structures for example we observed that mapping locations of ngs are usually overlapped regions with non zero intensity are often clustered this fact enables us to reduce the space another observation is that the density values of adjacent_regions are not independent storing the differences between adjacent density values can reduce the size of of the datasets in ucsc hg to enable fast queries we use data_structures like sdarray that can compress data while still allowing random_access we also adopt a modified cartesian tree that uses linear number of bits and provides constant time min max query similar to ucsc bigwig tool cwig tool also implements the remote file access feature in this feature the program and the data file can be placed in different computers the program can answer queries by accessing the data file through the http https network protocol in our experiment using all ucsc hg database the cwig format uses on average one third of the size of existing bigwig files and uses much lower space in high_resolution data_files in addition it also improves query speed by times depending on the query types this article proposed the file_format for cwig to store signal data comparing with bigwig cwig not only uses lesser space but also provides faster queries this format should be useful for visualization applications like ucsc_genome and broad institute integrative genome viewer and for biologists to analyze and discover features in their data in the future we would like to extend our idea to represent other types of data like bigbed and bam we also want to consider lossy compression_methods to gain better compression over noisy_data 
