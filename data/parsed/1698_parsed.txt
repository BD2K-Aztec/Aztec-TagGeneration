exploring genome characteristics and sequence quality without a reference motivation the de_novo of large complex genomes is a significant challenge with currently available dna_sequencing while many de_novo software_packages are available comparatively little attention has been paid to assisting the user with the assembly results this article addresses the practical aspects of de_novo by introducing new ways to perform quality_assessment on a collection of sequence_reads the software implementation calculates per base error_rates paired_end fragment_size distributions and coverage metrics in the absence of a reference_genome additionally the software will estimate characteristics of the sequenced_genome such as repeat content and heterozygosity that are key determinants of assembly difficulty availability the software described is freely_available online https github com jts sga and open_source under the gnu public license the availability of inexpensive dna sequence_data has led to a vast increase in the number of genome_projects for example the genome k project genome k community of aims to sequence vertebrate_genomes in the upcoming years despite the advances in the production of dnasequence data performing de_novo remains_a this challenge was highlighted by the recent assemblathon project in this competition sequence_data was obtained for three vertebrate_genomes twenty one teams contributed assemblies of the three genomes producing assemblies in total the quality of the assemblies was highly_variable both between submissions for the same genome and within individual software_packages across the three species in our view this variability stems from the practical difficulty of designing an assembly strategy for instance selecting software and its parameters when little is known about the structure of the underlying genome and the quality of the available data this article aims to address this uncertainty most current genome_assemblers are based on constructing a graph representing the relationship between sequence_reads or their subsequences the sequence of the underlying genome is modeled as a walk or a set of walks through the graph the properties of the sequenced_genome and quality of the input_data is reflected by the structure of the graph repeats sequence_variation in a diploid or polyploid genome and sequencing_errors cause branches in the graph these branches increase the difficulty of the assembly by obscuring the true walks that represent the sequence of the genome with many false alternatives below we will show how we can estimate the individual contribution of sequence_variants repeats and sequencing_errors to the branching structure of an assembly_graph and we will discuss how the branching structure impacts assembly difficulty additionally we will develop methods to perform rich quality_assessment without a reference_genome complementing previously_developed approaches fastqc http www bioinformatics babraham ac uk projects fastqc by estimating sequence_coverage per base error_rates insert_size distributions and providing a visual method to assess coverage biases due to sequence_composition our software is open_source under the gnu public license version and freely_available online https github com jts sga the implementation uses the fm_index data_structure which allows queries to be performed over a large text collection while limiting memory_usage this framework allows our analysis_pipeline to be run on gb of human_genome data in h using gb of memory on a single multi core computer the output of our software is a pdf report that allows the properties of the genome and data_quality to be visually explored by providing more information to the user at the start of an assembly project this software will help increase_awareness of the factors that make a given assembly easy or difficult assist in the selection of software and parameters and help to troubleshoot an assembly if it runs into problems while the development of new genome_assembly methods continues comparatively little attention has been paid to assisting the user from a practical standpoint our program along with tools like velvetoptimiser http bioinformatics net au software velvetoptimiser shtml and kmergenie attempts to fill this gap the program we developed helps the user perform quality checks on their data while simulatenously assessing the difficulty of the assembly by measuring the branching structure of a de_bruijn by helping the user better understand their data our program makes progress towards the goal of making assembly an easier and more consistent process the ability to identify low quality data early in the assembly process will help to avoid effort wasted on unsuitable data and guide the application of optional preprocessing_steps like quality trimming the reads the pdf report generated by the software provides a medium for discussing a given assembly problem for instance when getting help on a mailing list or online the methods described in this article are our initial attempt at assessing data_quality and genome characteristics there are two promising ways to extend this work first we have limited our model to diploid genomes extending the model to higher ploidly would increase the range of genomes that could be characterized second we only describe methods to assess short insert pairedend libraries many assembly projects use a range of paired_end libraries including multi kilobase insert_sizes the addition of methods to perform quality_controls on these libraries would be a valuable addition to our program 
