sequence_analysis kalignp improved multiple_sequence using position_specific penalties in kalign kalign is one of the fastest and most accurate methods for multiple_alignments however in contrast to other methods kalign does not allow externally supplied position_specific penalties here we present a modification to kalign kalignp so that it accepts such penalties further we show that kalignp using position_specific penalties obtained from predicted secondary_structures makes steady improvement over kalign when tested on balibase as well as on a dataset derived from pfam a seed alignments availability_and kalignp is freely_available atthe alignment of multiple_sequences is essential for many tasks in sequence_analysis e g protein_structure and function prediction similarity_search and phylogenetic_analysis due to the importance of multiple_sequence msa in a variety of biological_applications a number of programs have been developed three aspects are usually considered when developing an msa program the alignment_accuracy the computational speed and the memory_usage kalign is one of the fastest msa methods and still the alignment_accuracy is comparable to many of the slower methods moreover it produces high_quality alignments consistently when aligning large number of sequences i e kalign is well suited for msa tasks in large_scale genome_analysis however in contrast to other methods such as clustalw kalign does not allow externally supplied position_specific penalties espsgp showed that gaps occur far more often between major secondary_structure than within also gaps are much more frequent in disordered_regions of proteins for integral transmembrane tm proteins residues are more conserved at tm regions and few gaps are allowed within to whom correspondence should be addressed further the inclusion of espsgp allows some inclusion of expertise knowledge into the alignment procedure here we introduce kalignp as a modified_version of kalign that accepts espsgp unlike clustalw where espsgp is only applicable to profile alignments kalignp incorporates espsgp into sequences and forward them to the full progressive alignment we benchmarked kalignp using gap penalties from predicted_secondary with other methods on balibase kalignp outperformed kalign on all five reference sets the results were evaluated by sp sum of pairs score and tc total columns score sp score is the sum of scores of the projected pairwise_alignments and tc score is the sum of scores of each column for a multiple_alignment the e and for sp and tc scores respectively with the alternative hypothesis that true difference in the means of kalign and kalignp is less than the paired_t was performed by r here kalignp were optimized on balibase using a fold crossvalidation see_supplementary the largest improvement was made on rv for proteins with insertions where kalignp made a improvement for sp score and for tc score see supplementary only two methods in the benchmark outperformed kalignp t coffee and probcons but these methods are much slower note that the speed of kalignp for alignment alone is comparable to kalign however including the time for secondary_structure and espsgp calculation it is slower but still comparable to kalignp made a steady improvement on the alignment of tm proteins as well as shown in the benchmark on ref for tm proteins of balibase kalignp outperformed kalign by for sp score and for tc score however the significance of the improvement as shown by the t test is not strong p values are and for sp and tc scores respectively this is most likely because the sample_size is too small the balibase ref contains only eight alignments and the results for kalignp were obtained by optimizing parameters on all these alignments therefore over training might be an issue here to test the robustness of kalignp on the alignment of tm proteins we created another reference dataset pfama mem which was derived from pfam a version seed alignments and filtered by matching the key word transmembrane in the de record the same parameters optimized from ref were used to test these alignments in pfama mem see supplementaryfor a list of these pfam a alignments a similar improvement of kalignp over kalign was obtained the p values for paired_t are e and e for sp and tc scores respectively 
