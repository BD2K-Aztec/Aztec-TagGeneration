genome_analysis splitmem a graphical algorithm for pan genome_analysis with suffix skips motivation genomics is expanding from a single reference per species paradigm into a more comprehensive pan_genome approach that analyzes multiple_individuals together a compressed_de is a sophisticated data_structure for representing the genomes of entire populations it robustly encodes shared segments simple single_nucleotide and complex structural_variations far beyond what can be represented in a collection of linear sequences alone results we explore deep topological relationships between suffix_trees and compressed de_bruijn and introduce an algorithm splitmem that directly constructs the compressed_de in time and space linear to the total number of genomes for a given maximum genome_size we introduce suffix skips to traverse several suffix links simultaneously and use them to efficiently decompose maximal_exact into graph nodes we demonstrate the utility of splitmem by analyzing the nine strain pan_genome of bacillus_anthracis and up to strains_of revealing their core_genome properties availability_and source_code available open_source http splitmem sourceforge net we implemented algorithm along with supplementary algorithm s in c and made it available open_source as the splitmem software the code has been optimized for pangenome and multi k_mer analysis such that it can construct the graphs for several values of k iteratively without rebuilding the suffix_tree all testing was executed on a single core of a core xeon e server running at ghz and a total of tb of ram at cold spring harbor laboratory using the software we built compressed de_bruijn for the pan genomes of main chromosomes of two species the nine strains of b anthracis and an arbitrary selection of nine strains of e coli using the k_mer lengths and bp accessions listed in supplementary the three different k_mer lengths provide different contexts for localizing the graphs shorter values provide higher_resolution whereas longer values will be more robust to repeats and link variations in close_proximity into a single_event the overall characteristics of the pangenome graphs are presented inand renderings of the graphs are depicted in supplementary figures s s the pan_genome graphs of the two species have similar topologies although for a given value of k the e coli graph has times as many nodes and edges than b anthracis in both cases the node length distributions are exponentially_distributed as shown in supplementary figures s and s for example the mean node length for b anthracis with k_mers of length is bp and extending to as long as bp the sharp peak at bp occurs from an enrichment of mutations where subpopulations or individual strains in the population differ by isolated single nucleotides more than k bp apart at these sites a bubble will form in the graph with a pair of nodes that are k bp_long capturing all of the k_mers that intersect the variant mutations of more than a single base form bubbles with nodes that are k v bp_long where v is the length of the variant copy_number and other structural_variants lead to more complex graph topologies but are all encoded in the pan_genome graph shows the levels of population wide genome sharing among the nodes of the compressed de_bruijn of the pan genomes with varying k_mer lengths the sharing in b anthracis is much higher than in e coli across the levels of genome sharing this follows naturally from the high_diversity of e coli_strains while many of the available sequences of b anthracis were closely_related and sequenced to track the origin of the amerithrax anthrax attacks a major strength of a graphical pan_genome representation is that in addition to determining the shared or genome specific sequences the graph also encodes the sequence_context of the different segments we define the core_genome to be the subsequences of the pan_genome that occur in at least of the underlying genomes we computed the distance of each noncore node to the core_genome in python using networkx with a branch and bound search intuited by dijkstras algorithm for shortest_path note a breadth first search is not sufficient as two nodes can be further apart in terms of hops while they are actually closer neighbors with respect to base_pair distance along the path separating them it traverses all distinct paths emanating from the source node until either a core node is reached or the current node was found to already have been visited by someshorter path once a path is found from the source node to the core_genome it uses this distance to bound the maximum search distances of the other candidate paths using this approach we performed both a forward search among descendants and a backward search among predecessors to identify the distance to the closest core node and chose the minimum of these two distances in the two pan_genome graphs this search takes o m time per source node where m is the number of distinct edges in the graph thus this computation takes a total runtime of om over all nodes in the graph to keep the search tractable we limited the search to a hop radius around each node supplementaryshows the distribution of distances in the graphs overall for b anthracis most of the nodes were in the core_genome because the strains are so similar or there was a very short path to the core_genome in contrast the results for e coli show the distribution of distances to the core_genome follows an exponential distribution suggesting a complex evolutionary_history of mutations comparative_genomics has been and continues to be one of our most powerful_tools for understanding the genome of a species now that genomic_data are becoming more abundant we are beginning to shift away from reference_genomes and see the rise of pan genomics already hundreds of microbial_species have multiple complete_genomes available and through the rise of long_read sequencing_technologies from pacbio and other companies we expect a rapid_growth in the availability of additional complete_genomes sequences that are highly_conserved or segregating across the population can reveal clues about their phenotypic roles and a comprehensive pan genomic approach allows us to directly measure conservation in the context of the flanking_sequences the graphical pangenome approach also consolidates all available information about complex structural_variations and gene_flow into a unified_framework our new splitmem algorithm efficiently computes a graphical_representation of the pan_genome by exploiting the deep relationships between suffix_trees and compressed de_bruijn mems are readily identified in a suffix_tree and through the splitmem algorithm are efficiently transformed into the nodes and edges of a compressed_de this algorithm effectively unifies the most widely used sequence data_structures in genomics into a single family containing suffix_trees suffix_arrays fm indexes and now compressed de_bruijn to accomplish this goal we have proposed a new construct called suffix skips that generalizes the well established concept of suffix links to interrelate more distantly_related portions of the suffix_tree to demonstrate the utility of the algorithm we have applied it to analyze the pan genomes of all b anthracis and all e coli genomes interestingly when comparing a sample of nine e coli genomes with the nine b anthracis genomes the distributions of the lengths of the nodes in the two pan_genome graphs are the running time and peak memory of splitmem on the pangenome graphs of increasing numbers of e coli_strains with k_mer length of each point represents the minimum value recorded over five trials to reduce measurement noise introduced by competing activity of the server the line represents the linear_regression of the points similar whereas other properties are markedly different such as the distributions of the levels of sharing or the distance to the core genomes this suggests that we have only narrowly explored the genomic variability of b anthracis and future experimental work remains to examine the functional significance of the variable_regions future work remains to improve splitmem and further unify the family of sequence indices although our current_implementation can easily scale to dozens or hundreds of genomes on a common server most desired are techniques to reduce the space consumption for even larger numbers of genomes it is not directly possible to apply recent_approaches using bloom filters or other techniques to save space but is an interesting research problem to consider we are also currently investigating techniques to construct a pan_genome from the fm_index building on the algorithms of the string_graph assembler for assembling a genome from short_reads these do not directly apply either without an exhaustive consideration of every kmer in the genomes but there may be ways to generalize our algorithm from suffix_trees we also aim to research additional downstream_analysis algorithms for the pan_genome especially developing a sequence aligner which can align directly to the graph_structure finally we also aim to extend the splitmem algorithm to become more robust in the presence of incomplete genomes so that fragmented draft_genomes can be more readily analyzed 
