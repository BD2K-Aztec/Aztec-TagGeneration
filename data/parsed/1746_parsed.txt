fast alignment of fragmentation_trees motivation mass_spectrometry allows sensitive automated and high_throughput analysis of small_molecules such as metabolites one major_bottleneck in metabolomics is the identification of unknown small_molecules not in any database recently fragmentation tree alignments have been introduced for the automated comparison of the fragmentation_patterns of small_molecules fragmentation pattern similarities are strongly correlated with the chemical similarity of the molecules and allow us to cluster compounds based solely on their fragmentation_patterns results aligning fragmentation_trees is computationally hard nevertheless we present three exact algorithms for the problem a dynamic_programming dp algorithm a sparse variant of the dp and an integer_linear ilp evaluation of our methods on three different datasets showed that thousands of alignments can be computed in a matter of minutes using dp even for challenging instances running_times of the sparse dp were an order of magnitude better than for the classical dp the ilp was clearly outperformed by both dp approaches we also found that for both dp algorithms computing the slowest alignments required as much time as computing the fastest metabolomics deals with the identification and quantification of small compounds below da and has received increasing interest during the last years all organisms especially plants fungi and bacteria synthesize many different metabolites and a large portion of them is still unknown the genome_sequence usually does not reveal information about metabolite structure as it does for protein_structure newly_identified metabolites often serve as leads in drug_design in particular for antibiotics for a high_throughput analysis of metabolites and other small_molecules mass_spectrometry ms is the predominant technology nuclear_magnetic reveals more information about the analyte but is inapplicable for high_throughput analysis due to its low sensitivity ms can be coupled with a separation method gas_chromatography liquid_chromatography or capillary_electrophoresis to analyze complex_mixtures like cell_extracts to obtain information beyond the compound mass the analyte is usually fragmented and fragment masses are recorded typically collision_induced is combined with liquid chromatographyms whereas gas chromatographyms uses electron_impact fragmentation the first attempt to develop computational_methods for analyzing fragmentation spectra of to whom correspondence should be addressed metabolites has been the dendral project in but the project was stopped after it became clear that automated structure_elucidation using ms data could not be achieved at that time today data analysis is still the major_bottleneck in metabolomics manual data analysis requires time and deep knowledge of the underlying chemistry due to the limited reproducibility of the data even library searches are difficult additionally spectral_libraries are vastly incomplete methods for de_novo sequencing of non ribosomal peptides have recently been developed but these methods rely on the fact that the analytes are structurally restricted polymers with predictable fragmentation when manually analyzing tandem_ms spectra chemists try to annotate fragmentation peaks and identify relations between fragments resulting in fragmentation pathways this approach has been automated by they calculate hypothetical fragmentation_trees solely based on the ms data fragmentation tree nodes are annotated with the molecular_formula of the fragments whereas edges represent losses to find a fragmentation tree that shows maximum agreement with the measured data we search for a tree of maximum edge_weight comparable to prize collecting steiner trees only lists of common and implausible losses are required as expert_knowledge about fragmentation mechanisms in experts evaluated the calculated fragmentation_trees and confirmed their excellent_quality recently methods to calculate fragmentation_trees from multiple ms and gas_chromatography ms data have been developed ms analysis of similar compounds results in similar fragmentation_trees proposed local tree alignments for the automated comparison of fragmentation_trees and showed that this method is superior to spectral comparison fragmentation tree alignments even allow for inter dataset comparisons for datasets measured on different instruments a tree alignment may contain matches mismatches insertions_and but respects the structure of the two trees fragmentation tree similarity is defined via edges representing losses and nodes representing fragments a local tree alignment contains those parts of the two trees where similar fragmentation cascades occurred tree alignments were introduced byand can be applied for rna_secondary comparison rna_structure trees are ordered that is the children of any node have a fixed order in contrast fragmentation_trees are unordered as there cannot exist any sensible ordering for the sub fragments of some fragment in this respect fragmentation_trees are more similar to phylogenetic_trees than to rna_structure trees whereas efficient polynomial time algorithms exist for the alignment of ordered trees the alignment of unordered trees is computationally hard namely max snp hard this implies that there exists no in case both trees have fixed maximum out degree an optimum alignment can be computed via dynamic_programming dp in polynomial time in comparison computing the edit_distance between two unordered trees remains max snp hard even for bounded degrees an informal algorithm for aligning fragmentation_trees was presented by and join nodes were introduced to account for missing nodes in one of the trees compared missing nodes result from missing peaks in one of the spectra do not give a correctness proof or running time analysis for the algorithm as related work we mention the treeconstrained bipartite matching problem where either a node or any of its descendants may be part of the matching this problem is also apx hard our contribution we modify the tree alignment algorithm fromfor edge similarities and local_alignments and analyze its running time we then show how to integrate join nodes without increasing the worst_case running time next we modify the algorithm to allow for sparse dp a technique common in rna_folding this does not only decrease the practical memory_requirements of the method but more importantly also severely decreases running_times in practice furthermore we present an integer_linear ilp for the fragmentation tree alignment problem as ilps often solve np_hard problems swiftly in practice we then evaluate all methods on real_world data and find that the sparse dp approach dominates the classical dp resulting in an fold speed up for one dataset somewhat unexpectedly the ilp is clearly outperformed by both dp approaches 
