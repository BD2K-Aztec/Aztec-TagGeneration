phylogenetics ceiba scalable visualization of phylogenies and d d image collections phylogenetic_trees with hundreds of thousands of leaves are now being inferred from sequence_data posing significant challenges for visualization and exploratory_analysis image data supplying valuable context for species in trees and cues for exploring them are becoming increasingly available in biodiversity databases and elsewhere but have rarely been built into tree visualization software in a scalable way ceiba lets the user explore large trees and inspect image collection arrays sets of homologous images comprising mixtures of d and d image objects ceiba exploits recent improvements in graphics hardware opengl toolkits and many standard high performance computer graphics strategies such as texture compression level of detail control culling animations and image caching its tree layouts can be tuned by user provided phylogenetic definitions of subtrees the code has been extensively tested on phylogenies of up to leaves and images availability_and a manual datasets source_code distributed under gpl and binaries for os x are available at http sourceforge net_projects ceiba contact information_visualization can foster exploratory_analysis of large and complex datasets phylogenetic_tree visualization has been an active area of research in the past_decade with competing programs offering significantly different features user_interfaces and scalability one website lists programs http bioinfo unice fr biodiv tree editors html see supplementary in recent_years scalability has assumed greater_importance as phylogenetic_trees have markedly_increased in size trees with leaves are now fairly_common e g and attempts to build trees with or more leaves signal the increasing demand for large trees in comprehensive comparative_studies in ecology evolution and other domains phylogenetic_trees are often annotated with low complexity data such as discrete traits e g nucleotides but many biological_features such as morphological_traits are of much higher complexity and are commonly visualized as d images or d models reconstructed from ct_scans e g although some tree visualization programs allow imbedded images e g see supplementary image_processing capabilities have not been prominently featured in their development and some basic challenges to their integration into phylogenies remain for example in conventional d tree layouts images often either occlude one another or must be greatly_reduced in size to avoid this scalable integration of image data with tree visualization could foster exploration of comparative patterns in at least two ways first by using these data themselves as cues to aid navigation and exploration at large tree scales and second to embed these complex data types in an interactive phylogenetic framework that highlights the evolutionary links between the images the latter may come from large_databases of whole organism images such as encyclopedia of life http eol org databases of specific_traits such as morphbank http www morphbank net of d models derived from ct_scans such as digimorph http www digimorph org a homologous trait to provide phylogenetic context deeper in the tree sample images from the image collections of the leaves are displayed in image boxes rendered at internal nodes of the hierarchy this provides cues to the content of subtrees that can encompass a large subset of leaves thus compared with other programs that allow imbedded images ceiba offers two advantages i rendering automatically collated image collection summaries at internal nodes and ii imbedding of images at leaves in a d visualization that naturally lessens the impacts of image occlusion although a few programs are scalable to the same degree and can incorporate images e g archaeopteryx http www phylosoft org archaeopteryx and supplementary ceiba uses a number of techniques to integrate this scalability with imbedded images many of these take advantage of the hierarchical decomposition of the tree to avoid expensive layout computation and rendering operations of both trees and images until they are needed culling is used extensively and an optional image caching strategy is implemented in which recently visited but no longer visible images are freed from memory scalability of ceiba was evaluated in depth on two large trees included in the software distribution and leaves to evaluate what a user would experience in a lengthy interactive session the program was run in tour mode an animation that visits every subtree rendering all image collections in turn performance with d images was tested by spoofing the program into fetching a single reference mb image file for every leaf a tour of the default decomposition of the taxon tree ofvisited all subtrees containing d images with no apparent degradation of graphics performance and with memory_requirements image caching enabled never exceeding gb of ram a d surface model with polygons was attached to each of the leaves in the taxon tree and a comparable tour could be completed by allowing some degradation in the smoothness of the animation 
