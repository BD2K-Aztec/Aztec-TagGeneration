chopbai bam index reduction solves i o bottlenecks in the joint analysis of large sequencing cohorts advances in sequencing capacity have led to the generation of unprecedented amounts of genomic_data the processing of this data frequently leads to i o bottlenecks e g when analyzing a small genomic_region across a large number of samples the largest i o burden is however often not imposed by the amount of data needed for the analysis but rather by index files that help retrieving this data we have developed chopbai a program that can chop a bam index bai file into small pieces the program outputs a list of bai files each indexing a specified genomic interval the output_files are much smaller in size but maintain compatibility with existing software_tools we show how preprocessing bai files with chopbai can lead to a reduction of i o by more than during the analysis of kb genomic_regions eventually enabling the joint analysis of more than individuals availability_and the software is implemented in c gpl licensed and available atsequencing capacity has increased_dramatically making it feasible to sequence cohorts of tens_of of individuals the recent introduction of the hiseq x ten system allows for sequencing up to whole human_genomes per year at fold coverage raw_sequencing is typically processed with standard bioinformatics_pipelines on a computational cluster parallelized by sample several variant_calling tools such as gatks unifiedgenotyper need to work with aligned_reads from all sequenced individuals in order to achieve_higher and comparability across samples instead of parallelizing by sample we can parallelize this joint analysis by genomic_region here bam index files allow quick random_access to genomic_regions thus limiting the amount of i o performed on bam_files that are typically more than gb in size unfortunately this methodology does not scale for analyses of tens_of individuals in many cases we are interested in small regions where the amount of data transferred per individuals is dwarfed by the size of the index file a typical bai index file is roughly mb in size hence around gb of data transfer to a cluster node for each region is required in the case of individuals depending on the size of the region this overhead can be an order of magnitude larger than the data transfer required to obtain the aligned_reads from the bam_files thus the transfer of the indices becomes an i o bottleneck in the network to solve this issue we propose a method for chopping up the index in a predictable fashion so that each cluster node can use a small portion of the overall index and network traffic is reduced significantly we describe our method chopbai and show a reduction in data transfer of more than for kb genomic_regions whileto evaluate the gain of preprocessing bam indices with chopbai we indexed a gb bam_file containing reads from an icelander sequenced at fold coverage on a hiseq x ten sequencing machine and aligned with bwa mem to grch the complete bam index is mb in size whereas the reduced index built for a mb region on chromosome is on average only kb without linear index and kb including a linear index to quantify chopbais impact on i o we measured the total amount of data transferred by samtools when querying for regions of varying sizes the data transfer was measured using the strace tool and includes reading the bam index bam header and all chunks needed to retrieve the reads from the queried region displays the total amount of data read using the complete and reduced indices the absolute data transfer difference between the complete and reduced index remains the same over all tested interval sizes but it becomes proportionally less with increasing interval size as shown by the log scaled axis we observe a reduction in the data read for kb regions from mb for the full index to kb for the reduced index the amount of data written is equal for the complete and reduced indices chopbai can create reduced indices for a list of regions i e chop up the complete index into smaller pieces the running time for chopping the bam index for the complete human_genome into mb indices that overlap by kb was approximately s on a standard desktop computer thus imposing a negligible overhead in terms of preprocessing when running an analysis of several small regions across thousands of individuals such as certain commands in gatk and popins the status_quo puts an unnecessary burden on the network of a computational cluster with chopbais preprocessing the i o imposed by bam index files in the analysis of kb regions of bam_files can be reduced from to gb per job this reduction in network i o removes a significant bottleneck when processing a large set of samples over small regions and enables running an order of magnitude more jobs simultaneously as sequencing is becoming more and more common chopbai will be equally useful for analyzing_large sequencing cohorts of other species where the bai indexing scheme allows for fast access to small_subsets of reads conflict of interest none declared 
