data_and jamss proteomics mass_spectrometry simulation in java countless proteomics data_processing algorithms have been proposed yet few have been critically_evaluated due to lack of labeled data data with known identities and quantities although labeling techniques exist they are limited in terms of confidence and accuracy in silico simulators have recently been used to create complex data with known identities and quantities we propose java mass_spectrometry simulator jamss a fast self contained in silico simulator capable of generating simulated ms and lc_ms while providing meta_information on the provenance of each generated signal jamss improves upon previous in silico simulators in terms of its ease to install minimal parameters graphical_user multithreading capability retention time shift model and reproducibility proteomics_studies require the prediction of the quantity and identity of proteins in sample the accuracy of the determination relies wholly on the accuracy of the data_processing pipeline modules that systematically extract and process the components of the sample output_file despite the criticality of data_processing accuracy few published algorithms have quantitative comparisons against other algorithms using labeled datadata where the correct protein quantity and identity are known common strategies for labeling data are limited in terms of confidence and accuracy for example ms_ms identifications are biased towards the approximately most intense signals and have an approximately false_positive leading to evaluative results that are not representative of the dataset particularly among the more biologically_significant but less abundant peptides hand labeled datasets exist but due to the complexity of labeling by hand usually consist of small segments of data within an intensity threshold using existing_tools hand labeling consists of many subjective decisions and creating a set of replicates would take years construction of in silico datasets is an attractive alternative to labeling as these datasets automatically include labels in silico simulation consists of emulating the physiochemical processes involved in the mass_spectrometry analysis of a sample in order to produce an mzml or equivalent output_file similar to what would be generated in a real run but without any material or instrument time cost although more research is needed before an exact replicate of a real_sample run can be simulated the overall characteristics of the output data in terms of density noise signal shape etc are similar enough to be valuable as labeled data for lc_ms data_processing algorithmic evaluation lc_ms simulation is still in its infancy lc mssim an incorporated module of openms was the first simulator to produce fullfeatured ms simulated_data and the ability to extract simulation parameters from existing mzml files using machine_learning there remains much to be done in ms simulation existing simulators do not provide the molecular provenance of output signals necessary for generating ground_truth data for quantitative ms data_processing algorithm evaluation they have involved installation processes requiring installation of their parent libraries and a sometimes onerous degree of dependency management they are also both command_line programs with very little documentation neither program is multithreaded both programs feature many parameters some of which significantly alter the simulation outcome in unclear ways although mspire simulator produces run to run variation unlike mssimulator it does not vary the rt of eluents across runs and cannot produce a clone of a previous run when fed the same input and parameters although mspire simulators isotope trace generation features more realistic variance in m z and intensity than mssimulator it is many times slower and has no bound on ram requirements both programs seem limited in regards to ptms mspire simulator renders all ptms as static even variable ones and mssimulator seems to as well mssimulator produces the same isotope trace shape scaled for intensity for every peptide meaning its utility for generating datasets for evaluating data_processing algorithms is limited this article_describes the java mass_spectrometry simulator jamss a novel simulator designed to address each of the abovementioned drawbacks of current simulation software jamss is a gui based ms simulator in java see it creates fully annotated complex proteomic_datasets in mzml with straightforward csv provenance meta_information it can be used to generate lc_ms and ms data allowing for the evaluation of a wide_range of data_processing algorithms such as isotope trace extraction both in chromatographic and non chromatographic applications isotopic envelope extraction molecular envelope extraction and reduction and correspondence it has a limited number of intuitive parameters a self contained oneclick installation with no external libraries or dependencies and supports multithreading it creates isotope traces with realistic variance in both m z and intensity and has a user set memory upper_bound jamss handles variable ptms and static ptms jamss features controlled_randomized trace shape generators to createhas a straightforward gui interface to facilitate parameter selection for ms simulation run to run variation in replicates but uses controlled random seeding so it is possible to produce a clone of a previous run it maintains relative protein_abundance in isotope traces accounting for isotope trace variability and abundance distribution over ptms jamss also models rt shifts in order to provide more realistic replicates for generating datasets to test lc_ms correspondence algorithms 
