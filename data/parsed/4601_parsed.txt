data_and the gnat library for local and remote gene mention normalization identifying mentions of named_entities such as genes or diseases and normalizing them to database_identifiers have become an important step in many text and data_mining pipelines despite this need very few entity normalization systems are publicly_available as source_code or web_services for biomedical_text here we present the gnat java_library for text retrieval named_entity and normalization of gene and protein mentions in biomedical_text the library can be used as a component to be integrated with other text_mining systems as a framework to add user specific extensions and as an efficient stand alone application for the identification of gene and protein_names for data analysis on the biocreative iii test data the current version of gnat achieves a tap score of availability the library and web_services are implemented_in and the sources are available from http the extremely rapid_growth of published_literature in the biological_sciences necessitates the constant improvement of automated textmining tools to extract relevant_information and convert it into structured formats terms for the same entities used in biomedical articles can vary_widely between authors and across time thus two key tasks in biomedical_text analysis are named_entity ner finding names of genes cell_lines drugs etc and entity mention normalization emn mapping a recognized entity to a repository such as entrez_gene or pubchem both tasks enable indexing retrieval and integration of literature with other resources gene and protein_names in particular represent central entities that are discussed in biomedical texts while a growing number of tools for gene ner are freely_available e g only a limited number of tools provide gene normalization capabilities that can be used off_the by end_users e g to whom correspondence should be addressed in this article we present a new version of the gnat system for gene mention recognition and normalization and make it available as an open_source java_library and as a remote web_service gnat now relies on a modular_architecture allowing integration of new components by implementing relatively simple http interfaces and allows its components to be distributed on servers local or remote public or private the framework allows end_users to send pubmed or pubmed central document identifiers as well as free_text to our server returning lists of gene mentions with entrez_gene ids text_mining application developers can make use of the same service by using gnat as a component in their own processing pipelines or by customizing gnat toward their requirements here we present the major components in gnat demonstrate how they interact and how they can be exchanged and extended by developers we present an overview of the web_services provided which can be used remotely from our server or set up by users at their local sites finally we discuss the performance of gene mention normalization provided by gnat large_scale community challenges to assess the status and compare methods for gene mention normalization have been ongoing since see the overview of biocreative i task b in gnat has been evaluated on three biocreative datasets biocreative i is composed of abstracts from papers on mouse fruit_fly and yeast genes biocreative ii is composed of abstracts from papers on only human genes and biocreative iii is composed of full_text with no restriction on species for human genes only an earlier version of gnat was ranked first among the participants in biocreative ii achieving a precision and recall of and respectively on a test_set of abstracts subsequent modifications to gnat improved precision to and with recall at on a dataset derived from biocreative i ii covering genes from species in abstracts the provided default processing pipelines achieves precision at recall for biocreative iii performance was evaluated using the tap k metric which is based on a ranked_list of predictions the manually_annotated full_text chosen for maximal variability among submissions served as the gold_standard for biocreative iii on which gnat achieves a tap score of with the highest ranking_method yielding only due to the difference in the scoring metrics results are not easy to compare directly between biocreative challenges our own experiments show precision and recall values for the current system of and respectively on the manually_curated training data see one drawback of the current default processing pipeline of gnat relative with the biocreative iii test_set comes from limiting our predictions to genes from model_organisms the manually_curated gold_standard for full text documents includes an unusual composition of species compared with the training_set for example of all genes in the gold_standard belong to enterobacter_sp this species and three more that contribute an additional to the gold_standard genes are not currently supported by the default dictionary based ner in gnat but user specific dictionaries could be added quickly when new species are anticipated a procedure for which we provide detailed instructions in the documentation future extensions of the banner library within gnat to map any recognized gene name to species and candidate ids should also help to make up for the low recall introduced by the current species limitation in species supported the current version of gnat implements a clientserver architecture where individual modules can be set up to run within the client or as servers typically a module would run as a server if it performs a memory intensive processing step requires a certain time for startup or is a finalized component modules run as client are those which are suited to individual users needs or those undergoing development using the default pipeline it takes an average of s to annotate a pubmed abstract however this number clearly depends on the underlying hardware and usage of remote services and can thus serve only as a rough estimate given the modular_architecture gnats modules can be easily tailored or replaced for example gnat currently relies on linnaeus for species ner and provides an interface to banner for gene ner demonstrating the ability to easily incorporate external tools especially if they provide a java api 
