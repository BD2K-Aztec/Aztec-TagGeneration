rhat fast alignment of noisy long_reads with regional hashing motivation single_molecule real_time smrt_sequencing has been widely_applied in cutting_edge genomic studies however it is still an expensive task to align the noisy long smrt_reads to reference_genome by state of the art aligners which is becoming a bottleneck in applications with smrt_sequencing novel approach is on demand for improving the efficiency and effectiveness of smrt read_alignment results we propose regional hashing based alignment_tool rhat a seed and extension based read_alignment approach specifically_designed for noisy long_reads rhat indexes reference_genome by regional hash_table rht a hash_table based index which describes the short tokens within local windows of reference_genome in the seeding phase rhat utilizes rht for efficiently calculating the occurrences of short token matches between partial read and local genomic windows to find highly possible candidate sites in the extension phase a sparse dynamic_programming based heuristic approach is used for reducing the cost of aligning read to the candidate sites by benchmarking on the real_and from various prokaryote and eukaryote genomes we demonstrated that rhat can effectively align smrt_reads with outstanding throughput availability_and rhat is implemented in c the source_code is available at https github com hit bioinformatics rhat single_molecule real_time smrt_sequencing has been widely_applied since its emergence in with the superior read_length and less systematic_bias respect to next_generation ngs smrt_sequencing performed well in various cutting_edge genomics studies however its higher sequencing_error affects various critical steps of smrt data analysis one of them is read_alignment read_alignment is to recover the likely genomic origins of reads by aligning them against reference_genome as one of the most fundamental and computing intensive steps in genome re sequencing studies efficient read_alignment is on widely demand however due to the higher_error the speed of smrt read_alignment is not as fast as that of ngs_reads which has become a bottleneck of smrt data application many efforts have been made to read_alignment however most of them are designed for ngs_reads which are less adaptive to noisy smrt_reads previous_studies also indicated that long sequence_alignment approaches can sensitively align smrt_reads but at the expense of efficiency three state of the art smrt read_aligners are bwa_sw blasr and bwa mem with no exception on the basis of seedand extension mainly they match partial reads seeds to reference_genome at first and extend the matches hits to compose full alignments the major difference is in the way of seeding bwa_sw aligns substrings of read to reference_genome by suffix trie traversing to find approximate matches with few positions as hits blasr and bwa mem use exact_matches of short tokens between read and reference_genome blasr formulated a probability model to depict the relationship between the error_rate and the number of seeds this model finds all the short token matches longer than a pre defined threshold as hits bwa mem finds all the maximal_exact mems as hits and also refers to the model of blasr to tune its parameters for smrt_reads efforts have also been made to improve the efficiency of extension i e bwa_sw and bwa mem utilized banded smith_waterman algorithm and blasr used a sparse dynamic_programming sdp based heuristic one of the major bottlenecks of the state of the art aligners is the efficiency of seeding to be robust to the high_error all the three aligners densely employed the substrings starting from all the offsets of the read as seeds however for blasr and bwa mem due to the repetitiveness of genomes there could be a great amount of hits generated by the dense short seeds along the whole read which is expensive to merge and prioritize for bwa_sw the cost could be also huge to align many substrings of the noisy long_read to reference_genome moreover as all the three aligners used burrows_wheeler transformation bwt for indexing reference_genome there is additional_cost to perform lf mapping to locate the precise genomic positions of the hits thus for bwa mem and blasr the overhead of retrieving all the hits of short seeds is also nonneglectable herein we propose an efficient noisy long read_alignment approach regional hashing based alignment_tool rhat for smrt read_alignment rhat aligns smrt_reads with specifically_designed seed and extension strategy in the seeding phase rhat selects a substring of the read as seeding region and partitions reference_genome into a series of windows to find the windows having most k_mer matches with the seeding region as candidate sites for extension this operation is implemented with small overhead through a hash_table based index regional hash_table rht in the extension phase a sdp based heuristic is designed for efficiently aligning the read to the candidate sites there are aligners based on q gram filter which also utilizes the occurrences of short tokens matches within local genomic_regions for seeding however despite of various implementations they were mainly designed for shorter reads from several tens to hundreds of bp with lower error_rates around several percent i e the ngs_reads this design may be not practical to smrt read_alignment for rhat the characteristics of smrt_reads are fully considered in the design of genome indexing and read_alignment modules for improving the performance we benchmarked rhat on real and simulated smrt datasets from various prokaryote and eukaryote genomes the experimental_results demonstrated that rhat can effectively align smrt_reads with a considerable improvement on throughput moreover it has superior_ability in terms of end_to alignment which can produce consecutive alignments for most of the reads seven real and simulated smrt datasets from various genomes supplementary were used for benchmarking rhat and three state of the art aligners blasr version bwa mem version and bwa_sw version rhat were run with a variety of configurations on the parameters blasr was run in its default setting with two kinds of indices i e bwt and suffix_array sa respectively bwa_sw was run with parameters b q r z referring to previous study and bwa mem was run with the smrt optimized_parameters x pacbio more details of the implementation of the benchmarking are in supplementary protocol we propose rhat a novel seed and extension based_approach for noisy long read_alignment mainly there are three key features of rhat i rhat utilizes the occurrences of k_mer matches between a substring of the read and the reference_genome for seeding which directly reduces the short tokens that need to be handled without loss of effectiveness ii with the help of rht the seeding can be efficiently implemented by multi way merging furthermore it also has a small overhead for retrieving k_mer matches iii the sdpbased heuristic approach also reduces the cost of aligning the noisy long_read to local genomic_sites moreover this heuristic approach also helps in preventing ill defined alignment by the constraint on the distance between local matches rhat was benchmarked on real_and from various genomes the experimental_results demonstrated that rhat can be robust to the high_error and provide effective alignments for smrt_reads comparing to other state of the art aligners there are two other major_contributions made by rhat first rhat has an outstanding throughput which could be beneficial for breaking the bottleneck of the application on smrt data second rhat can more consecutively align smrt_reads which could also facilitate downstream_analysis a major_drawback of rhat is that the sdp based heuristic could be affected by the false_positive local matches this issue could make rhat misalign a proportion of bases and map the read to an incorrect position nearby the correct one in downstream_analysis two methods could be useful for reducing this affection one is to directly clip the alignments which have large indels within their beginning parts the other one is to correct the potential_errors by local re alignment which is based on the multiple_sequence msa of the reads aligned to the same local genomic_region considering its sensitivity correctness consecutiveness and throughput rhat is overall an effective and efficient tool for smrt read_alignment with the explosive increase of sequencing_data the improvement made by rhat is profitable to various applications of smrt_sequencing it could be a good choice to incorporate rhat into the developing computational_biology pipelines to leverage cutting_edge genomic studies future works will focus on two aspects firstly the sequencing quality_scores are still not taken into account in the future we will develop novel method to incorporate the quality_scores into extension phase for further improving the quality of alignment for example the quality_scores may be useful for more effectively recognizing false_positive local matches which is beneficial for mitigating their affection on the building of skeleton secondly the memory_footprint of rhat is relatively high and the k_mer size is also limited by the data_structures of rht considering larger k_mer size could be also helpful for aligning noisy long_reads we will also focus on developing novel succinct data_structures which can support larger k_mer size for seeding and further reduce the memory_footprint 
