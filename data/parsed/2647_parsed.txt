sequence_analysis kmacs the k mismatch average common substring approach to alignment_free motivation alignment_based for sequence_analysis have various limitations if large_datasets are to be analysed therefore alignment_free approaches have become popular in recent_years one of the best known alignment_free is the average common substring approach that defines a distance measure on sequences based on the average length of longest common words between them herein we generalize this approach by considering longest common substrings with k mismatches we present a greedy heuristic to approximate the length of such k mismatch substrings and we describe kmacs an efficient implementation of this idea based on generalized enhanced_suffix results to evaluate the performance of our approach we applied it to phylogeny reconstruction using a large number of dna and protein sequence_sets in most cases phylogenetic_trees calculated with kmacs were more accurate than trees produced with established alignment_free that are based on exact word_matches especially on protein_sequences our method seems to be superior on simulated protein_families kmacs even outper formed a classical_approach to phylogeny reconstruction using multiple_alignment and maximum_likelihood availability_and kmacs is implemented in c and the source_code is freely_available atcomparative sequence_analysis traditionally relies on pairwise or multiple_sequence with the huge datasets that are produced by next_generation however todays alignment_algorithms reach their limits thus with the growing number of completely or partially sequenced_genomes there is an urgent demand for faster sequence comparison methods over the past_two a wide_variety of alignment_free approaches were proposed although aligning two sequences takes time proportional to the product of their lengths most alignment_free run in linear time they are therefore increasingly used for genome based phylogeny reconstruction and for large_scale protein_sequence comparison it is known however that alignment_free are generally less accurate than alignment based_approaches most alignment_free calculate the relative_frequencies of words of a fixed_length k also called k_mers in the input_sequences other methods are based on variable_length matches they have the advantage that it is not necessary to specify a fixed word length these programs achieve usually better results than approaches relying on a fixed word length however algorithms using variable word lengths are typically more complex and require more sophisticated data_structures than methods relying on fixed word lengths a well known approach that uses word_matches of variable_length is the average common substring acs method which calculates for each position i in one sequence the length of the longest substring starting at i and matching some substring of a second sequence as a further development of this idea the shortest unique substring shustring approach has been proposed by these authors also derived an estimator for the number of substitutions per site between two unaligned sequences based on the average shustring length they implemented this approach in the program k r acs and shustrings can be calculated efficiently using suffix_trees as the aforementioned methods most approaches for alignment_free phylogeny reconstruction are based on exact word_matches recently we suggested to use spaced k_mers defined by pre defined patterns of match and dont care symbols instead of contiguous k_mers the aim of this study is to apply the idea of inexact matches to word_matches of varying lengths we generalize the acs approach by considering for each position i in one sequence the longest substring starting at i and matching some substring in the second sequence with k mismatches we propose an efficient heuristic to approximate the lengths of these substrings and we describe kmacs an implementation of this approach based on generalized enhanced_suffix a web_server for our program is described into whom correspondence should be addressed the author published_by all_rights this is an open_access the terms of the creative commons attribution license http creativecommons org licenses by which_permits distribution and reproduction in any medium provided the original_work most alignment_free approaches to sequence_analysis are based on exact word_matches in this article we presented a novel alignment_free algorithm that takes mismatches into account this is similar in spirit to the spaced words approach that we previously_proposed but while spaced words uses word_pairs of a fixed_length with possible mismatches at pre defined positions kmacs considers maximal substring matches with k mismatches at arbitrary positions in the spaced words approach the number of match positions in the underlying patterns is a critical parameter for the performance of the method in contrast in kmacs there seems to be a fairly_large range of values for k that lead to high_quality results as shown by our test results kmacs seems therefore less sensitive to user_defined parameters the implementation of our approach using generalized enhanced_suffix enables us to analyse large sequence_sets efficiently still the program k r is roughly one order of magnitude faster than kmacs one reason for this is that k r uses one single generalized suffix_tree representing all input_sequences which can be calculated in time proportional to the number of sequences domazet lo so and in contrast kmacs calculates one generalized enhanced suffix_array for each pair of sequences so its run time is quadratic in the number of sequences on the other hand calculating suffix_arrays for two sequences at a time is less memory consuming as one does not need to keep the suffix_array for all input_sequences simultaneously in main_memory thus our approach can be applied to larger datasets than k r the two approaches that we developed kmacs and spaced words are slower than the corresponding approaches based on exact_matches acs and the generic k_mer approach our new approaches however produce significantly better results than those established methods our test results suggest that spaced words performs slightly better than kmacs on genomic_sequences whereas on protein_sequences kmacs is superior in our program_evaluation we used dna sequence_sets with large evolutionary_distances on these sequences our new alignment_free performed better than established methods that rely on exact word_matches algorithms using exact_matches on the other hand seem to work better on smaller evolutionary_distances k r for example performs best on evolutionary_distances of up to substitutions per site similarly we observed that on closely_related dna_sequences kmacs produces sometimes best results with k i e without mismatches unpublished results it seems therefore best to apply kmacs to distantly_related sequence_sets while methods such as k r and acs may be preferred on evolutionarily more closely_related sequences in biological_sequences substitutions are more frequent than insertions_and consequently exact_matches between local homologies can usually be extended until the first substitution is reached the average length of longest common substrings and of shortest unique substrings respectively can therefore be used to estimate substitution_probabilities this is similar for kmacs as long as k is small enough in this case all k mismatches are likely to be used up in a k mismatch common substring extension before the first indel occurs thus the average length of the longest k mismatch common substrings depends on the frequency of mismatches and could be used to estimate substitution_probabilities just as in k r in contrast if k is sufficiently_large substring matches between local homologies are essentially extended until the first indel occurs from this point on the mismatch frequency is high and the remaining mismatches will be used up quickly so in this situation the average k mismatch substring length depends on the frequency of indels rather than on the frequency of substitutions this may explain why acs and k r work well on closely_related sequences while kmacs is superior on distantly_related sequences where the frequency of indels may be a better measure for evolutionary_distances than the frequency of mismatches in our study we used alignment_free to reconstruct phylogenetic_trees and evaluated the quality of these trees but phylogeny reconstruction is only one important application of sequence comparison clustering classification and remotehomology detection are other fundamental challenges in dna and protein sequence_analysis with the rapidly_growing size of sequence_databases alignment_free have become indispensable for these tasks given the speed of average common k mismatch substring lengths depending on the substitution frequency in simulated dna_sequences estimated with our greedy heuristic lower curve and calculated with an exact algorithm upper curve for various values of k average number z of maximal_exact starting at a position i in one sequence to a substring in a second sequence we used simulated dna_sequences with different lengths and substitution frequencies 
