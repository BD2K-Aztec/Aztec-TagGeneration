data_and noisemaker simulated screens for statistical assessment high_throughput hts is a common technique for both drug_discovery and basic_research but researchers often struggle with how best to derive hits from hts_data while a wide_range of hit identification techniques exist little information is available about their sensitivity_and especially in comparison to each other to address this we have developed the open_source noisemaker software_tool for generation of realistically noisy virtual screens by applying potential hit identification methods to noisemaker simulated_data and determining how many of the pre defined true hits are recovered as well as how many known non hits are misidentified as hits one can draw_conclusions about the likely performance of these techniques on real_data containing unknown true hits such simulations apply to a range of screens such as those using small_molecules sirnas shrnas mirna mimics or inhibitors or gene over expression we demonstrate this utility by using it to explain apparently conflicting_reports about the performance of the b score hit identification method availability_and noisemaker is written in c an ecma and iso standard language with compilers for multiple operating_systems source_code a windows installer and complete unit tests are available at http sourceforge net_projects noisemaker full documentation and support are provided via an extensive help file and tool tips and the developers welcome user suggestions data analysis and hit identification are points of confusion for many screeners those asking questions such as which method identifies the most true hits for my particular screen circumstances or what will the false_positive of my chosen method be are frequently stymied since answering these requires them to know the identity of the real hits however developing a list of the anticipated real_biological hits for any given assay is extremely_challenging and is likely to be both noisy and incomplete especially for medium to weak strength effects the difficulty in assessing the performance of hit identification methods can be avoided by moving to in silico based strategies in the computational environment one can generate a virtual screen containing defined true hits at known locations and then perturb these true_values with varying_degrees and types of noise both to whom correspondence should be addressed systematically biased and random to simulate the variation inherent in biological screens statistical_techniques can then be evaluated based on their ability to identify known true_positives and true_negatives these evaluations will be valid to the extent that the in silico hit distributions and types of noise are congruent with those of the real system this approach offers both speed and flexibility providing the opportunity to profile a methods performance in many different realistic screening scenarios as well as the ability to simulate whole screens within minutes to enable such in silico testing we have developed the noisemaker tool for generating simulated high_throughput datasets a noisemaker user selects a realistic scenario for his or her simulated screen including a range of hit properties as well as noise_characteristics derived from previous screens or assay development work supplementary appendix the software then randomly assigns true hits conforming to this scenario and generates noisy replicates of the screen the user applies potential analysis approaches to this noisy_data using the known true hits to calculate metrics of interest such as sensitivity specificity or positive_predictive and selects the most effective method noisemaker is simulation software for creating realistic virtual high_throughput that can be used to evaluate hit identification methods and quality_criteria we establish its power by using it to clarify the utility of the b score under various screening conditions this tool will be useful for broader comparisons of available hit identification methods and is freely_available for download and use by others interested in modeling screens in silico 
