sequence_analysis samscope an opengl based real_time interactive scale_free sam viewer existing sam visualization_tools like samtools tview li et_al are limited to a small region of the genome and tools like tablet milne et_al are limited to a relatively small number of reads and may fail outright on large_datasets we need to visualize complex chip_seq features such as polarity as well as coverage across whole gbp genomes such as human we have addressed these problems in a lightweight visualization system called samscope accelerated by opengl the extensive pre_processing and fast opengl interface of samscope provides instantaneous and intuitive browsing of complex data at all levels of detail across multiple experiments availability_and the samscope software implemented in c for linux with source_code binary packages and documentation are freely_available fromnext generation sequencing ngs workflows often involve mapping reads onto reference_genomes using tools such as shrimp bowtie and others mapping determines the likely point of origin or origins of a given read despite the multitude of different mapping methods and software the sam sequence_alignment format and the associated binary encoding bam have emerged as the lingua franca of ngs mapping file_formats for many projects using sam data it is desirable to visually inspect the results of mapping for quality_control and exploration however because a single ngs run can provide millions of reads from billions of bases of genome_sequence simply opening up a sam file and making sense of the content is a non trivial problem the two main problems in visualization of a sam dataset are sam_files are structured in terms of reads to calculate coverage of a given base we have to look at each read and see which bases it maps to then count how many times that base has been mapped as visualization is a common need a variety of tools have been introduced to view sam data in different ways for example samtools tview provides an interactive textbased viewer which shows each base of each read and reference_genome as a character in a text terminal this can be useful for inspecting narrow regions bases with fewer reads than terminal rows but not helpful for examining larger regions or deeper coverage tablet and its close cousin igb both provide java_based graphical interfaces for drawing reads against a reference_sequence where each base is represented as a colored rectangle both can summarize overall coverage with a secondary visualization track however both tablet and igb draw each read similar to samtools tview limiting their speed and effectiveness when a large number of reads would be in view integrative_genomics igv can load sam bam_files providing detailed inspection capabilities and provides a mean coverage track given proper pre_processing which can scale to arbitrary genome_sizes for applications like chip_seq or rna_seq however mean coverage is not necessarily helpful and hard to use at large scales as most coverage values are at zero or near zero we needed a flexible method to visualize and interactively inspect various features from large_numbers of reads across mammalianscale genomes while addressing the problems above so we developed our own approach in samscope d computer graphics addresses a similar problem when drawing textures on distant d objects how to efficiently generate a reasonable approximation of millions of points of color data into one screen pixel a solution known as mip mapping has become a mainstay of modern d rendering in it a series of filtered copies of each texture are pre_calculated at exponentially decreasing resolutions thus when a distant object is rendered rather than sampling millions of points to calculate the combined contribution to one screen pixel an approximation is achieved with just a few samples from a lower_resolution copy we apply the mip map concept to genome visualization in samscope 
