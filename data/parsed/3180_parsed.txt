mutadelic mutation analysis using description logic inferencing capabilities motivation as next_generation gains a foothold in clinical_genetics there is a need for annotation tools to characterize increasing amounts of patient variant data for identifying clinically_relevant mutations while existing informatics tools provide efficient bulk variant annotations they often generate excess information that may limit their scalability results we propose an alternative_solution based on description logic inferencing to generate workflows that produce only those annotations that will contribute to the interpretation of each variant workflows are dynamically generated using a novel abductive reasoning framework called a basic framework for abductive workflow generation abfab criteria for identifying disease_causing in mendelian blood disorders were identified and implemented as abfab services a web_application was built allowing users to run workflows generated from the criteria to analyze genomic_variants significant variants are flagged and explanations provided for why they match or fail to match the criteria availability_and the mutadelic web_application is available for use at http distinguishing harmful from benign variants in clinical exome or whole_genome is comprised of two steps variant annotation and interpretation annotation involves the labeling of variants with diverse features including population frequencies and effect on amino_acid which then guide interpretation for finding variants with damaging_effect on protein_function what we call variant_prioritization there are several annotation systems that assist medical geneticists in the prioritization of a patients variants some of the existing_systems including annovar and vax can accommodate custom annotations for guiding a geneticists decision_process as most annotations can be precomputed and efficiently retrieved these systems can rapidly annotate most or all variants in a human_genome while these existing_systems are an invaluable tool for medical geneticists they do have some shortcomings first they do not address the need to accommodate several variant filters based on disease and often expert dependent interpretation rules second as some annotations cannot be easily pre_computed like complex indels or substrate binding_properties the computational_cost of generating annotation for all observed variants is high third as the number of annotations increases storing the complete set of annotations for all variants is progressively costly fourth as data resources are changing over time there is a need to recompute the entire set of variants for retrieving the most current annotations fifth there is little emphasis on using standards or provenance when generating variant annotations what we propose in this article is a fresh look at how we perform variant_prioritization rather than annotating all observedvariants with subsequent interpretation we propose to merge the two steps into a single process that reduces the necessary annotations to the minimum number necessary to do so we borrow from prior work in semantic workflows and related_fields such as hierarchical task network planning in essence we allow geneticist to formulate an objective identify variants with a particular annotation combination which is sufficient to generate an efficient plan for a series of annotation steps a workflow to which each variant is subjected if at any point in the workflow it is determined that the objective cannot be reached the variant under consideration is dropped from further consideration using smart workflow planning computationally cheap annotation steps are front loaded for example if the objective states that the geneticist is interested in variants with a specific population frequency only a simple database lookup many variants with higher frequency can be discarded at an early_stage and do not need further annotations if a workflow completes successfully only the absolute necessary annotations were computed to reach the objective using elements from semantic workflow research we treat each annotation step as a separate service with semantically defined input and output criteria the use of a service oriented architecture has distinct advantages among them a straightforward procedure for determining whether a variant needs re computing for example only variants that have been subjected to a particular annotation service need re processing if the service is updated finally the use of a coherent semantic framework expressed in rdf owl is not only helpful in workflow planning but also for defining diverse sets of annotation objectives for generating a provenance trail and to link annotated variants to other resources using constrained data elements the most notable disorders of red cell_membranes in humans are hereditary_spherocytosis hs hereditary elliptocytosis he and hereditary pyropoikilocytosis hpp they are inherited_disorders marked by genetic_heterogeneity that are linked to hemolytic_anemia hs is characterized by erythrocytes that are spherical in shape rather than the expected olive shaped conformation hs is a fairly_common disorder especially among northern european_populations where it occurs in individuals it most frequently manifests itself in the form of mild_to anemia although severe_anemia can occur in some cases hs is characterized by mutations in the following genes ank ankyrin erythrocytic slc a solute_carrier anion_exchanger member erythrocyte membrane_protein band diego blood_group sptb spectrin beta erythrocytic spta spectrin alpha erythrocytic elliptocytosis and epb erythrocyte membrane_protein band of these five mutations in ank are most frequent followed by slc a and sptb he results in elongated cigar shaped erythrocytes it is most frequently asymptomatic but will occasionally lead to mild or even severe_anemia it is also fairly_common with higher incidence in african_populations estimated as high as hpp is related to he but is much more severe it is characterized by large_numbers of fragmented and misshapen erythrocytes and results in severe hemolytic_anemia mutations in spta sptb and epb are associated with he and hpp with spt being the most frequent most documented mutations modify the self association regions of spectrin proteins which causes damage to cell membrane_structure this work discusses clinical variant_prioritization using dl reasoning and bears similarities to existing ideas from the fields of semantic workflow generation and related_fields such as hierarchical task network planning the key_elements of our approach in short are the ability to express a goal or objective and a system that decides whether an observed individual variant complies with the objective to do so we need in a staging phase means to automatically chain together existing variant annotation services using semantic descriptions of these services there is extensive prior work in this area with several formalisms for web_service description available such as swasdl there exists integrated_systems that perform workflow generation based on such descriptions including the wings system or taverna these existing formalisms and systems are generic and can be applied to diverse domains and research_areas unlike wings which supports automated workflow generation but delegates service execution to external systems such as pegasus our system integrates workflow planning and execution in one formalism while tavernas emphasis is less on automated workflow generation it integrates workflow planning and execution in one platform both systems do not provide the second requirement of our system which uses instance checking to determine_whether the output of a workflow once executed corresponds to some stated objective there is some prior work that uses hierarchical task network htn planning on top of semantic web_service descriptions to achieve a similar goal however the described work is based on an existing task planning system called shop which is not easily applicable to the rdf owl formalism used in our project in the bioinformatics domain our approach is similar to the semantic automated discovery and integration sadi framework sadi describes web_services for processing biomedical data in owl as inabfab owl classes with restrictions on input and output are used to model services the semantic health and research environment share sparql query client also functions by connecting services to form a path of execution mutadelic abfab and sadi share differ however in terms of their focus and their means of implementing service paths the focus of the share is on answering queries where data is spread out across multiple_locations abfab focuses instead on generation of workflows to process data where services are defined locally share matches services based upon whether execution of them adds the predicate requested by the query to the kb abfab uses consistency checking to determine fulfillment of input and output constraints this approach allows for more flexible matching and it does not require the user to know the specifics of what triples services add to the kb the share method requires that a step be executed before the next step may be determined abfab generates the full path before execution potentially saving considerable expense if a path to the goal criteria cannot be reached abfab also offers the additional features of a cost based determination of optimal path and structures branches and conditions to support complex paths the ability to change execution flow based upon runtime output allows abfab to support use cases beyond workflow generation including decision_trees and the sort of query answering targeted by sadi share due to their similar structure it would be relatively straightforward to create abfab services that act as wrappers for sadi services the criteria used to highlight mutations of interest in mutadelic represents a single expert view on mutation prioritization within a particular context in this case mendelian blood disorders different criteria could be applied to the same context or criteria could be established for different contexts e g a different disease or family of diseases it is easy to imagine a scenario in which multiple_criteria co exist in such a scenario researchers could compare different methodologies for the same context or analyze patient data from multiple contexts to do so we hope in the near future to provide a ui framework to allow users to define their own criteria to identify significant variations this would facilitate comparison of approaches to variant_prioritization the challenge would be creating a user_friendly interface with the owl representation of the logical constraints this would be achieved using the current set of defined services allowing for i modification of the faceted restrictions e g changing significant sift value from to and ii different combinations of conjunction disjunction and negation and or and not another optimization would be a framework either a ui tool or an api for definition of new service classes again there is the challenge of hiding the complexity of owl representation from the user developer this article_describes a new variant annotation paradigm that is based on the idea of generating the minimum necessary annotations for reaching a diagnostically relevant conclusion it is a departure from existing solutions which seek to annotate all observed variants it is also to our knowledge the first attempt to use semantic workflows and abductive reasoning for this purpose we believe that our solution will contribute to a more scalable informatics infrastructure that is appropriate for next generation sequencingbased clinical_genetics 
