gene_expression libfbi a c implementation for fast box intersection and application to sparse mass_spectrometry data motivation algorithms for sparse_data require fast search and subset selection capabilities for the determination of point neighborhoods a natural data representation for such cases are space partitioning data_structures however the associated range queries assume noise_free observations and cannot take into account observation specific uncertainty estimates that are present in e g modern mass_spectrometry data in order to accommodate the inhomogeneous noise_characteristics of sparse real_world datasets point queries need to be reformulated in terms of box intersection queries where box sizes correspond to uncertainty regions for each observation results this contribution introduces libfbi a standard c header only template implementation for fast box intersection in an arbitrary number of dimensions with arbitrary data types in each dimension the implementation is applied to a data aggregation task on state of the art liquid_chromatography data where it shows excellent run time properties availability the library is available under an mit_license and can be downloaded from http software steenlab org modern high_resolution liquid_chromatography lc_ms datasets are a prominent example of data stored in a sparse_representation instead of storing vectors holding all sampled measurement values dataset sizes are minimized by dropping zero measurements thus abolishing underlying fixed sampling grids and their implicit neighborhood relations this choice of representation has fundamental consequences for data_processing algorithms for lc_ms aggregation of raw measurements into i high_mass centroid data ii combination of centroids into extracted ion_current xic measurements and iii determining xic patterns that correspond to isotopic envelopes of analytes of interest are standard preprocessing_steps to whom correspondence should be addressed the authors wish it to be known that in their opinion the first two authors should be regarded_as each of these steps requires fast neighborhood evaluation for hundreds of thousands of single measurements a straightforward approach to this problem is the use of space partitioning data_structures such as bsp trees octrees r trees or kd trees and to evaluate neighborhood relations on the fly using datadependent range queries however real_world measurements are often subject to varying magnitudes of noise consequently aggregation methods will deliver varying uncertainty estimates for e g calculated centroids and or xics this context gives rise to a major conceptual reservation against simple range query approaches although a range query is a natural representation for the detection of measurements that fall into the uncertainty bound of the point from which the query is issued it cannot take into account the uncertainty of the points that should be returned by the query consequently the range query assumes that the queried observations are noise_free and is bound to miss observations where points fall outside the query range but query and target uncertainty ranges overlap the key to overcoming this limitation is to reformulate the classical range query in terms of a potentially multi_dimensional box intersection problem with point specific box sizes observations and range queries both define a set of axis parallel boxes and the goal is to determine all box intersections between the sets this contribution introduces an implementation of a fast box intersection procedure termed libfbi and illustrates its application to state of the art ms data data lc_ms raw_data were acquired from a hela cell_lysate on an ltq_orbitrap thermo centroids were extracted using an inhouse program and fed into the libfbi example application see_supplementary for details adjacency list construction for extracted ion_current xic determination xic construction determines groups of centroid measurements that belong to the same isotope peak algorithmically this amounts to determining the connected components among the centroids where two centroids c i and c j are connected if the range query for c i intersects the uncertainty region of c j we use libfbi to generate the adjacency list that serves as an input to the connected components algorithm for illustration purposes we ran libfbi with four different setups combining two dimension ordering choices m z first versus retention time scan number first with two cutoffs low andshows the run times for different thresholds and different dimension orderings on datasets of increasing size libfbi is applicable in practical settings with average run times for points below s libfbi is well suited for adjacency list determination in ms data analysis settings and beyond see_supplementary for detailed benchmark results parameter selection in libfbi box dimensions are processed sequentially the m z dimension is much more discriminative yields a smaller set of potential overlaps and hence leaves a smaller computational_burden for the determination of retention time interval intersections hence for high the libfbi setup with m z in the first dimension runs faster crosses and squares and the plot reveals the quadratic complexity of the underlying scanning procedure when selectivity in the first dimension is low as a consequence for large an adequate dimension ordering is mandatory conversely choosing low circles and triangles eliminates the tremendous influence of dimension ordering if optimization of is infeasible e g due to significant variance in the data low cutoffs enhance run time stability this is the recommended modus_operandi libfbi is a library for the computation of box intersections in an arbitrary number of dimensions application scenarios include lc_ms feature_extraction feature correspondence estimation bounding volume determination and collision detection in geometric and image_processing problems and more libfbi is available from http software steenlab org libfbi 
