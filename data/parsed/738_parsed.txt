sequence_analysis bioblend objects metacomputing with galaxy bioblend objects is a new component of the bioblend package adding an object oriented interface for the galaxy rest based application_programming it improves support for metacomputing on galaxy entities by providing higher_level function ality and allowing users to more easily create programs to explore query and create galaxy datasets and workflows availability_and bioblend objects is available online at https github com afgane bioblend the new object oriented api is implemented by the galaxy objects subpackage contact in recent times the massive increase in the amount of data produced by genomic sequencers and other data intensive acquisition devices used in the life_sciences has led to a continuous intensification of the effort required for biological data analysis huge and numerous datasets must be processed by complex analysis workflows articulated in a large number of steps most of which are highly dependent on many configuration parameters data_processing frameworks can help mitigate the complexity by simplifying the pipeline execution an example of such a framework is galaxy an extremely popular web_application for bioinformatics_analysis it provides a simple way to encapsulate computational_tools and datasets in a graphical_user gui together with a mechanism to keep track of the execution history in a reproducible manner however convenient and user_friendly though guis are illsuited to automated analysis and bulk processing for instance consider a situation that happens regularly with each release of a new reference_genome for resequencing or with the update of sequence_alignment software to ensure that analysis results stay relevant such events require that the full set of experimental_results e g single_nucleotide discovery be reevaluated from scratch using the new model data or software this laborious task requires better support from the computational framework being used in the form of reliable ways to automate operations process datasets in bulk and document the analysis performed on any of them more generally studies tend to handle a growing numbers of samples they also tend to last longer than the relatively frequent update cycles for model data and software both these conditions pose requirements for such automated bulk data operations that are currently not handled well by guis to facilitate this sort of processing galaxy includes a restful application_programming api that allows other programs to control it automatically however this api is fairly low_level as it requires users to construct and issue http requests explicitly handle the standard_error cases that occur in such distributed scenarios and take care of data serialization and deserialization in exchanges between the client and the server this gap in functionality motivated the development of bioblend a python_package that hides http communication error handling and json de serialization from the user providing a dictionary based api that greatly_simplifies interaction with the galaxy server however despite its significant enhancements over the raw low_level interface bioblend still leaves room for improvement for instance most of the bioblend api still offers a one to one mapping of generic python dictionaries to the galaxy rest resources with no explicit modeling of galaxy entities and their relationships also the interface fails to isolate client code from changes in the galaxy api as it passes to the caller the same dictionary structures that the server sends finally bioblend does not provide much in the way of rich functionality to perform higher_level sophisticated yet generic tasks despite being positioned in a prime location in the software stack where it is potentially shared by all the users client applications in this work we present bioblend objects a galaxy interface implemented as a new layer above bioblend the new api addresses the aforementioned issues with two main features an object oriented oo programming model which simplifies development and isolates client code from changes in the galaxy api and a high_level component that simplifies complex operations and supports metacomputing on the information_describing the various galaxy entities with bioblend objects running a galaxy workflow requires just a few lines of simple code from bioblend galaxy objects import galaxyinstance gi galaxyinstance url api key wf gi workflows listhist gi histories listinputs hist get datasetsinput map dict zip wf input labels inputs params paste delimiter u wf run input map wf output params params the new api is described in more detail in section to whom correspondence should be addressed the author published_by this is an open_access the terms of the creative_commons http creativecommons org_licenses which permits non commercial re use distribution and reproduction in any medium provided the original_work for commercial re use please_contact permissions_oup combioblend objects is designed to model the relations between galaxy entities for instance a history object can be used to retrieve its datasets through an instance method this makes the api similar to an object relational mapping library for galaxy the bioblend objects module has received the support of the original bioblend team_members who are involved in its development as such it is expected to supplant in the future the original programming interface 
