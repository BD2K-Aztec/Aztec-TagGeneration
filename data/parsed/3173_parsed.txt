multi_threaded vectorized distance_matrix computation on the cell be and x sse architectures multiple_sequence is an important tool in bioinformatics although efficient heuristic_algorithms exist for this problem the exponential_growth of biological data demands an even higher throughput the recent_emergence of multi core technologies has made it possible to achieve a highly improved execution time for many bioinformatics applications in this article we introduce an implementation that accelerates the distance_matrix computation on x and cell broadband engine a homogeneous and heterogeneous multi core system respectively by taking_advantage of multiple processors as well as single instruction multiple data vectorization we were able to achieve speed ups of two orders_of compared to the publicly_available implementation utilized in clustalw availability_and source codes in c are publicly_available at https sourceforge net_projects distmatcomp multiple_sequence msa of many nucleotides_or is an important tool in bioinformatics it can identify patterns or motifs to characterize protein_families and is therefore utilized to detect homology between sequences as well as to perform phylogenetic_analysis many msa heuristics have been proposed to reduce the exponential complexity of computing optimal msas heuristic msa implementations include msa clustalw t coffee muscle and praline clustalw is considered to be one of the most popular msa tools it is based on the progressive alignment_method although not optimal this method can produce reasonably good alignments at a good efficiency however the exponential_growth of biological data demands an even higher throughput thus software approaches to improve the performance of clustalw have been introduced including caching and parallel processing recent usage of easily_accessible accelerator technologies to improve the clustalw algorithm include fpgas and gpus profiling of clustalw reveals that the distance_matrix computation is the most time consuming phase and takes typically of thepage a set of performance evaluation experiments have been conducted using six protein sequence_datasets consisting of sequences selected from the human_immunodeficiency hiv dataset downloaded from ncbi the experimental_datasets represent datasets of small number of long_sequences medium number of medium length sequences and large number of short_sequences respectively our cell be implementation is benchmarked on a standalone playstation ps with fedora core and the cell software_development kit sdk our sse implementation is benchmarked on an intel quad core i ghz cpu gb ram running linux fedora the sequential clustalw application available online at http www bii a star edu sg achievements applications clustalw was benchmarked on an intel quad core i ghz cpu gb ram running linux fedora shows the performance evaluation of our implementations using the above_mentioned datasets on different architectures the cell be implementation shows a better performance for datasets with fewer but longer_sequences while the sse implementation shows a better performance for datasets with more but shorter sequences this is due to the overhead for the ps which involved dma transfers of required data and sequences between the ppe and the spes since the first stage of several other msa tools e g t coffee and muscle is also based 
