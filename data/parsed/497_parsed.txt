sequence_analysis a sensitive and accurate protein domain classification_tool salt for short_reads motivation protein domain classification is an important step in functional_annotation for next_generation data for rna_seq of non model_organisms that lack quality or complete reference_genomes existing protein domain analysis_pipelines are applied to short_reads directly or to contigs that are generated using de_novo sequence_assembly tools however these strategies do not provide satisfactory_performance in classifying short_reads into their native domain families results we introduce salt a protein domain classification_tool based on profile_hidden and graph algorithms salt carefully incorporates the characteristics of reads that are sequenced from the domain regions and assembles them into contigs based on a supervised graph construction algorithm we applied salt to two rna_seq of different read_lengths and quantified its performance using the available protein domain annotations and the reference_genomes compared with existing strategies salt showed better sensitivity and accuracy in the third experiment we applied salt to a non model_organism the experimental_results demonstrated that it identified more transcribed protein_domain than other tested classifiers availability the source_code and supplementary data are available at https sourceforge net_projects salt inferring functions from sequences remains important in analyzing different types of sequencing_data including those generated by the next_generation ngs_technologies one basic step during the functional analysis is to assign sequences into different functional_categories such as families of protein_domains or domains for short which are independent folding and functional_units in a majority of annotated protein_sequences protein domain analysis has been widely used for functional_annotations of rna_seq in particular quantifying the expression levels of protein_domains helps us understand how transcriptional changes of domains are associated with sequencing conditions sampling tissues or experimental_treatments in rna_seq for example computational domain analysis was applied to identify domains that play a role in vernalization and efflux_transporters in the gibberellin response in sugar beets domain analysis is also frequently used to evaluate and compare gene annotation_quality of different gene_finding tools or to compare domain_composition of data sampled using different techniques the state of the art method for protein domain analysis is still based on comparative_sequence where query_sequences are annotated via comparison with characterized sequence_databases depending on the alignment_algorithms and the target databases domain analysis methods can be divided_into two groups the first one is to compare the sequences against publicly_available reference protein sequence_databases using pairwise_alignment tools such as blast the second method is a profile_based similarity_search which classifies queries into characterized protein domain or family databases such as pfam tigrfam figfams and so forth there also exist comprehensive protein domain search tools such as interproscan which combines different sequence and profile_based domain recognition methods from the interpro consortium member databases into one resource compared with the first method the profile_based method has two advantages first its running time mainly depends on the growth of the data to be analyzed because the number of families domains grows slowly and is much smaller than the sequence_databases such as ncbi nr second previous work has shown that using position specific conservation information can improve the sensitivity of a remote protein homology_search which is especially important for identifying new homologs in ngs_data one of the most widely used profile_based domain classification_tool is hmmer http hmmer janelia org which relies on profile_hidden profile_hmms to deliver sensitive domain classification for remote_homologs existing domain classification tools are mainly designed for complete or near complete domain member sequences rather than fragmentary and short_reads in ngs_data blast_based and profile_based domain classification tools rely on alignment scores to distinguish true homologous_sequences from false ones short_reads incur marginal alignment scores and thus can be easily missed by these tools in particular blast_based tools to whom correspondence should be addressed have low sensitivity for short_reads of remote_homologs although hmmer can achieve high_sensitivity in recognizing remote_homologs of a domain_family it shows low sensitivity in classifying partial sequences of remote_homologs when the reference_genomes are available genome_wide gene and domain annotations and read_mapping positions can be combined to determine the membership of reads however many ngs_datasets lack complete or quality reference_genomes such as complicated metagenomic_datasets and transcriptomic_data of some non model_organisms for these data protein domain analysis is applied to the short_reads directly or to the contigs that are generated by de_novo sequence_assembly tools contigs produced by de_novo sequence_assembly tools enable ngs_data analysis to take advantage of conventional bioinformatics_tools designed for longer_sequences however using sequence_assembly tools as the first step is not ideal for protein domain classification first the quality of read assembly deteriorates significantly in complicated ngs_datasets different sequence_assembly tools generate different sets of contigs there is no consensus on the best assembly tool second successful de_novo requires high sequencing_depth which is difficult to achieve for all domain regions it is often observed that some domain regions are highly transcribed whereas others are transcribed much less third different protein_coding can share the same domain as a result similar domain regions can contribute to the nodes forming crossing points between different paths in a de_bruijn those repeat like sequences add difficulty to de_novo sequence_assembly thus there is a need for an alternative and better domain classification_tool for ngs_data lacking reference_genomes in this work we designed a sensitive and accurate protein domain classification_tool salt which uses profile_hmms and family specific contig generation algorithms to classify short_reads into domains salt is mainly designed for domain classification in transcriptomic_data of non model_organisms that lack complete or high_quality reference_genomes and for metagenomic_datasets in this work we focus on rna_seq of nonmodel organisms to evaluate the performance of salt we applied salt to rna_seq of species with quality reference_genomes read_mapping and genome_wide domain annotations are combined as the ground_truth for evaluating the read classification sensitivity_and salt was benchmarked with several popular domain classification strategies the comparison shows that salt can correctly_classify significantly more reads into their native domains while keeping the same or better specificity finally we demonstrated the utility of salt on an rna_seq dataset of a non model_organism although we will use protein_domains when describing the methods and results salt can be applied to both domain families and protein_families in this work we used the families in pfam which include both domain families and protein_families to show the utility of salt we applied it to three rnaseq datasets and compared its performance with hmmer hhblits and a pipeline that uses de_novo sequence_assembly tools and hmmer for brevity of description we use assemblyhmmer to refer to the complete pipeline where assembly can be replaced by the name of a specific sequence_assembly tool this pipeline was used to classify query reads into input families based on the following steps i use de_novo sequence_assembly tools to generate contigs from query reads ii use hmmer to align translated contigs against input families and iii classify reads in the aligned regions of the contigs into the corresponding families the inputs to hmmer and hhblits are always the translated peptides from the reads or contigs for simplicity when we say we classify reads into protein_domain using hmmer or hhblits the translated peptides are actually used for the first two experiments annotated reference_genomes were available we first determined the true membership of query reads based on protein domain annotations and read_mapping positions in the genome we then classified query reads into input families using four different types of classifiers hmmer hhblits assemblyhmmer and salt performance of the classifiers was determined by comparing the true membership of reads and predicted membership by the classifiers we used four metrics to evaluate the performance of classifiers sensitivity false_positive fp rate positive predicted value ppv and f score let d represent an input family let a and b be the set of positive_and reads of d respectively let c be the set of reads classified to d by a classifier the sensitivity of a classifier is defined by jacj jaj the fp rate is defined by jcaj jbj the ppv is defined by jacj jcj the f score considers both sensitivity and ppv and can be used as a single metric to evaluate the performance of a classifier it is defined by f score sensitivity ppv sensitivity ppv to compare the performance of the classifiers on all input families we first calculate a metric for each input family and report the average of the values of the metric over all input families in the last experiment we conducted protein domain classification on an rna_seq dataset sequenced from a non model_organism although we did not have the annotations of the reference_genome we were able to show that salt identified more transcribed protein_domain that were related to this species most existing domain analyses in rna_seq still rely on traditional domain classification tools in this work we analyzed why a commonly used tool hmmer can incur low sensitivity for analyzing ngs_data we conducted a correlation study between the sensitivity of hmmer and other features based on the dataset in the second experiment these features included the following i the alignment score between the domain region and the input family the correlation_coefficients between the sensitivity and these features were and respectively the normalized alignment score of the domain region in the transcript had a strong positive linear relationship with the sensitivity of hmmer this implies that reads sequenced from close homologs of a domain_family can be better classified using profile hmm based_methods on the other hand reads sequenced from remote_homologs of a domain_family are harder to classify we further found that the correlation_coefficient between the sensitivity and average pairwise sequence_identity in a domain was this indicates that the performance of profile hmm based_methods is related to the sequence_conservation level of a domain the choice of parameters is important for salt to provide good overall performance here we give some analysis of the parameter k the number of generated candidate contigs the default value of k is the number of sinks in the hit graph when the graph size is small this k value works well however when the graph size is large such as the hit graphs constructed from metagenomic_datasets the efficiency of salt will decrease significantly theoretically the number of sequenced contigs of a domain is the product of the average number of contigs in a domain and the number of copies of the domain in the genome the former one can be estimated by the sequencing_depth and the latter can be inferred from existing domain organizations in pfam this approximation provides a better trade_off between classification_performance and efficiency however if the users do not have good estimates for these values the default k value is recommended the filtration stage of salt dominates the time complexity of salt as alternatives to ppst used in this stage we could use hmmer or hhblits to align query reads against the input families however as shown in our experiments both hmmer and hhblits have low sensitivity for short_reads therefore psst is an important strategy that increases the sensitivity of salt for long query reads we could use hmmer or hhblits in the filtration stage to obtain a better trade_off between sensitivity and running time families allows us to use parallelization techniques such as mpi finally we will provide users with a systematical way to better estimate k based on the sequencing_data and domain information 
