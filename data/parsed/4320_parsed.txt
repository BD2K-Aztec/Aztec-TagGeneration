sequence_analysis soapdenovo trans de_novo transcriptome_assembly with short rna_seq motivation transcriptome_sequencing has long been the favored method for quickly and inexpensively obtaining a large number of gene sequences from an organism with no reference_genome owing to the rapid increase in throughputs and decrease in costs of next_generation rna_seq in particular has become the method of choice however the very short_reads e g bp paired ends from next_generation makes de_novo to recover complete or full_length transcript sequences an algorithmic challenge results here we present soapdenovo trans a de_novo transcrip tome assembler designed specifically for rna_seq we evaluated its performance on transcriptome datasets from rice and mouse using as our benchmarks the known transcripts from these well annotated genomes sequenced a decade_ago we assessed how soapdenovo trans and two other popular transcriptome assemblers handled such practical issues as alternative_splicing and variable expression levels our conclusion is that soapdenovo trans provides higher contiguity lower redundancy and faster execution availability_and source_code and user_manual are available at http sourceforge net_projects soapdenovotrans transcript sequences and gene_expression levels can now be efficiently obtained using rna_seq on next_generation providing increased throughputs and decreased costs applications for rna_seq include discriminating expression levels of allelic_variants and detecting gene_fusions to carry out these types of analyses requires an assembler that can reconstruct the transcripts from very short_reads e g bp paired ends assemblers such as cufflinks scripture and erange recover transcript sequences by aligning the reads to a reference_genome however reference_genomes are not always available especially if the genome is unusually large and or polyploid which is often the case for plants in these situations de_novo is required the challenge is not only to recover full_length transcripts but also to identify alternative_splice in the presence of variable gene_expression levels historically the first de_novo assemblers for next_generation like velvet abyss and soapdenovo were developed for genomes these programs were intended to recover sequences for genomes of a known estimated size with a defined number of chromosomes in contrast transcriptome assemblers must recover an unknown number of rna_sequences typically on the order of tens_of further transcript sequences are only a few k ilobases in length as compared with chromosomes which can be hundreds of m egabases in length adding to the complexity is that gene_expression levels vary by many orders_of so that for any non zero sequencing_error the most highly_expressed will always harbor many discrepant bases making it impossible to to whom correspondence should be addressed y the authors wish it to be known that in their opinion the first four authors should be regarded_as define an absolute threshold for the number of sequencing_errors allowed per assembly another issue is that most contemporary de_novo transcriptome assemblers like trans abyss multiple k surget rnnotator oases and trinity use the de_bruijn dbg schema for computational and memory_efficiency which means that alternative_splice transcribed from the same locus will be combined into a single complicated de_bruijn sub graph this then needs to be addressed in recent_years some important changes have been introduced to improve transcriptome_assembly oases enumerated all possible transcripts with the simplifying concept of assembly subgraphs and then used a robust heuristic_algorithm to traverse these graphs trinity introduced a new error removal model to account for variations in gene_expression levels and then used a dynamic_programming procedure to traverse their graphs however there is a lot of room for improvement e g oases produces more redundant transcripts possibly due to it lacking an effective error removal model and trinity produces fewer full_length transcripts possibly due to it not using paired_end data for scaffold construction here we present a de_novo rna_seq assembler soapdenovotrans which builds on these previous innovations to overcome a few remaining issues soapdenovo trans incorporates the error removal model from trinity and the robust heuristic graph traversal method from oases in addition we use a strict transitive_reduction method to simplify the scaffolding graphs and provide more accurate results to assess the impact of these changes we evaluated all three assemblers on rice and mouse which have established transcriptome_data linked to genome_annotations produced over the last decade the results here demonstrated that soapdenovo trans provides higher contiguity lower redundancy and faster execution to compare the performance of soapdenovo trans trinity and oases we assembled two sets of paired_end illumina data l arge and s mall for rice and mouse as both genomes were sequenced a decade_ago the annotation has been extensively curated making these appropriate benchmarks to assess the assembly software we chose to assess both plant and animal transcriptomes because most other studies only assessed animals or even simpler organisms like yeast and we wanted to be sure that our assembler could handle the difficulties created by plant data plants have larger gene_families and more transposable_elements tes some of these tes are also highly_expressed soapdenovo trans was designed for use in the plants kp initiative www onekp com and thus it was essential to manage these difficulties we first assessed the computational_demands of the three software programs with regard to peak memory and time for both measurements soapdenovo trans was more than competitive with the other two programs alignment of the assembled transcripts to the annotated genomes showed that soapdenovo trans produced the fewest transcripts by more than factor of in the most extreme cases even after removing assemblies that were shorter than bp however the number of annotated genome loci recovered was consistent among the three algorithms differing only by one might naively attribute the differences in transcript numbers to alternative_splice but we would advise caution there could be for example non overlapping fragments of the same isoform or redundant copies of the same isoform the following analyses are focused only on those transcripts that aligned to genome loci with annotated_genes we used the terms series a and series b to denote the sets of transcripts that included or excluded putative alternative_splice respectively series a includes all assembled transcripts while series b is a strict subset that includes only the largest assembled transcript for any given gene to properly assess the differences between assemblers it is important to first understand how the rice and mouse assemblies differed from each other despite the fact that the rice and mouse datasets have similar amounts of raw input_data i e s and l datasets s rice versus mouse versus gbp l note our analyses generated a successive reduction in the number of assemblies first we restricted our analyses to assemblies larger than bp blat alignments to the reference_genomes were done at sequence_identity assemblies were deemed to be correct when of their lengths could be accounted for in one consistent alignment if not assemblies were deemed to be chimeric when of their lengths could be accounted for in two or more alignments with different orientations on different chromosomes or on distal_regions of the same chromosome we then confined our analysis to assemblies that overlapped with annotated_genes because multiple assemblies could align to the same genome locus we generated two datasets series a and b which included or excluded putative alternative_splicing forms respectively in choosing among the isoforms whether for series b or the genome_annotations we always used the longest available sequence in the case of the rice transcriptome about of the annotated genome loci were known to be tes but our data showed that this was not a confounding issue we indicate here the percentage of the assembled transcripts that were not known to be tes of the expressed rice genes were non tes given that many more rice genes had to be recovered from the same amount of sequence_data the read_depths per gene were lower as a result the rice assemblies were not as high_quality as the mouse assemblies furthermore we expected that given no extensive assembly errors i e ones so extreme that they could not even be defined as chimeric all but a very small percentage of the assembled transcripts should align to the genome this was the case for mouse but not for rice where close to failed to align because of subspecies differences i e the use of indica transcriptomes and japonica genome_annotations we could eliminate most of the alignment failures by aligning the transcripts to combined genomes of both subspecies however to avoid the complications of having two genome_annotations we used only the alignments to the japonica genome comparisons of the assembled and annotated transcript can at least in principle be complicated if the sequences represent different isoforms created from different combinations of exons under those circumstances the concept of full_length cannot even be defined by the ratio of lengths however in practice the overlap between the assembled and annotated transcript is almost always perfect hence the two sequences almost always represent the same isoform this allowed us to simplify our calculations for deriving the next plot which presents the cumulant for the assembled transcript lengths versus the assembled to annotation length ratios what this is meant to show is the extent to which full_length transcripts are recovered for any definition of completeness without having to choose an arbitrary threshold like of the use of total length on the y axis is meant to de emphasize the fact that there are many small assemblies that even in aggregate do not amount to much the ideal is a step function with a rapid increase at ratios near and soapdenovo trans came closer to this than did trinity or oases based on the shoulder in the curve the data indicated that soapdenovo trans using only gbp of mouse data outperformed trinity when it used gbp of mouse data note also that the increase begins before ratios of meaning that in many instances the assembled transcript was longer than the annotated transcript which is not unexpected because untranslated_region utr sequences tend to be poorly_annotated to put a solid number on how many genes or isoforms were recovered we chose an arbitrary threshold or of the expected length in here we only counted the isoforms that had been recorded in the genome_annotations while it is possible that the transcriptome_data contained isoforms that had not previously been discovered it is equally possible that these putative alternative_splice were assembly errors the only way to avoid a misleading isoform count is to record only what had previously been annotated rather surprisingly we found that trinity and oases did not recover more isoforms than where we showed a distribution here we plot a cumulant l assembly is the length of the assembled transcript counting only the portion that aligned to the genome while l annotation is the length of the annotated transcript notice that the assembly to annotation lengths are plotted in reverse from large to small the ideal result is a step function with a sharp_rise at but it begins to increase prior to because the assembled transcripts contain utrs that were not present in the annotated transcripts overlaps between the assembly and annotation l overlap is the length of overlap between the assembled and annotated transcripts while l assembly is the length of the assembled transcript counting only the portion that successfully aligned to the genome here we show the distribution in the number of assembled transcripts as a function of the overlap to assembly lengths soapdenovo trans even though they produced many more assemblies to investigate why the assemblers especially oases generated so many putative alternative_splice we did a comparison of the submaximal transcripts i e all but the largest of the many transcripts that aligned to a particular genome locus to the maximal transcript in many cases we saw virtually no overlap between the submaximal and maximal transcripts indicating that the assemblers produced non overlapping fragments of the same isoform in many other cases the overlap to submaximal ratio was equal to one which meant no new exons were recovered unlike what is typically seen with genuine instances of alternative_splicing we noticed that the assemblers often produced multiple artifactual transcripts as a result of minor substitution_errors in the raw input_data all had about the same length in contrast to the common form of alternative_splicing where exons are added or subtracted which would result in changes in the transcript lengths e g out of exons in an animal gene or out of exons in a plant gene we tested for artifacts of this type by plotting the cumulant for the transcript lengths as a function of submaximal to maximal lengths the sharp_increase as the ratios approach one showed that all the assemblers created artifacts of this type but soapdenovo trans was the least offensive of the tested software sequence_assembly using real_world datasets has always required many subtle algorithmic changes to produce the best results and it is clear that no single algorithm has a magic bullet that solves all of the problems we developed soapdenovo trans by combining novel concepts introduced by trinity and oases with concepts developed for the genome version of soapdenovo on top of this we added modifications of our own suitable for transcriptome_studies as demonstrated here we believe we have produced an algorithm that substantially improves on the currently available tools for transcriptome_assembly given the complexity of these analyses however soapdenovo trans is unlikely to be the final word in transcriptome_assembly in particular we tested one of the reference based assemblers cufflinks and found that it provided even better results than soapdenovo trans these results suggest that perhaps there is information in these datasets that with additional algorithm modifications can be recovered for example a multiple k_mers strategy may improve transcriptome_assembly current multiple k_mers assembly strategies generally fall into one of the two categories i after using different values for k_mer assembly analysis of alternative_splice given a set of assembled transcripts aligning to the same genome locus l submaximal is the length of any transcript other than the largest while l maximal is the length of the largest transcript l overlap is the length of the overlap between the two as in we show a distribution for the number of transcripts and then a cumulant for the transcript lengths separately the resultant assemblies are merged into one final_set this might result in a more complete transcript set but it may also introduce redundancy ii iterate different k_mer dbg assemblies during contig construction this strategy could potentially make the best use of reads and paired_end information but whether it is worth developing such an algorithm depends in part on the ongoing developments in sequencing_technology there is an expectation of improvements in read_lengths in the future if so it would necessarily alter the types of issues faced by transcriptome_analysis finally soapdenovo trans unlike trinity and oases does not yet perform strand specific assembly and this is planned for a future development to further improve this algorithm 
