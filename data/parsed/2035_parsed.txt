genome_analysis genomictools a computational platform for developing high_throughput analytics in genomics motivation recent_advances in sequencing_technology have resulted in the dramatic_increase of sequencing_data which in turn requires efficient management of computational_resources such as computing time memory_requirements as well as prototyping of computational_pipelines results we present genomictools a flexible computational platform comprising both a command_line set of tools and a c api for the analysis and manipulation of high_throughput sequencing_data such as dna_seq rna_seq chip_seq and methylc seq genomictools implements a variety of mathematical operations between sets of genomic_regions thereby enabling the prototyping of computational_pipelines that can address a wide_spectrum of tasks ranging from pre_processing and quality_control to meta_analyses additionally the genomictools platform is designed to analyze large_datasets of any size by minimizing memory_requirements in practical_applications where comparable genomictools outperforms existing_tools in terms of both time and memory_usage availability the genomictools platform version was implemented in c the source_code documentation user_manual example datasets and scripts are available online atadvances in sequencing_technology have led to an impressive increase in the production of experimental_data in the form of rnaseq chip_seq and other types of sequencing_data genomics studies now typically involve the analysis of dozens of sequencing_datasets or equivalently hundreds of millions of sequenced_reads this amount of data requires an efficient management of computational_resources such as time memory and development time in an effort to address_these the bedtools suite was developed where unix command_line pipelines were used to effectively reduce the genomics analyses into a form of stream computing bamtools provides an api through which read_alignments in bam sam format can be manipulated sequentially this computing model clearly makes a more efficient use of memory 
