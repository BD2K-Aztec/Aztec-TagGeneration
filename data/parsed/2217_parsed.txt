hixcorr a portable high_speed x corr engine for high_resolution tandem_mass peptide_identification is an important problem in proteomics one of the most popular scoring_schemes for peptide_identification is x corr cross_correlation since calculating x corr is computationally_intensive a lot of efforts have been made to develop fast x corr engines however the existing x corr engines are not suitable for high_resolution ms_ms spectrometry because they are either slow or require a specific type of cpu we present a portable high_speed x corr engine for high_resolution tandem_mass by developing a novel algorithm for calculating x corr the algorithm enables x corr calculation times_faster than previous_algorithms for da fragment tolerance furthermore our engine is easily portable to any machine with different types of cpu because it is developed in c language hence our x corr engine will expedite peptide_identification by high_resolution tandem_mass availability_and available atproteomics is the study of proteins particularly expression structures functions and interactions of proteins because proteins play_important in a human_body correct protein_sequence identification is very important high_throughput protein identification is generally done by cleaving a protein into peptides getting tandem mass ms_ms of the peptides and analyzing the spectra to identify peptide_sequences sequest is one of the most widely used computer programs for peptide_identification from ms_ms spectrum_analysis it compares an experimental_spectrum with theoretical spectra computationally created from sequences in peptide database and finds the theoretical spectrum most similar to the experimental_spectrum to measure the similarity between the theoretical and experimental_spectra sequest uses a sophisticated scoring_scheme x corr cross_correlation however calculating x corr can be very slow and consumes most of the running time of sequest thus a lot of efforts have been made to overcome this speed issue the original sequest used fast_fourier algorithm to make the x corr calculation faster later crux improved the calculation speed of x corr by using a precomputation table which is also used in modern sequest and turbosequest faster x corr calculation is performed by tide it was optimized for x machine by including the x assembly code later a portable tide was developed in c language with exact p value computation capability to distinguish these two tide versions we will call the earlier version with x assembly code tide x and the later portable version tide c modern processors have multicores and support multithreading comet an open_source ms_ms search tool by x corr supported multithreading for x corr calculation thus the more processors and cores a machine has the faster the comet runs nowadays more and more spectra are being acquired by highresolution mass_spectrometers for example q exactive orbitrap hybrid mass_spectrometers thermo scientific bremen germany slower respectively when the fragment tolerance is da than when the tolerance of da and supplementary comet shows similar behavior as the resolution gets higher supplementary table s and supplementary the existing x corr engines run slower for high_resolution spectra because they require more memory as the resolution gets higher they create an o m f sized mass bin array for x corr calculation where m is the precursor mass and f is the fragment_ion mass accuracy for example for a low_resolution spectrum whose precursor mass is da and fragment tolerance is da they create an array whose size is around however for a high_resolution spectrum whose precursor mass is da and fragment tolerance is da they create an array whose size is around comet suggested a partial solution for this when it runs with use sparse matrix in the parameter file it first creates a huge mass bin array and then compresses the array we will call this comet sparse in this article we present a portable hi speed x corr engine which does not create a mass bin array altogether instead calculates x corr directly from the peak list thus it runs in o p time where p is the number of peaks in a spectrum while all the previous engines are based on x corr algorithms running in o m f time where m is the precursor mass and f is the fragment tolerance pseudocodes are available in the supplementary data hixcorr a portable high_speed xcorr engine 
