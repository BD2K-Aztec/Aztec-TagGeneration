data dynamics a modeling environment tailored to parameter_estimation in dynamical_systems modeling of dynamical_systems using ordinary_differential is a popular_approach in the field of systems_biology two of the most critical steps in this approach are to construct dynamical_models of biochemical_reaction for large_datasets and complex experimental_conditions and to perform efficient and reliable parameter_estimation for model_fitting we present a modeling environment for matlab that pioneers these challenges the numerically expensive parts of the calculations such as the solving of the differential_equations and of the associated sensitivity system are parallelized and automatically compiled into efficient c code a variety of parameter_estimation algorithms as well as frequentist and bayesian_methods for uncertainty analysis have been implemented and used on a range of applications that lead to publications availability_and the data dynamics modeling environment is matlab based open_source and freely_available www data dynamics org contact andreas raue fdm uni freiburg de supplementary_information supplementary data are available at bioinformatics online for the construction of computational_models that are used to analyze signal_transduction gene_regulation and cellular decisions datasets generated under a wide_range of experimental_conditions have to be analyzed comprehensively the data dynamics software environment is designed for computation ally efficient and user_friendly integration of complex experimental_data into models consisting of coupled non linear ordinary_differential ode our software allows to specify the right hand side of the ode manually or to automatically generate it by providing the reaction scheme with the respective rate law such as mass action michaelis_menten or a custom rate equation the resulting ode system as well as its jacobian matrix that is calculated automatically by symbolic differentiation are translated to c code and complied together with the ode solver into a matlab mex function the code makes efficient use of precalculated reaction fluxes time varying inputs to the ode systems can be represented by custom or prede fined input functions such as steps pulses and splines that can depend on unknown_parameters schelker et_al the initial_concentrations can be considered as functions of unknown_parameters as well the software allows considering multiple different models that can share_common parameters and fitting them simultaneously to all available data the software is able to automatically create model variants that represent different experimental_conditions the conditions can be defined directly in the data sheets that contain the measurements and are parsed and grouped for instance a data_sheet containing four different experimental_conditions automatically creates four different variants of the ode system that are linked to the respective data the model_simulations will be plotted in the same grouping as well see trajectories in different color in figure for doseresponse experiments the software automatically generates all required model variants and displays the simulation_results in a dose response plot for computational_efficiency experimental_conditions and thus model variants that are shared between different experiments are calculated only once the c code can automatically parallelize the calculation of the ode solutions since all model variants can be solved independently the mapping between experimental_data and the simulated model can contain additional parameters that can for instance account for unknown offsets or scaling_factors a unique feature of the data dynamics software is its ability to estimate the magnitude of experimental_errors together with the model dynamics see figure to this end a full likelihood_function is automatically generated a critical task in modeling of dynamical_systems is the efficient and reliable estimation of unknown model_parameters also called model_fitting we implemented a variety of different parameter_estimation algorithms raue et_al b the most efficient and reliable algorithm for parameter_estimation in our hands is a deterministic trust region approach combined with a multistart strategy to map out local_minima a variety of global optimization algorithms is implemented as well kronfeld et_al parameters can and should be estimated on a log scale prior_knowledge about the parameters can be considered by prior distributions the respective penalization of the likelihood leads to maximum a posteriori estimation if steady_state assumptions for the model dynamics are required and the functional relationship to parameters is unknown steady_state constraints can be added to the objective_function a quality_control as proposed in raue et_al b can be performed to validate robustness of the estimation results the software implements a sophisticated method to calculate model sensitivities i e the derivatives of the dynamics with respect to model_parameters the sensitivity equations are derived automatically by symbolic differentiation translated to c code and compiled together with the original ode system and solver we showed previously raue et_al b that this approach which is not implemented in any other software_packages is not only about times_faster but also more precise than the default approach using finite differences a reliable calculation of these derivatives is a key to successful parameter_estimation goodness_of analysis likelihood_ratio qq plots and auto correlation of the residuals are available in addition to finding the best model_fit to a given collection of data the data dynamics software implements a wide_range of algorithms that are able to determine uncertainties in the estimated parameter as well as in the predicted model dynamics in particular the frequentist profile likelihood approach for identifiability analysis raue et_al the prediction profile likelihood approach for observability analysis kreutz et_al a variety of markov_chain approaches are implemented to perform bayesian_inference hug et_al raue et_al a based on the results of such uncertainty analyses the software allows to design additional experiments steiert et_al that can resolve non identifiability and non observability raue et_al and improve prediction_accuracy kreutz et_al the software is developed in a community effort using a web_based code hosting service and a revision control system a variety of published applications are provided as benchmark examples for further methods development and as guideline for novel applications for these examples not only the models but also all datasets their link to the models as well as all original information used in the parameter_estimation and uncertainty analysis are provided the software was awarded twice as best performer in the dialogue for reverse_engineering assessments and methods dream and acknowledgement 
