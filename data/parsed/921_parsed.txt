cgdm collaborative genomic_data model for molecular_profiling data using nosql motivation high_throughput molecular_profiling has greatly_improved patient_stratification and mechanistic_understanding of diseases with the increasing amount of data used in translational_medicine studies in recent_years there is a need to improve the performance of data warehouses in terms of data_retrieval and statistical processing both relational and key value models have been used for managing molecular_profiling data key value models such as seqware have been shown to be particularly advantageous in terms of query processing_speed for large_datasets however more improvement can be achieved particularly through better indexing techniques of the key value models taking_advantage of the types of queries which are specific for the high_throughput molecular_profiling data results in this paper we introduce a collaborative genomic_data model cgdm aimed at significantly increasing the query processing_speed for the main classes of queries on genomic_databases cgdm creates three collaborative global clustering index tables cgcits to solve the velocity and variety issues at the cost of limited extra volume several benchmarking experiments were carried_out comparing cgdm implemented on hbase to the traditional sql data model tdm implemented on both hbase and mysql cluster using large publicly_available molecular_profiling datasets taken from ncbi and hapmap in the microarray case cgdm on hbase performed up to times_faster than tdm on hbase and times_faster than tdm on mysql cluster in single_nucleotide snp case cgdm on hbase outperformed tdm on hbase by up to times and tdm on mysql cluster by up to times molecular_profiling refers to the study of specific patterns or signatures such as dna polymorphism mrna gene_expression rna_profiling proteomics and metabolic polymorphism biomedical_research is moving towards using more high_throughput molecular_profiling data to improve disease understanding a typical molecular_profiling database contains values of features from individuals of interest or samples to be used for several medical studies a subject of study is usually a particular sample which we want to analyze for the specific study at high_level queries on bioinformatics databases are meant to retrieve subjects based on their features as searching conditions we investigated massive molecular_profiling data based analysis applications such as vant cross and burmester and participated in popular european medical projects such as u biopred unbiased biomarkers in prediction of respiratory_disease outcomes and etriks european translational information and knowledge_management services we found three most frequently used steps for disease understanding the first step is the marker selection the next step is to discover the relationship between the selected markers and a particular disease if the relationship is validated the last step is to detect potential patients with the diseasethe most common queries for disease understanding do not cover all the commonly used queries for example wildcard query generally there are two main types of wildcard queries one begins with a wildcard searchstring this query will perform a scan operation on a full or large range of the table the other one starts with a search string search string this query will perform a relatively small seek operation based on theprefix search string though tests for wildcard query are not specified some of the results show some hints about how cgdm may perform the last query in section which performed a scan on the whole table indicates the performance of a test similar to search string the query tests in section performed queries similar to queries with wildcard gse on hbase due to the hierarchical design of cgcit cgcit has three types of wildcard queries the wildcard query on primary index the wildcard query on other indices and the wildcard query on content the last query in section shows a wildcard query on primary key and the queries in section indicates wildcard queries on other indices any one of these three wildcard queries may not be the best choice for certain cases while a mixed dynamically wildcard query plan may perform better than statically choosing one in this paper cgdm has been created for high_throughput molecular_profiling data to improve the query processing_speed for the three main classes of queries on genomic_databases multiple benchmarking experiments were carried_out comparing cgdm implemented on hbase to tdm implemented on both hbase and mysql cluster using large publicly_available molecular_profiling datasets in the microarray case cgdm on hbase performed up to times_faster than tdm on hbase and times_faster than tdm on mysql cluster in the snp case cgdm on hbase outperformed tdm on hbase by up to times and tdm on mysql cluster by up to times 
