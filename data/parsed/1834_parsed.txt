fiona a parallel and automatic strategy for read_error motivation automatic error_correction of high_throughput sequencing_data can have a dramatic impact on the amount of usable base_pairs and their quality it has been shown that the performance of tasks such as de_novo and snp_calling can be dramatically improved after read_error while a large number of methods specialized for correcting substitution_errors as found in illumina data exist few methods for the correction of indel_errors common to technologies like or ion_torrent have been proposed results we present fiona a new stand alone read errorcorrection method fiona provides a new statistical_approach for sequencing error_detection and optimal error_correction and estimates its parameters automatically fiona is able to correct substitution insertion and deletion errors and can be applied to any sequencing_technology it uses an efficient implementation of the partial suffix_array to detect read overlaps with different seed lengths in parallel we tested fiona on several real_datasets from a variety of organisms with different read_lengths and compared its performance with state of the art methods fiona shows a constantly higher correction accuracy over a broad range of datasets from and ion_torrent sequencers without compromise in speed conclusion fiona is an accurate parameter free read errorcorrec tion method that can be run on inexpensive hardware and can make use of multicore parallelization whenever available fiona was implemented using the seqan library for sequence_analysis and is publicly_available for download at http www seqan de projects next_generation ngs_technologies have revolutionized genomics and produce billions of base_pairs per day in the form of reads of length bp in this article we focus on ngs_reads produced by genome_sequencing owing to the large range of applications of genome_sequencing the correction of errors introduced by the sequencer substitution as well as insertion or deletion indels has recently_attracted previous_studies showed that error_correction can improve de_novo performance and snp_detection depending on the technology the most prevalent error type differs illumina technology produces mostly substitution_errors whereas sequencers are prone to produce runs of larger insertions of the same nucleotide ion_torrent sequencers were shown to have a large amount of indel_errors and a high sequencing_error however current error_correction methods suffer a number of limitations as highlighted in a recent review i most methods cannot correct indel_errors because they are tailored to correct only substitution_errors and are therefore only applicable to illumina_reads ii most approaches need to be parameterized depending on the dataset otherwise their performance is suboptimal this either requires in depth knowledge by the user or parameter_optimization using downstream_analysis which often leads to longer running_times in practice iii because the throughput of ngs_technologies is growing steadily many approaches are not applicable to larger datasets because of running time or memory limitations these caveats make it hard for users to choose the optimal tool for their dataset and ngs_technology here we introduce a new approach to read_error called fiona which addresses all the above_mentioned limitations fiona provides an accurate and highly parallelized method for correction with the ability to correct indel_errors while it automatically adjusts its parameters all read errorcorrection methods have to perform essential tasks i computation of read overlaps ii error_detection in reads and iii error_correction in a recent review by the methods have been classified into k spectrum based suffix_tree array based and multiple_sequence msa based we will briefly explain the differences and weaknesses of these approaches but refer the reader to k spectrum based k spectrum based read_error was introduced in the euler assembler there exist many variations on the k spectrum based error corrections for ngs_reads for example approaches that were designed to select the necessary parameters using mixture_models popular_methods are quake reptile and the error_correction module from the allpaths_lg assembler all of which use base_quality values to our knowledge only allpaths_lg in this category can correct short indel_errors to whom correspondence should be addressed y the authors wish it to be known that in their opinion the first three authors and the last author should be regarded_as the author published_by this is an open_access the terms of the creative_commons http creativecommons org_licenses which permits non commercial re use distribution and reproduction in any medium provided the original_work for commercial re use please_contact permissions_oup comthe general disadvantage for most of these methods is their inability to correct indel_errors a severe limitation for or ion_torrent sequencers in addition for most of these approaches parameters need to be optimized by the user to obtain good performance for example reptile suffix_tree array based shrec was the first approach that uses a variable seed length for read overlap and error_detection computation it considers for each erroneous read a set of correcting reads such that all reads share a k_mer left of the error and the set of correcting reads share a k_mer that ends with the correct base which outvotes the erroneous base to efficiently find erroneous reads and correcting candidates shrec traverses a generalized suffix_tree of all reads in which erroneous and correcting reads occur as children of branching nodes with string depth k building on a suffix_tree representation the hybridshrec algorithm extended the ideas to correct indel_errors and sequences in color_space in both methods potentially correcting reads are compared with erroneous reads using hamming_distance seeded by the shared k_mers between reads further both methods are sensitive to the input_parameters and therefore show variable performance when compared in other studies and the full suffix_tree data_structure needs large memory resources the hitec algorithm introduced automatic parameter selection using coverage statistics seed lengths and coverage threshold are set automatically given the genome length and the average error_rate hitec uses the suffix_array instead of a suffix_tree to save memory however hitec can only correct substitution_errors and the automatic parameter selection works only for reads of same length as found for illumina data note that these methods do not define explicitly which correction for an erroneous position is applied when the same error is encountered multiple times through different seed lengths in the tree and in which order errors in a read are corrected msa based among the two existing multiple_alignment based_methods echo and coral salmela and schr oder only coral can correct indel_errors coral computes initial read overlaps with hash tables for a fixed k_mer length and then uses dynamic_programming to form multiple read_alignments this alignment is costly for long_reads but has a clear optimization function as read errors are corrected by the best voting correction in the msa we performed a comprehensive experimental evaluation of fiona and other tools on various real_world read sets for the evaluation of read correction quality the metric gain has been established in as a good summary of both sensitivity and precision the gain can be computed by b a b where a and b are the sums over the number of errors after and before correction over all reads when more errors are introduced than corrected over all the reads the gain takes a negative value for the evaluation we developed a tool compute gain which is included in the fiona distribution supplementary section s to cover most of the use cases nowadays we evaluated the accuracy on read sets from iontorrent and illumina sequencers that show a varying degree of read_lengths mean values from to bp and depth of coverage up to we selected datasets for a diverse set of organisms to explore the impact of genome complexity and repeat content on error_correction performance from short genomes escherichia_coli pseudomonas_syringae to longer and more complex ones drosophila_melanogaster homo_sapiens further details about all datasets and the evaluation are given in supplementary section s the only variable parameter besides the input read set given to fiona is the estimated genome length supplementary fiona was run with default_parameters for all datasets i e the sequencing_error was and the presorting q gram length was set to in this study we introduced fiona a new algorithm for the correction of sequencing_errors without the need for a reference_sequence fiona builds over existing strategies to accurately correct errors accounting for indels with automatic parameter selection one of the main advantages of fiona is the use of variable seed lengths combined with a global optimization criterion to choose the best correction for a read our experiments show that fiona outperforms other methods on datasets from different sequencing_technologies timegain 
