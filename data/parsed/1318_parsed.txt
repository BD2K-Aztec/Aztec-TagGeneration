genome_analysis the past_years have witnessed a strong interest in the problem of de_novo from sequence_reads of short and moderate length due to the rapid adoption of high_throughput one critical application is the sequencing and assembly of complete bacterial_genomes that has become a routine task for many research_laboratories although with these technologies comes the need for novel computational and technological approaches to complement the specificities of each platform one such example is the use of pairedend sequence_reads for de_novo that is essential to overcome the shortness of the reads by allowing the resolution of repeats larger than the read_length paired_end greatly improve de_novo contiguity however current assembly strategies still result in fragmented draft_genomes complicating downstream_analysis thus the ability to produce a finished genome is more than a psychological threshold it is an invaluable resource for the community as it is the foundation for comparative and evolutionary_studies closing bacterial_genomes in a fast semi_automatic way was reported this was done using a combination of illumina generated short_reads with long_reads obtained using pacific_biosciences pacbio rs sequencer illumina paired_end obtained from short and long inserts distributions are first used to produce an accurate scaffold remaining gaps are then filled in with long_reads here we focus on obtaining finished genomes using reads from only the broadly adopted illumina_platform on which paired_end bp reads are routinely_obtained there exist several protocols for producing whole_genome libraries for illumina_sequencing with the most common resulting in either short paired_end libraries generally bases or long paired_end libraries ranging from to kb both such libraries are mandatory for assembly as bacterial_genomes usually contain repeats of several kilobases short paired_end are generally accurate in length with a standard_deviation ranging between bp however the size of long paired_end is less accurate and may vary significantly using the information of short and long paired_end for de_novo is not straightforward with current approaches not fully exploiting their utility as most assembler programs make use of short paired_end only a few of them are able to properly handle long inserts these approaches have mainly been developed for the purpose of large eukaryotic_genomes assembly though they can also cope with smaller bacterial projects to date several strategies exist with the majority using short and long inserts at separate stages of the process long paired_end are generally used at a later stage to produce scaffolds allpaths_lg requires a minimum of two libraries yielding linking information of short bp and long kb paired_end it constructs scaffolds in an iterative manner by successively merging scaffolds obtained during the previous step in soapdenovo paired_end is explicitly used at two stages scaffolding to whom correspondence should be addressed and gap closure during scaffolding paired_end libraries are used in turn starting from with the smallest and moving to long insert_sizes only pairs displaying a unique unambiguous connection are used to join contigs into scaffold during the second stage gaps in the scaffold are filled by locally assembling the reads that may be located in the gap region a related gap closure strategy has been reported in boetzer and pirovano abyss looks for unambiguous pair connection in the graph using the long inserts at a post_processing scaffolding step another strategy consists in extending seeds by simultaneously using short and long inserts ray exploits short and long paired_end to iteratively elongating paths through an assembly_graph telescoper leverages an alternate seed extension strategy which works by only building a local graph at the extension region and assessing a statistical score for possible extension candidates it was specifically developed for assembling telomeric regions and requires to be provided with set of strings to start from the seed extension strategy has a significant_advantage over other approaches in that it avoids the computation and storage of all possible routes between paired_reads which rapidly become intractable as the distance between paired_reads increases we present a novel seed extension strategy that discovers paths through a condensed overlaps graph the graph_structure itself is left untouched while the paths are determined possible paths extensions are represented by a tree_structure as soon as an extension is confirmed it is fixed and other paths are pruned from the tree the approach simultaneously makes use of the information issued from both types of inserts short and long to resolve complex tangles the minimum overlaps size similar to the k_mer size for debruijn graph based_approaches is the key_parameter to optimize for a successful assembly it is common to try a range of values and to choose the one that maximizes the assembly contiguity the optimal setting is a trade_off between resolving short repeats and conserving the graph connectivity in weakly covered regions we introduce a way to automatically_determine suitable minimum overlap sizes according to the contextual sequencing_coverage our method identifies and removes overlaps whose sizes are significantly_smaller than what could be expected according to the local overlaps sizes distribution this makes the assembly significantly less sensitive to the minimum overlaps parameter which in turn simplify the parameterization task for the end_users the described approaches are implemented in the new version of our overlapsgraph based de_novo assembler edena in addition the program features an interactive shell that allows investigating an assembly at targeted_regions this mode provides a valuable assistance for many tasks such as resolving ambiguities gap_filling assessing suspect assembly or designing primers we demonstrate the efficiency of edena by assembling two staphylococcus aureus_strains from experimental illumina ga sequencing_data using paired_end sequenced from short and long insert libraries we produce a finished mbp circular genome of the strain sgh the sequence is assessed against a phylogenetically_related parent and by polymerase_chain pcr at targeted_regions we also resequence the strain mw with paired_end obtained from short and long insert libraries this assembly yields nine contigs that fully covers the genome with perfect accuracy we present a de_novo approach that succeeded in obtaining a finished genome_sequence of a new s aureus isolate a public_health implied pathogen the assembly was performed using bp paired_end obtained from the broadly available illumina_platform only minor human intervention was required the presented approach is implemented in the publicly_available edena software application our method relies on simultaneously exploiting the information provided by short and long paired_end sequence_reads to discover paths in the assembly_graph the process uses a search tree_structure that is progressively pruned our approach works for inserts of potentially any length by constraining possible paths such long paired_end connections can be intractable to establish directly through the assembly_graph as the number of possible paths increases exponentially with the searched distance we present the search tree_structure in the context of an overlaps graph resulting from bp reads however it is in all likelihood generalizable to other approaches as well such as the debruijn graph or graphs resulting from longer sequence_reads the used statistics as well as the algorithm that integrates the paired_end connections to select the correct elongations can be further developed for example an avenue worth exploring would be to measure the distribution drift that can occur with false_positive paired_end connections sequence accuracy is a major_concern and we developed edena by prioritizing accuracy over contiguity being able to have confidence at the single nucleotide level of an assembly removes many of the downstream complications during analysis even if no de_novo assembler can be claimed to be perfectly reliable in all situations edena achieved a high_level of accuracy as demonstrated by the assembly of s aureus strain mw data moreover all suspicious cases we checked with independent methods were finally settled in favor of the assembly produced by edena the contextual i edges cleaning procedure significantly_reduces the parameterization effort for the end_users a satisfactory if not optimal assembly can often be obtained with default_parameters by default the minimum overlap size is set to half of the reads length which is conservative however according to the achieved coverage it is worth increasing this setting which acts as a first rough hewing and facilities further processing for example given the high coverage achieved for the sgh and mw projects we set the minimum overlaps value to be however the same or similar assemblies could also be obtained with default_parameters or with a larger value such as this makes edena particularly suited for batch automatic assembly of numerous bacterial_genomes for which individual parameterization is not feasible even if the required cpu time and memory displays significant differences between the programs this requirement was a limitation for none of them it is important mentioning that these requirements may strongly depend on the parameterization and particularly on the k parameter we did not optimize the programs settings regarding the hardware requirement but only regarding the assemblies contiguity it is likely that not all bacterial_genomes could be so easily assembled each sequencing project is an individual story a recurrent issue is the tandem_repeats that require sharp inserts distribution to be properly resolved the quality of the sequencing_data and particularly the accuracy of the inserts length are determinant parameters for a successful assembly it is however note contigs and scaffolds metrics as well as hardware usages are presented for each program soap gc refers to soapdenovo scaffolds post processed by the gapcloser module note that edena scaffold metrics are not available n a as it does currently not include a scaffolding step number of seq is the number of contigs after the removal of non bacterial_contamination sum and max are the total assembly size and the largest contig length respectively number of large discr reports the number of large structural discrepancies with the genome_sequence of the closest isolate which are likely to correspond to assembly error cpu and mem are the cpu time h and the memory_usage gb respectively note assembly metrics as provided by quast tot mis is the number of local and extensive misasssemblies number of ext mis is the number of extensive misassemblies only nga is the n metrics computed from the contigs broken at every misassembly ref is the percentage of the genome that is covered by the contigs remaining columns are the same as in possible provided human intervention to manually solve many assembly ambiguities by investigating the paired_end together with the node coverage and graph topology the interactive shell of edena was initially implemented for the development purpose but has shown to be an invaluable tool in the process of checking particular regions and in producing a finished genome 
