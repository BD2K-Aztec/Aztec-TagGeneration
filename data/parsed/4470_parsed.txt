gene_expression supersplat spliced rna_seq alignment motivation high_throughput have recently made deep interrogation of expressed transcript sequences practical both economically and temporally identification of intron_exon is an essential part of genome_annotation yet remains a challenge here we present supersplat a method for unbiased splice_junction discovery through empirical rna_seq results using a genomic reference and rna_seq high_throughput sequencing_datasets supersplat empirically identifies potential splice_junctions at a rate of million_reads per hour we further benchmark the performance of the algorithm by mapping illumina rna_seq to identify introns in the genome of the reference dicot plant arabidopsis_thaliana and we demonstrate the utility of supersplat for de_novo empirical annotation of splice_junctions using the reference monocot plant brachypodium_distachyon availability implemented in c supersplat source_code are freely_available on the web atrecent advancements in high_throughput hts technologies reviewed in have made deep interrogation of expressed transcript sequences both economically and temporally practical resulting in massive quantities of sequence_information using the rna_seq approach extracting comprehensible genic models from this sea of data depends upon the identification of intron_exon one current method used to identify intron_exon q palma utilizes a machine_learning algorithm to identify splice_junctions training a large margin classifier on known splice_junctions from the genome of interest this method depends upon the availability of previously known splice_junctions on which to train the algorithm and when finding novel potential splice_junctions is biased toward those which are similar to its training data in scoring novel potential splice_junctions the algorithm is biased toward canonical terminal dinucleotides scoring those which conform to these biases higher than ones that do not while in general these biases may prove to be correct many potential splice_junctions which do not conform to these rules threaten to remain unidentified a second method tophat works by first creating exonic coverage islands from short_reads and then based on canonical intron terminal dinucleotides itdn which exist in these islands identifies possible splices between neighboring exons like qpalma tophat is strongly built around the idea of canonical itdn resulting in similar issues to qpalma further since tophat bases its predictions on coverage islands a sufficient number of short rna_seq must be used as input such that reliable exon islands may be identified here we present our algorithm implemented in c supersplat which identifies all locations in a genomic reference_sequence that indicate potential introns supported by empirical transcript evidence derived from rna_seq our approach does not include bias for canonical itdn but rather finds every potential splice_junction supported by empirical_evidence doing so in a straightforward transparent manner and guided only by user provided values for minimum intron size and maximum intron size and by the minimum number of matching short_read nucleotides allowed on each flanking exon further any number of short_reads may be used as input since supersplat does not need or attempt to generate exon coverage islands supersplat aligns rna_seq to a reference_genome as a gapped_alignment in order to empirically define locations representing spurious alignments in the event that an annotation exists for the genome of interest reads matching annotated splice_junctions can be filtered out of the input in order to focus the supersplat analysis only on the identification of potential novel introns sensible selection of runtime options and post processing_steps are good precautions to control false_discoveries for example users may want to choose reasonable limits for minimum and maximum intron lengths guided by prior data in addition as described in our examples supersplat output can be filtered to retain only those intron predictions supported by some minimum chunk size multiple independent overlapping rna_seq introns supported by reads mapping to only a single genomic location validation by rna_seq from independent biological_replicates multiple different overlap lengths for the read fragments on the flanking exons and additional transcript evidence_supporting the predicted exons despite these precautions factors such as read_lengths sequencing_error target_genome complexity and gene_duplications contribute to the likelihood of false_discoveries with supersplat some of these issues will no doubt be resolved by improvements to hts technologies such as increased read_lengths reduced error_rates and routine use of paired_end using our test_set of reads matching known a thaliana splice_junctions we performed an analysis of supersplats precision while focusing on two of these standard filters independently including minimum chunk size and number of overlapping reads precision also known as positive predicted value ppv is defined as true_positives tp divided by the sum of tp and false_positives fp ppv tp tp fp it is worth noting that an algorithms ppv can be skewed by generating only a small number of very cautiouslydeclared positives resulting in a very small but highly confident output set supersplat in contrast generates exhaustive output that is not filtered according to confidence as a result the ppvs presented here are computed using large denominators ensuring that this metric is an accurate reflection of supersplats performance in our analysis a true_positive prediction is one that correctly identifies a location in the genome at which there exists the arabidopsis information resource tair annotated splice_junction a fp prediction is one that incorrectly identifies a location in the genome at which there is no such tair annotated splice_junction ppv was calculated as minimum chunk size was varied from to with results shown in filtering in this case for intron predictions in the supersplat output which had the minimum chunk size shown from these results we see that even at a minimum chunk size of six the precision of supersplat is nearly as minimum chunk size increases this precision value rapidly approaches and exceeds ppv was then calculated as the number of reads overlapping each splice_junction was varied from to with results shown in in this case we filtered for intron predictions in the supersplat output that had the respective number of intron overlaps shown from these results we see with six overlapping reads a ppv of with ppv reaching at overlapping reads runtime performance of supersplat is closely_tied to how deeply the genomic reference is indexed dictated by the mics value supersplat repeatedly queries its index for the genomic_locations of various sized k_mers which represent potential short_read fragment alignments since the probability of any specific k_mer existing at a particular genomic location under the assumption that all bases occur with equal probability is k as k increases the probability of any specific k_mer occurring decreases thus we expect on average that the list of all locations in a genomic reference_sequence of a specific k_mer to be longer by a factor of four than a similar list of a specific k_mer as supersplat processes short_reads from its input it repeatedly iterates over these location lists as the mics value increases the lengths of these lists decrease reducing runtimes by about a factor of four for each increase in the mics value when the mics value becomes sufficiently_large which for these data was around any particular mics sized k_mer occurs 
