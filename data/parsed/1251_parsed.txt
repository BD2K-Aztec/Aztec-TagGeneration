dann a deep_learning approach for annotating the pathogenicity of genetic_variants annotating genetic_variants especially non coding variants for the purpose of identifying pathogenic_variants remains a challenge combined annotation dependent depletion cadd is an algorithm designed to annotate both coding and non coding variants and has been shown to outper form other annotation algorithms cadd trains a linear kernel support_vector svm to differentiate evolutionarily derived likely benign alleles from simulated likely deleterious variants however svms cannot capture non linear relationships among the features which can limit performance to address_this we have developed dann dann uses the same feature_set and training data as cadd to train a deep neural_network dnn dnns can capture non linear relationships among features and are better suited than svms for problems with a large number of samples and features we exploit compute_unified compatible graphics_processing and deep_learning techniques such as dropout and momentum training to accelerate the dnn training dann achieves about a relative reduction in the error_rate and about a relative increase in the area under the curve auc metric over cadds svm methodology identifying the genetic_variants responsible for diseases can be very challenging the majority of candidate variants lie in non coding sections of the genome whose role in maintaining normal genome function is not well understood most annotation methods can only annotate protein_coding variants excluding of the human_genome another annotation method combined annotationdependent depletion cadd can annotate both coding and non coding variants cadd trains a linear kernel support_vector svm to separate observed genetic_variants from simulated genetic_variants observed genetic_variants are derived from differences between human_genomes and the inferred humanchimpanzee ancestral_genome because of natural_selection effects observed variants are depleted of deleterious variants simulated genetic_variants are enriched for deleterious variants cadds svm can only learn linear representations of the data which limits its performance to overcome this we implemented a deep neural_network dnn algorithm that we have named deleterious annotation of genetic_variants using neural_networks dann a dnn is an artificial_neural with several hidden layers of units between the input and output layers the extra layers give a dnn added level of abstraction but can greatly_increase the computational time needed for training deep_learning techniques and graphics_processing gpu hardware can significantly reduce the computational time needed to train dnns dnns outperform simpler linear approaches such as logistic_regression lr and svms for classification_problems involving many features and samples 
