genome_analysis hitec accurate error_correction in high_throughput high_throughput produce very large_amounts of data and sequencing_errors constitute one of the major problems in analyzing such data current_algorithms for correcting these errors are not very accurate and do not automatically adapt to the given data results we present hitec an algorithm that provides a highly_accurate robust and fully_automated method to correct reads produced by high_throughput methods our approach provides significantly_higher accuracy than previous methods it is time and space efficient and works very well for all read_lengths genome_sizes and coverage levels availability the source_code of hitec is freely_available atdna sequencing_technologies have produced a revolution in biological_research since the introduction of the sanger method hundreds of bacterial and eucaryotic genomes have been sequenced including several human_genomes this led to a significant number of biological discoveries high_throughput such as illuminas genome_analyzer abis solid and roches see e g produce gigabytes of data in a single run thus taking sequencing to a whole new level they provide the ability to answer biological_questions with revolutionary speed some of their many applications include whole_genome and resequencing single_nucleotide snp discovery identification of copy_number chromosomal_rearrangements etc the impact of these technologies for everyday_life yet to be fully understood will be far reaching many algorithms and software_tools have been created to deal with the large amount of data produced by these technologies two of the fundamental and most investigated problems are read_mapping and genome_assembly the former assumes the existence of a reference_genome and attempts to find the location of newly sequenced_reads from a different genome of the same species to whom correspondence should be addressed the latter attempts to reconstruct the genome that originated the reads in spite of the many different approaches these tools employ to solve their problems they all share several common issues such as very large data size repeats in genomes and sequencing_errors the first two cannot be changed and we shall concentrate here on sequencing_errors attempts have been made to either correct such errors or discard the erroneous reads some assembly tools include a spectral alignment based read correction preprocessing_step whereas others pre filter the reads the very recent_approaches of salmela are exclusively dedicated to read correction the general idea for correcting reads is to use the high coverage of the current_sequencing in order to identify the erroneous bases in the reads each base is usually sampled many times and the correct value will prevail the way such information is used can be spectral alignment or subtree weight in suffix_trees whereasprovides an efficient implementation of the euler sr read correction algorithm ofby using cuda enabled graphics hardware their program will subsequently be referred to as cuda the shrec program byuses a novel idea by employing weighted suffix_trees the algorithm of salmela is a generalization of shrec to mixed sets of reads error_correction is quickly identified as a key problem in highthroughput sequencing_data another software reptile has been developed bysimultaneously with ours it is also based on the k spectrum approach of euler sr and cuda our high_throughput error_correction hitec algorithm uses a thorough statistical_analysis of the suffix_array built on the string of all reads and their reverse complements it is intuitively explained in section and fully analyzed in the remaining of section we have tested in section our algorithm on many datasets simulated or real from as well as on several new ones the accuracy of hitec is significantly_higher than the accuracy of all the other programs the accuracy is the ratio between the number of corrected reads and the number of initially erroneous reads further our own testing reveals a significant_difference between the accuracy obtained by running the shrec program and that reported by we provide the values for both this is due to the fact that shrec requires trying several parameter_sets in order to find those providing the highest_accuracy which is likely not possible in real situations where the accuracy cannot be measured hitec is not only more accurate but also more robust our algorithm works for a wide_range of read_lengths and coverage levels and it is the only one to do so with automatic adjustment depending on the data_set based on our statistical_analysis in addition to high_accuracy the time and space complexities are very good our current serial implementation of hitec is comparable with reptile and is about six times_faster than the parallel implementation of shrec on the four processor machine we used for testing the space consumption is comparable with reptile and lower than that of shrec for all tests nevertheless we plan to improve the time and space of our algorithm by providing a parallel implementation this and other further research directions are presented in section together with a summary of the achievements 
