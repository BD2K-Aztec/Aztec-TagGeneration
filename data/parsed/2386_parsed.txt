structural_bioinformatics improving computational_efficiency and tractability of protein design using a piecemeal approach a strategy for parallel and distributed protein design motivation accuracy in protein design requires a fine_grained rota mer search multiple backbone_conformations and a detailed energy function creating a burden in runtime and memory_requirements a design task may be split into manageable pieces in both three dimensional_space and in the rotamer search_space to produce small fast jobs that are easily distributed however these jobs must overlap presenting a problem in resolving conflicting solutions in the overlap regions results piecemeal design in which the design_space is split into overlapping regions and rotamer search spaces accelerates the design process whether jobs are run in series or in parallel large jobs that cannot fit in memory were made possible by splitting accepting the consensus amino_acid selection in conflict regions led to non optimal choices instead conflicts were resolved using a second pass in which the split regions were re combined and designed as one producing results that were closer to optimal with a minimal increase in runtime over the consensus strategy splitting the search_space at the rotamer level instead of at the amino_acid level further improved the efficiency by reducing the search_space in the second pass availability_and programs for splitting protein design expressions are available at www bioinfo rpi edu tools piece meal html computational_protein is the process of finding an amino_acid that best accommodates a desired protein backbone_conformation with additional optional constraints on the structure designed proteins have demonstrated increased binding_affinities increased thermal_stability and entirely new functions such as small_molecule binding or protein binding a novel fold has been designed as have proteins with switchable folds and at least two novel enzymes computational_protein has been used as a protein_engineering tool and as an approach to understanding protein_folding stability and function algorithms for protein design must overcome a massive conformational search_space simplifying and reducing the space by fixing the backbone atoms and discretizing the side chain conformations into rotamer libraries makes protein design feasible but creates new challenges energy calculations tend to be less accurate as the sampling of conformational_space becomes more coarse_grained this translates to a trade_off between design accuracy and runtime the complexity of the design problem defined as the total number of possible sequences in the search_space can be reduced by splitting the search_space into smaller tasks each task may be solved independently and the results assembled into a single solution splitting the search_space introduces the possibility of using a fine_grained search which in turn enhances accuracy in energy calculations splitting has been implemented for the sidechain packing problem using graph_theory and for the dead_end elimination dee algorithm by applying a divideand conquer approach however these solutions still encounter a complexity ceiling due to memory_requirements this memory problem was overcome by who were able to fit a large design into small memory by random splitting of the rotamer search_space and stochastic iterative re estimation of the rotamer profile but unfortunately as dimensionality_reduction was increased the quality of the design decreased another option is to design small regions of the target in isolation and to combine those results into the final output this kind of approach has been done using a sliding_window of to whom correspondence should be addressed tetrapeptide units resulting in thermophilic versions of the top protein analogous methods have been employed for the inverse rna_folding problem using hierarchical decomposition and loop decomposition to extend the range of designable structures however splitting the design into overlapping three_dimensional real spaces downplays the covariant nature of energetic interactions which may be important for accurate energy calculations to illustrate covariant interactions if residue a interacts with residue b and b interacts with c but not with a the choice of rotamer at a still does affect the choice of rotamer at c in this work we explored the trade_offs between computational_efficiency and accuracy in computational_protein to evaluate the splitting concept in protein design we divided real_space into overlapping regions defined by a distance cut_off from a central residue of a template structure the sequence search_space complexity of the small split design regions was low and consequently the runtime of the entire_process was reduced by almost fold without any loss in design accuracy splitting the space into small pieces made it possible to reintroduce fine_grained conformational_sampling thus gaining speed without losing accuracy furthermore the split tasks can be run independently on different processors with no inter process communication burden in recombining the results of the split design tasks conflicts appear where a residue in the overlapping region is assigned incompatible choices of amino_acids in this work we explored ways of resolving these conflicts while preserving efficiency and accuracy the results showed us that a second pass rotamer search was necessary to resolve these conflicts that the search_space complexity for the second pass was significantly_reduced from that of the combined first pass design spaces and that a conservative_approach to reducing the rotamer search_space complexity was more accurate than an aggressive_approach piecemeal design is a general_strategy for making computational_protein more efficient accurate and amenable to the distributed computing environment the method wraps around any computational_protein method with minimal adaptation 
