gene_expression a simple and fast method to determine the parameters for fuzzy_c cluster_analysis motivation fuzzy_c is widely used to identify cluster structures in high_dimensional such as those obtained in dna_microarray and quantitative_proteomics experiments one of its main limitations is the lack of a computationally fast method to set optimal values of algorithm parameters wrong parameter_values may either lead to the inclusion of purely random fluctuations in the results or ignore potentially important data the optimal_solution has parameter_values for which the clustering does not yield any results for a purely random dataset but which detects cluster_formation with maximum resolution on the edge of randomness results estimation of the optimal parameter_values is achieved by evaluation of the results of the clustering procedure applied to randomized datasets in this case the optimal value of the fuzzifier follows common rules that depend only on the main properties of the dataset taking the dimension of the set and the number of objects as input values instead of evaluating the entire dataset allows us to propose a functional relationship determining the fuzzifier directly this result speaks strongly against using a predefined fuzzifier as typically done in many previous_studies validation indices are generally used for the estimation of the optimal_number a comparison shows that the minimum distance between the centroids provides results that are at least equivalent or better than those obtained by other computationally more expensive indices new experimental_techniques and protocols allow experiments with high_resolution and thus lead to the production of large_amounts of data in turn these datasets demand effective machinelearning techniques for extraction of information among them the recognition of patterns in noisy_data still remains a challenge the aim is to merge the outstanding ability of the human_brain to detect patterns in extremely noisy_data with the power of computer based automation cluster_analysis allows to group high_dimensional to whom correspondence should be addressed points that exhibit similar properties and so to discover a possible functional relationship within subsets of data nowadays cluster_analysis is in widespread use for the analysis of microarray_data to discover genes with similar expression changes recently large_datasets from quantitative_proteomics for instance measuring the peptide protein expression by means of mass_spectrometry became available for this data cluster_analysis is a powerful_tool to identify or to confirm pathways of interacting_proteins different approaches to the problem of cluster_analysis exist such as hierarchical_clustering k_means and self_organizing noise or background signals in collected data normally come from different sources such as intrinsic noise from variation within the sample and noise coming from the experimental equipment an appropriate method to find clusters in this kind of data is based on fuzzy_c due to its robustness to noise although this method has been modified and extended many times for an overview see the original procedure remains the most commonly used to date in contrast to k_means the fuzzy_c procedure involves an additional parameter generally called the fuzzifier a data point e g a gene or protein from now on called an object is not directly assigned to a cluster but is allowed to obtain fuzzy memberships to all clusters this makes it possible to decrease the effect of data_objects that do not belong to one particular cluster for example objects located between overlapping clusters or objects resulting from background_noise these objects by having rather distributed membership values now have a low influence in the calculation of the cluster center positions hence with the introduction of this new parameter the cluster_analysis becomes much more efficient in dealing with noisy_data the value of the fuzzifier defines the maximum fuzziness or noise in the dataset whereas the k_means procedure always finds clusters independently on the extent of noise in the data the fuzzy method allows first to adapt the method to the present amount of noise and second to avoid erroneous detection of clusters generated by random_patterns therefore the challenge consists in determining an appropriate value of the fuzzifier to our knowledge only few methods exist to determine an optimal value of the fuzzifier in the fuzzifier is obtained with an empirical method calculating the coefficient of variation of a function of the distances between all objects of the entire dataset another approach searches for a minimalpage 
