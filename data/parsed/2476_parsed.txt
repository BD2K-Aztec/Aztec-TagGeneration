informed and automated k_mer size_selection for genome_assembly motivation genome_assembly tools based on the de_bruijn framework rely on a parameter k which represents a trade_off between several competing effects that are difficult to quantify there is currently a lack of tools that would automatically estimate the best k to use and or quickly generate histograms of k_mer abundances that would allow the user to make an informed decision results we develop a fast and accurate sampling method that constructs approximate abundance histograms with several orders_of performance improvement over traditional_methods we then present a fast heuristic that uses the generated abundance histo grams for putative k values to estimate the best possible value of k we test the effectiveness of our tool using diverse sequencing data_sets and find that its choice of k leads to some of the best assemblies availability our tool kmergenie is freely_available at http kmergenie genome_assembly continues to be a fundamental aspect of highthroughput sequencing_data analysis in the years since the first methods were developed there have been numerous improvements and the field is now rich with tools that provide biologists several options many of these tools are based on the de_bruijn framework where reads are chopped up into k_mers substrings of length k the de_bruijn is constructed with nodes being the k_mers and the edges being the k_mers present in the reads broadly speaking an assembler constructs the graph performs various graph simplification steps and outputs non branching paths as contigscontiguous regions that the assembler predicts are in the genome recently there have been several meta_analyses of assemblers that have pointed to systematic shortcomings of current methods the assemblathon competitions demonstrated that assembling a dataset still requires significant expert intervention one issue is many assemblers lack of robustness with respect to the parameters and the lack of any systematic approach to choosing the parameters in de_bruijn based assemblers the most significant parameter is k which determines the size of the k_mers into which reads are chopped up repeats longer than k nucleotides can tangle the graph and break up contigs thus a large value of k is desired on the other hand the longer the k the higher the chances that a k_mer will have an error in it therefore making k too large decreases the number of correct k_mers present in the data another effect is that when two reads overlap by less than k characters they do not share a vertex in the graph and thus create a coverage gap that breaks up a contig therefore the choice of k represents a trade_off between several effects because some of these trade_offs have been difficult to mathematically quantify there has not been an explicit formula for choosing k taking_into all these effects it is possible to calculate some bounds based on estimated genome_size and coverage e g by applying landerwaterman statistics however such estimates do not usually take into account the impact of repetitiveness of the genome heterozygosity_rate or read error_rate in practice k is often chosen based on previous_experience with similar datasets more thorough approaches compare assemblies obtained from different k values however they are time consuming as a single assembly can take days for mammalian size genomes a more informed initial choice for k can be made by building abundance histograms for putative values of k and comparing them the abundance histogram shows the distribution of k_mer abundances the number of occurrences in the data for a single k value such histograms can provide an expert with valuable information for choosing k however the time to construct such a histogram can take up to a day for just a single value of k marcais our contribution in this article is fold first we propose an accurate sampling method that constructs approximate abundance histograms with an order of magnitude speed improvement compared with traditional tools based on k_mer our method allows an expert user to make an informed decision by quickly generating abundance histograms for many k values and analyzing the results either visually or statistically our second contribution is a fast heuristic_method for selecting the best possible value of k based on the generated abundance histograms for many values of k the heuristic is based on the intuition that the best choice of k is the one that provides the most distinct non erroneous genomic k_mers to to whom correspondence should be addressed the author published_by all_rights for permissions please_e journals permissions_oup com the assembler our method can be integrated into assembly pipelines so that the choice of k is made automatically without user intervention we implement our methods in a publicly_available tool called kmergenie we test kmergenies effectiveness using three sequencing_datasets from a diverse set of genomes staphylococcus_aureus human_chromosome and bombus impatiens first we find that our approximation of the histogram is close to the exact histogram and easily separable from histograms for nearby values of k next we judge the accuracy of kmergenies choice of k by assembling the data for numerous k values and comparing the quality of the assemblies we find that kmergenies choice leads to the best assemblies of s aureus and b impatiens as measured by the contig length ng and to a good assembly of chr that represents a compromise between contig length and the number of errors although we have presented a method that attempts to find the best value of k for assembly we would like to note several limitations inherent in this approach first of all kmergenie may in some instances report that a best value of k cannot be found because it is not able to fit the generative_model to the abundance histograms this could simply be due to a limitation of our model or the optimization_algorithm but it could also be due to a difficulty inherent in the data for example data from single_cell experiments have uneven coverage violating a basic assumption of our model similarly data from metagenomic or rna_seq experiments do not come from a single_genome and their histograms have different properties in these cases it has been observed that there is often no single best k and that combining the assemblies from different k can be beneficial although kmergenie does not suggest a k in these cases it provides the abundance histograms that can be useful in determining the best assembly approach we have demonstrated our approach to be useful for de_bruijn based assemblers other assemblers such as sga follow the alternate string overlap_graph approach in which reads are not chopped up into k_mers these assemblers do not have the k parameter but do have an alternate parameter for the minimum_length of a non spurious overlap although a formal relation between these parameters has not been established they play a similar role in affecting the assembly results we therefore consider it an interesting direction for future_research to extend our approach to select the best overlap parameter for string overlap_graph assemblers finally we wish to emphasize that our benchmark did not attempt to produce the best possible assembly for each organism rather we are restricting ourselves to what a typical user might do with the data run single assembly software on un corrected data and possibly try several k_mer values to get the best possible assembly one would have to explore the cartesian product of several assemblers several read_error methods and several k_mer values which is often a prohibitively long task notably because we did not select the best error correction_method for each assembler organism the assemblies reported inhave lower contig n and also scaffold n data not shown than those reported in the gage benchmark there are improvements that we have left for future work the first direction is to determine how our method could be applied to non uniform coverage although a single best k value for relation of the number of distinct genomic k_mers to assembly_quality we show the results for the three datasets s aureus left chr middle and b impatiens right we plot the number of distinct genomic k_mers predicted from the histogram from our model the number present in the reference and the number present in the assembly we also show the ng of the assembly metagenome and transcriptome_assembly is unlikely to exist perhaps useful information could be extracted from the histograms constructed on such datasets the second direction is to explore ways of improving the accuracy of our statistical_model potentially leading to more accurate estimates of the number of distinct genomic k_mers 
