sans high_throughput retrieval of protein_sequences allowing mismatches motivation the genomic era in molecular_biology has brought on a rapidly widening gap between the amount of sequence_data and first hand experimental_characterization of proteins fortunately the theory of evolution provides a simple solution functional and structural_information can be transferred between homologous_proteins sequence_similarity searching followed by k nearest_neighbor classification is the most widely used tool to predict the function or structure of anonymous gene_products that come out of genome_sequencing results we present a novel word filter suffix_array neighborhood search sans to identify protein sequence_similarities in the range of identity with sensitivity comparable to blast and times the speed of usearch in contrast to these previous_approaches the complexity of the search is proportional only to the length of the query_sequence and independent of database size enabling fast searching and functional_annotation into the future despite rapidly_expanding databases availability_and the software is freely_available to non commercial users from our website_http ekhidna biocenter helsinki fi downloads sans contact liisa holm helsinki fi k nearest_neighbor classifiers are used widely and successfully to infer the function of newly_sequenced proteins neighbors are commonly determined by sequence comparison protein sequence_databases have grown so large that retrieving the neighbors of a query_sequence is prohibitive in the exact mode and takes min using popular heuristics with several thousand proteins in each new genome blasting consumes considerable resources in contemporary bioinformatics_research strategies for database_searching fall into five categories all versus all pairwise_comparisons using exact alignment e g ssearch or generating fast approximate alignments e g fasta comparison against a representative subset rather than all proteins e g comparison against a library of profile models of protein_families e g to whom correspondence should be addressed the speed of the methods increases toward the bottom of the list usearch is orders_of than blast and we report here a novel method which is times_faster than usearch the fast methods are based on word filters conserved amino_acids are often clumped in homologous protein_sequences so that there is a good probability of finding identical k_mers many practical tools combine word filters with explicit alignment of a filtered subset of the database very short words obviously occur by chance in unrelated sequences unique occurrences are expected when k is greater than the size of the database k being the length of the word on the other hand the sensitivity of a word filter decreases with longer words spaced k l seeds are a special class of word filters with length l and the selectivity of a k_mer we show experimentally that k is the sweet spot with respect to the current uniprot database and that sensitivity selectivity drop either side of this value the choice of k is thus critical for the performance of a word filter in this work we test a novel idea which dynamically adjusts word size it is based on suffixes substrings starting at position i in a sequence and continuing to the terminator a suffix_array is a data_structure which orders the suffixes of a text protein_sequence database in lexicographic order neighboring suffixes share the longest common prefixes the suffix_array is a onedimensional representation of sequence_space our idea is to select a window around a query suffix from the suffix_array to identify neighbors the suffix_array neighborhood has a constant size in contrast neighborhoods defined in terms of k_mer word vectors grow larger as the database grows larger suffix_arrays are used a lot in the analysis of nucleotide_sequences short_read contig assembly genome alignment est clustering e g the analysis of protein_sequences differs from that of nucleotide_sequences in that the range of interesting similarities extends to much higher levels of mismatches suffix_trees arrays and related indices have been used previously to organize search and align protein_sequences but they have not supplanted popular tools like blast this article is organized as follows we present comprehensive benchmark tests using real_world data from metagenome samples million proteins a bacterial_genome proteins and the uniprot database million proteins we compare blast usearch and many variants of word filters we characterize a classification of approaches used by representative application programs for protein_sequence retrieval this work focuses on word filters based on suffix_arrays or k_mer related approaches or data_structures are shown in gray and not expanded sans is simple and fast but has a limited application range other fast programs calculate explicit alignments for a filtered subset of database proteins ssearch calculates the optimal alignment between the query and all database proteins the feasible regime for word filters and report the fastest known mapping tool for proteins finally we discuss potential applications in function inference 
