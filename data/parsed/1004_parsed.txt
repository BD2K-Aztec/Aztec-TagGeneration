phylogenetics clockstar choosing the number of relaxed_clock in molecular phylogenetic_analysis relaxed molecular clocks allow the phylogenetic estimation of evolutionary timescales even when substitution_rates vary among branches in analyses of large multigene datasets it is often appropriate to use multiple relaxed_clock to accommodate differing patterns of rate variation among genes we present clockstar a method for selecting the number of relaxed clocks for multigene datasets estimating evolutionary timescales is a common aim of molecular phylogenetic_analysis this can be done using methods based on the molecular_clock hypothesis which postulates a constancy of substitution_rates among lineages however most datasets exhibit significant levels of rate variation among lineages this can be caused by differences in population_size mutation_rate or the strength of natural_selection the molecular_clock can be relaxed to take into account such rate variation usually by allowing a distinct substitution_rate along each branch in the phylogenetic_tree most relaxedclock models have been implemented in bayesian frameworks it is now commonplace to estimate evolutionary timescales using multigene datasets if the evolutionary_process has been heterogeneous among subsets of the data e g among different genes and codon positions a distinct evolutionary model is needed for each data subset this presents a challenge for model_selection because of the large number of ways in which substitution models and relaxed_clock can be assigned to the subsets of the data determining the best way to assign relaxed_clock to different subsets of the data is typically done using bayes_factors e g performing large_numbers of bayes_factor comparisons is often infeasible especially using computationally_intensive methods such as stepping_stone sampling we present clockstar a method for selecting the optimal number of relaxed clocks for partitioned datasets it combines a tree distance_metric with a clustering_algorithm our treedistance metric compares trees based on their pattern of among_lineage consider a simple example in which we have two data subsets perhaps representing independent loci phylogenetic branch_lengths are estimated separately for each data subset our metric quantifies the differences in branchspecific rates between the two trees if the score for the metric is low the two trees have similar patterns of among_lineage and they can share a relaxed clock model based on the pairwise scores for this metric a discrete clustering_algorithm can be used to infer the optimal partitioning strategy for relaxedclock models when there are multiple data subsets the user provides sequence_alignments of the individual data subsets and a single estimate of the phylogeny without branch_lengths clockstar estimates the optimal number of partitions representing the smallest_number of relaxed_clock that are needed to describe the data clockstar also assigns the data subsets to these partitions the output can be used to specify the configuration of relaxed_clock when performing a molecular_dating analysis in software such as beast clockstar is implemented in r r development core we tested the performance of clockstar using datasets generated under known conditions we considered two simulation scenarios and conducted replicates for each scenario sequence_evolution was simulated using the jukescantor model along phylogenetic_trees with tips to produce alignments of nt for the first simulation scenario we simulated all of the data according to a single relaxed clock we used a tree with branch_lengths sampled from the absolute_values of a normal distribution with mean and a standard_deviation of in this scenario we expected a single group of genes k in the second simulation scenario we simulated sequence_evolution according to one of three different relaxed clocks this was done by simulating along three trees which had identical topologies but had branch_lengths sampled independently from the distribution described for the first simulation we generated three sequence_alignments for each of the first two trees and four sequence_alignments for the third tree for the simulation of each alignment we included noise in the branch_lengths of the form m to represent stochastic variation among alignments in this scenario we expected three groups of genes k clockstar identified the correct partitioning scheme for the datasets simulated under each scenario supplementary figs s a and s a for the first scenario and supplementary figs s b and s b for the second scenario the analysis of the simulated_data with three different relaxed clocks took min to run on a mac g with a ghz quad core intel_xeon processor and gb of ram we have included an option to parallelize the steps for substitution model_selection and the estimation of sbsd min the parallelized version took min using four cores on the same machine to illustrate the use of clockstar on empirical data we analyzed multigene datasets from pinnipeds nuclear and mitochondrial_genes and human_papillomavirus type eight genes supplementary_information for the pinniped data we found that the optimal partitioning strategy consisted of two groups one for the nuclear and one for the mitochondrial_genes for the human_papillomavirus data the optimal partitioning scheme involved a single clock model for all genes supplementary figs s and s by analyzing the relative rate variation among lineages clockstar provides a fast alternative to conducting extensive comparisons using bayesian and likelihood methods the method assumes that the data subsets share the same tree_topology however we do not consider this to be a limitation of the method because data subsets with different topologies should not be concatenated instead they should be assigned separate tree_models which would necessitate the use of separate clock models one important consideration is that the method determines the optimal partitioning strategy but it does not test competing molecular_clock models this requires rigorous statistical_testing with other methods such as bayes_factors a potential alternative although more computationally_intensive is reversible_jump which has been implemented for substitution model_selection but not for molecular_clock models we believe that our method will be particularly useful for improving molecular_clock analyses of phylogenomic data which are often hindered by their computational requirements 
