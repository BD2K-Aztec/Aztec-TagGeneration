jamm a peak finder for joint analysis of ngs replicates motivation although peak finding in next_generation ngs_datasets has been addressed extensively there is no consensus on how to analyze and process biological_replicates furthermore most peak_finders do not focus on accurate determination of enrichment site widths and are not widely_applicable to different types of datasets results we developed jamm joint analysis of ngs replicates via mixture_model clustering a peak finder that can integrate_information from biological_replicates determine enrichment site widths accurately and resolve neighboring narrow peaks jamm is a universal peak finder that is applicable to different types of datasets we show that jamm is among the best performing peak_finders in terms of site detection_accuracy and in terms of accurate determination of enrichment sites widths in addition jamms replicate integration improves peak spatial_resolution sorting and peak finding accuracy availability_and jamm is available for free and can run on linux machines through the command linea common task in genomics research is detecting enriched_sites after alignment of next_generation ngs_reads which involves separating the genome into regions of high enrichment i e peaks or clusters or binding_sites and regions of low enrichment most peak and cluster finding programs are developed with a specific experimental_protocol or dataset type in mind therefore it is usually difficult to apply the same analysis_pipeline uniformly across all datasets in a given project recently there were attempts to develop universal peak_finders by defining the problem as that of classical signal_detection the main advantage of this approach is that it allows for uniform data analysis via theoretically proven optimal signal_detection however it does not take into account that enrichment sites are often not expected to have the same shape or signal properties even if in the same dataset for example dnase_i hypersensitive regions are expected to have different widths and signal_to snr therefore there is a need for an approach that would not only focus on optimal detection of enrichment sites but would also be able to adapt to enrichment sites with different signal properties and to define their boundaries accurately furthermore while others focus on integration of multiple datasets to define co occurrence or differential enrichment there is no consensus on biological_replicates integration to find accurate consensus peaks one common approach is to determine enriched_sites on each replicate separately and then combine the results via union or intersection another common approach is to pool aligned_reads from all replicates available and then detect enriched_sites on the pooled alignments seefor an example taking the intersect or union of separately detected sites mandates rescoring the peaks and leads to inaccurate enriched_sites widths pooling alignments before site detection obscures the differential spatial and intensity information in the replicates as biological replicate experiments are not expected to be exactly reproducible there is a need to develop a method for replicate integration that takes_advantage of the differential information in the individual replicates to find accurate consensus peaks in this article we introduce jamm joint analysis of ngs replicates via mixture_model clustering a universal peak finder that can integrate_information from multiple replicates to find consensus peaks determine accurate peak widths and resolve neighboring narrow peaks we demonstrate jamm using chip_seq including transcription_factor chip_seq punctate histone_modification chip_seq and broad histone_modification chip_seq as well as dnase_seq we compare several programs that focus on different aspects of the peak finding problem macs models read_counts using a local poisson_distribution peakranger focuses on detecting neighboring narrow peaks at high_resolution peakzilla is designed for uniform punctate transcription_factor bcp develops explicit formulas to model read_counts ccat detects broad enrichment patterns with low snr and dfilter is a universal peak finder based on optimal signal_detection we demonstrate that jamm is widely_applicable to different types of datasets can define accurate peak boundaries and that jamms replicate integration improves peak finding resolution and accuracy to whom correspondence should be addressed a desirable property in universal peak_finders is detecting and correctly determining the widths of enrichment sites with different signal properties jamm fits a gaussian_mixture for every local enriched window separately and only fixes the structure of the covariance_matrix see section and supplementary text therefore jamm can accurately determine widths of enrichment sites that have different signal properties even if in the same dataset some peak_finders start with learning an expected peak shape making it more difficult to detect enrichment sites with varying widths or to assign their boundaries accurately other peak_finders adapt specialized subroutines for refining peak widths after peak finding is complete in some cases this approach may be able to assign accurate peak boundaries but when the original peak represents several closely_spaced sites this approach may result in choosing one site and missing the others see supplementaryinfor an example we showed that jamms local clustering also avoids this caveat and can correctly resolve neighboring punctate sites similar to programs specifically_designed with this task in mind like peakranger jamm is a universal peak finder that can analyze different types of datasets with little change if any to the underlying method this demonstrates that finding enriched_sites in readdensitybased ngs_datasets is essentially the same task regardless of the sites signal properties therefore we propose that more attention could be directed toward developing universal peak finding solutions refining preprocessing of read_counts to correct for different biases and toward developing solutions for biological_replicates integration pooling reads from biological_replicates before peak finding is part of the encode consortium recommended guidelines however when peaks are called on pooled replicates the differential intensities and differential spatial coverage of the replicates are obscured jamm addresses replicate integration by looking at biological_replicates as not being exactly reproducible and attempts to model their variability using information about their covariance in local enriched windows using various accuracy benchmarks we demonstrated that this approach results in better peak finding accuracy over read pooling for peak scoring on replicates jamm uses the geometric average of the replicates peak signal we demonstrated that this approach improves peak sorting additionally we also show that peak finding on the geometric mean of separately normalized replicate signal profiles can improve peak finding accuracy over read pooling similarly to jamm i see jammg in supplementary text section and supplementary geometric averaging of normalized signal profiles can potentially be implemented as a preprocessing_step irrespective of the specific peak finding method therefore although it may not be an optimal_solution with increasing replicates variability it is a plausible approach that other peak_finders could easily implement for biological_replicates analysis without requiring a multivariate clustering framework accuracy benchmarks are independent of read_count densities as opposed to peaks per cluster and peak width accuracy however motif content benchmarks do not represent a definite gold_standard because of our incomplete understanding of proteindna_interactions and potential_biases in the benchmarking methods we attempted to remedy this by using two different motifscanning algorithms and by including a manually_curated set of peak calls as an additional benchmark but manual_curation may also be biased because the manually_curated set represents only a small fraction of the peaks present in a dataset peaks for max for nrsf and for srf and because some peak_finders like peakzilla use peak_detection methods similar to curation criteria many peak_finders ignore being able to report a larger number of peaks and or ignore providing appropriate peak scores both required criteria for assessing replicate reproducibility via idr analysis appropriate peak scores would have few or no ties and represent the confidence in the peak accurately based on its read density and how it compares with background or biological_control jamm can typically determine a large number of peaks and it also provides robust peak scores with few score ties if any this in addition to its accurate peak width determination makes jamm potentially more applicable for different types of downstream_analyses that rely on ranked peak lists although a multivariate clustering framework can potentially be used for differential peak finding jamm can not find differential peaks across multiple conditions in its current_implementation also jamm does not take into account mappability gc_content and copy_number cnvs cnvs are especially relevant for cancer_cell while gc_content bias is a known problem in high_throughput libraries probably due to pcr_amplification we could not detect cnv bias in jamms peak calls in regions of loss when compared with a peak finder that corrects for cnvs but we noticed a possible increase in the proportion of peaks called by jamm in regions of gain see supplementary explicit implementation of gc_content bias and cnv correction could improve peak finding accuracy and we plan to incorporate appropriate correction subroutines in the near future finally jamm is typically slower than other peak_finders with less complicated models taking h on average to analyze a typical human encode chip_seq dataset when run using a single processor 
