fastepistasis a high_performance solution for quantitative_trait epistasis motivation genome_wide have become widely used tools to study effects of genetic_variants on complex_diseases while it is of great interest to extend existing analysis methods by considering interaction effects between pairs of loci the large number of possible tests presents a significant computational challenge the number of computations is further multiplied in the study of gene_expression quantitative_trait mapping in which tests are performed for thousands of gene phenotypes simultaneously results we present fastepistasis an efficient parallel solution extending the plink epistasis module designed to test for epistasis effects when analyzing continuous phenotypes our results show that the algorithm scales with the number of processors and offers a reduction in computation time when several phenotypes are analyzed simultaneously fastepistasis is capable of testing the association of a continuous trait with all single_nucleotide snp_pairs from snps totaling billion tests in a population of individuals in or days using or processors availability fastepistasis is open_source and available free of charge only for non commercial users from http www vital it ch software fastepistasisgenome wide association studies gwass have been instrumental in identifying genetic_variants associated with complex_traits such as human disease or gene_expression phenotypes while many gwas results have been reported analyzing single_nucleotide snps one at a time only recently have studies begun to extend analysis methods to consider interaction effects between pairs of loci although interactions may yield new insight into the effect of genetics on complex_traits a major_challenge to studying interactions is due to the large number of possible tests which need to be considered examining all pairwise interactions between two snp loci using a snp chip to whom correspondence should be addressed equates to performing billion tests additionally carrying out permutation_tests or studying epistasis in the context of quantitative_trait mapping of gene_expression in which genetic_variants are tested for association with each of thousands of phenotypes simultaneously further increases the number of epistasis tests efficient software is needed to carry out the large number of tests of interaction using quantitative responses although several software programs have been proposed to search for interactions in casecontrol data few have been optimized to handle continuous responses in this article we describe fastepistasis an optimized software_suite designed for quantitative responses which extends plink epistasis functionality fastepistasis uses a parallel algorithm that is capable of computing tests for all pairs of genome_wide snps and efficiently handles tests given multiple_phenotypes we compared the performance of fastepistasis and plink epistasis tests for several sets of snp_pairs using a single core to enablepage in the event that only snp pair results below a p value threshold are needed requiring a negligible time for postcomputation fastepistasis computes about epistasis tests per second times_faster than plink also see below for output size effect in multiple phenotype analysis however the gain in performance depends on the number of individuals in the population as shown_inand supplementary with the exception of not a number plink output all fastepistasis results agree perfectly with plink the speed of fastepistasis scales linearly with the number of processors at asymptotical efficiency using either smp or mpi architecture see supplementary at this rate the computational time required to test all pairs of snps totaling billion tests using a population of individuals is about or days using or mpi bound processors fastepistasis is capable of analyzing several different phenotypes simultaneously using the same genotypes by performing the qr decomposition of the covariate matrix once and applying the result to several phenotypes the total number of computations is reduced compared to carrying out the computations separately for each phenotype although we observe a significant speed up with multiple_phenotypes the performance reaches a peak and then collapses and becomes a penalty as the number of phenotypes grows supplementary the problem occurs during the core computation phase and is due to the size of the results the processors are able to compute the test_statistics faster than the results can be buffered and transferred to the hard drive completely omitting to output the results removes the performance collapse the reduction in computational time analyzing several phenotypes simultaneously depends on several factors including the speed of the epistasis tests which in turn depends on the number of individuals and the number of results to be output for example using processors a population_size of mkk individuals phenotypes and outputting all epistasis results the computations are times_faster than analyzing each phenotype separately whereas outputting results for p of tests the computations are times_faster therefore restricting the output to p values below a relatively small threshold or increasing storage throughput using a striped disk raid array for example can decrease computational_demands when analyzing multiple_phenotypes epistasis is fundamental to understanding the structure and function of genetic_pathways recent_studies have reported epistatic_effects that confer_susceptibility to common diseases genetic_interactions may also be able to explain a larger proportion of phenotypic_variance for common diseases or related traits or reveal information about gene function fastepistasis is capable of computing fast tests of epistasis for quantitative phenotypes enabling researchers to study interaction effects of pairs of genetic_loci 
