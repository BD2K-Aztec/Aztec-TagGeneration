systems_biology sbrml a markup_language for associating systems_biology data with models_motivation research in systems_biology is carried_out through a combination of experiments and models several data standards have been adopted for representing models systems_biology and various types of relevant experimental_data such as fuge and those of the proteomics standards initiative however until now there has been no standard way to associate a model and its entities to the corresponding datasets or vice_versa such a standard would provide a means to represent computational simulation_results as well as to frame experimental_data in the context of a particular model target applications include model driven data analysis parameter_estimation and sharing and archiving model_simulations results we propose the systems_biology results markup_language sbrml an xml_based language that associates a model with several datasets each dataset is represented as a series of values associated with model variables and their corresponding parameter_values sbrml provides a flexible way of indexing the results to model parameter_values which supports both spreadsheet like data and multidimensional data cubes we present and discuss several examples of sbrml usage in applications such as enzyme_kinetics microarray_gene and various types of simulation_results availability_and the xml schema file for sbrml is available at http www comp sys bio org sbrml under the academic free license afl v systems_biology is typically carried_out with a solid basis on explicit computational_models which are used to guide traditional experimentation as well as data analysis computational_models are at the core of the systems_biology methodology and therefore an important part of the infrastructure needed for practicing systems_biology to whom correspondence should be addressed the growing reliance on computational_models to support biological_research has given rise to several types of modelling software there are software_packages for creation and visualization of models for their analysis and simulation and also for analysing experimental_data in their context additionally there are several databases for sharing models within the community the most prominent standard is the systems_biology sbml which is an xml_based language for representing systems_biology models in a way that is largely independent from the means to simulate those models models represented in sbml are thus interpretable by a wide_range of software which can manipulate them in different ways simulate their dynamics through ordinary_differential stochastic_simulation algorithms petri_nets or other formalisms analyse their underlying stoichiometric properties fit their parameters to experimental_data explore their parameter_space by parameter scans or bifurcation analysis and many more computational applications the existence of a standard way to represent models has been a catalyst for the appearance of these diverse types of software since they have a common basis in sbml allowing researchers to share models and effectively use them with these software_tools another important standard in the area is miriam which is a set of guidelines to be followed when communicating models more specifically miriam provides a means of unequivocally identifying biological_molecules through the use of resource_description rdf and universal identifiers miriam also recommends that models should be encoded in a machine_readable format and that their authorship and terms of distribution should be specified explicitly while miriam does not prescribe which machine_readable format should be used to encode the model sbml is a convenient way to do so and the combination of these two standards has become a predominant way to specify self contained models the simulation experiment description markup_language sed ml is another xml_based standardization effort for describing computational simulation_experiments despite the increasing_popularity of sbml and miriam which has resulted in many models now being available in electronic form there is currently no standard way of communicating the actual results of the operations carried_out on such modelspage in this section we provide examples of sbrml usage which fall under two main types output from systems_biology modelling software and input to systems_biology data analysis software the first type includes essentially simulation_results while the second associates experimental_data with models these examples illustrate the breadth of applications that can be addressed by sbrml the examples also cover the two different ways of structuring data tuples and data hypercubes indicating the situations where each one is more appropriate it is often emphasized that one of the main characteristics of systems_biology is the combined use of experiments and models several standards already exist to express various aspects of systems_biology in computational terms such as functional_genomics experiment for functional_genomics data the sbml for network and kinetic_models or biopax biopax working group for pathways it is remarkable however that until now there have been no attempts at creating a standard way of computationally linking data with models if systems_biology is indeed to succeed as an integrative wet_and biology exercise there must be a standard way to create associations of data with models we see two major uses for this i expressing results of computational manipulations of models e g simulations and ii expressing experimental_results in the context of a model mathematical or otherwise we have used the copasi simulator to create the simulation_results here and since we are part of the development team of that software future versions will provide easy means to export results in sbrml but for this to be a successful exchange format insystems biology it is important that other simulators provide similar capabilities as well as other types of systems_biology application including data analysis workflows databases etc on the other hand it is also important that relevant applications be capable of reading and interpreting sbrml given that sbrml is too verbose for being readable by humans even very dedicated computational systems biologists we foresee the need for user_friendly sbrml readers such applications could format the data from sbrml in tables or data hypercubes or provide graphical displays of the data network_visualization software such as celldesigner cytoscape or ondex would seem to be particularly appropriate for interpreting and displaying the contents of sbrml files example illustrates a type of sbrml file that would benefit from being displayed in such applications data analysis software would also benefit from this format such as applications for parameter_estimation demonstrated with example in this context copasi would also benefit from being able to read sbrml for parameter_estimation as well as complementing sbml sbrml can also be seen to complement experimental_data standards such as fuge or mage ml experimental_data standards essentially describe samples the experimental and analytical processes applied to those samples and the results of those processes as such experimental_data standards describe how results are derived from an experimental process whereas sbrml indicates how results have been derived from an sbml model by page 
