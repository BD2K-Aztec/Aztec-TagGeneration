a de_novo metagenomic assembly program for shotgun dna_reads motivation a high_quality assembly of reads generated from shotgun_sequencing is a substantial step in metagenome projects although traditional assemblers have been employed in initial analysis of metagenomes they cannot surmount the challenges created by the features of metagenomic_data result we present a de_novo approach and its implementation named map metagenomic assembly program based on an improved overlap_layout olc strategy incorporated with several special algorithms map uses the mate_pair information resulting in being more applicable to shotgun dna_reads recommended as bp currently widely used in metagenome projects results of extensive tests on simulated_data show that map can be superior to both celera and phrap for typical longer_reads by sanger_sequencing as well as has an evident advantage over celera newbler and the newest genovo for typical shorter reads by sequencing availability_and the source_code of map is distributed as open_source under the gnu gpl license the map program and all simulated_datasets can be freely_available atprocessing of shotgun metagenomic sequence_data usually does not have a fixed end_point to recover one or more complete_genomes as for isolated microbial_genomes sometimes with the exception of finishable dominant populations nevertheless with the proliferation of metagenomic_projects the assembly tools which aim to combine sequence_reads into contiguous stretches of dna called contigs are still expected to play_an in sequence processing due to more valuable genomic content they can provide recently the comparative assembly approach such as amos comparative assembler which uses a reference_genome or closely_related to align_reads to whom correspondence should be addressed was applied to facilitate assembly of short_reads however because of the potential_bias caused by phylogenetic complexity and diversity the de_novo methods are still regarded as irreplaceable tools for accurately assembling the novel genomic_sequences that broadly exist in the metagenomic sequencing_data as the high_throughput by the nextgeneration sequencing_platforms such as illumina http www illumina com solid http www appliedbiosystems com and helicos http www helicosbio com are available in metagenomic_projects many efforts have been devoted to develop assembly tools such as ssake velvet and euler sr euler usr however these methods are not targeting the metagenome sequencing moreover compared with sanger and sequencing the current limitation of shorter reads bp typically bp and higher errors by the new sequencing_platforms does not allow a significant utility for metagenomic analyses for the difficulty in phylogenetic study or gene function inference in fact shorter reads technologies have not been widely used in metagenome sequencing and meanwhile the sequencing_technologies producing longer_reads such as sanger usually bp and sequencing usually bp are still the overwhelming recommendation and thus remain the major source of metagenomic sequence_data therefore it is never trivial to continue to emphasize the importance of longer_reads to metagenomic analyses clearly including the reads assembly tool designed specifically to date for such longer shotgun reads in many metagenome projects the assembly still relies largely on the existing_tools demonstrating high performance to manage for single_genome such as phrap http www phrap org celera_assembler and pcap however the assembly of a community of genomes is different from the assembly of a single_genome in the assembly of single genomes the fundamental problem is the presence of repeated dna_fragments in the target_sequence that often leads to assembly errors however metagenomic assembly has its particular difficulties due to two challenges the genomic repeats may originate from either the same genome or the different genomes and the inhomogeneous coverage distribution and the low_abundance of organisms provide limited information to handle repeats unfortunately the design for the task of single genome_assembly prevents the traditional de_novo softwarewe compare the performance of map to celera_assembler and phrap http www phrap org on bp simulated_datasets whereas compare to celera_assembler and newbler on bp simulated_datasets celera_assembler and phrap are commonly used on sanger reads and represent two styles of approaches olc approach and greedy approach newbler is the widely used software for reads assembly distributed by life_sciences the celera_assembler which first targeted sanger reads distributed a new version for reads assembly and claimed to outperform newbler newbler also uses olc approach parameters were chosen to reduce the assembly chimerism specially for error_free test_sets the minimal overlap identities for map celera and newbler were set as and for error sequencing test_sets the minimal overlap identities were set as detailed parameter_settings are available in supplementary_materials we conducted the comparison of different assemblers on simulated_data by assessing the quality of contigs produced by them five independent quantities defined to illustrate the assembly performance are summarized in tables and specifically we used the proportion of the reads assembled into contigs the number of contigs and their average length i e contig size to evaluate the assembly capacity the two measurements are used to evaluate the assembly accuracies the proportion of chimeric contigs in total contigs and the proportion of the so_called divergent contigs in total contigs following the studies in andare those that have identity t t for error_free type datasets and t for sequencing_error type data with respect to the reference_genomes chimeric contigs are defined as those which comprised reads from different organisms a divergent contig is defined as having an identity t t for error_free data and t for sequencing_error data comparing against the original reference_genomes from which the metagenomic_reads are sampled the results of the first three quantities of assembly capacity namely the percentage of reads assembled into contigs the number of contigs and their average length are presented as follows for the bp datasets the comparison of map celera and phrap is presented in in general the three assemblers have a similar level in terms of the assembly capacity although phrap shows a little more reads assembled and more contigs than both map and celera most often it generates shorter contigs than other two assemblers do in fact the assembly capacity of each assembler is locked in a zero sum game any more for the number of contigs usually means a shorter average length of contigs for the bp datasets the results of map celera and newbler are listed in on the error_free datasets map and celera have a similar performance on the assembly capacity while on the sequencing_error type datasets map outperforms celera with higher proportion of assembled reads larger contig number and longer contig size on all bp datasets newbler assembles many fewer reads in contigs and generates fewer contigs compared with both map and celera for example in the hc error_free data newbler only assembled of reads into contigs whereas map assembled of reads when assembling the mc data newler increases the assembled reads to however still by map in the lc datasets of both error_free and sequencing_error type newbler has the longest contig average length among three assemblers however when we calculate the larger contigs by each assembler we found that map has more large contigs than newbler for example on the mc data of error_free type map generates large contigs with length longer than bp whereas newbler generates large contigs see supplementary this indicates that the shorter contig average length of map than newbler is just caused by the much more short contigs generated by map therefore in conclusion map demonstrates its high assembly capacity to same level of celera and phrap on the bp datasets whereas to a great extent outperforms both celera and newbler on the bp datasets misassembly has certainly negative effects on the further analysis phases such as gene calling or translation_initiation signals finding thus for a metagenomic assembler there is great demand to improve the quality of assembly however the existing well known assemblers applied in metagenome projects were designed originally for individual_genomes which generate enormous misassembly especially chimeric contigs when processing metagenomic_reads chimeric contigs are composed of reads from different species and thus become a critical measure of assembler utility in the current test on simulated_data the proportion of chimeric contigs in total contigs assembled by different assemblers is given tables and for all six bp datasets map demonstrates overall lower chimeric contig ratio than both celera and phrap do whereas phrap has much more chimeric contigscompared with other assemblers several distinct_features of map algorithm should be pointed_out first map does not refer to any other information such as genome length or sequencing_coverage that is often used in the assemblers targeting the isolated genomes because such information is clearly not applicable to the situation of metagenomic assembly what is more important is that map employs mate paired information different from other assemblers did for example the celera_assembler used mate paired information in the scaffold constructing the celera_assembler later developed a new pipeline cabog which finds the best overlap_graph in the unitigger module in this algorithm mate_pairs are used to correct the misassemblies by breaking the unitigs that are found violated with the mate_pair constrains pcap used mate paired information to correct contigs and to link contigs into scaffolds different from these assemblers map uses mate_pairs as a core measure to construct contigs when repeats hamper the assembly based on mate paired information map designs a series of procedures to implement the layout stage with respect to the olc strategy map uses the strategy similar to celera thus in many cases map generates contigs in similar size as celera does however the former uses mate_pair information to prevent error contigs from being formed whereas the latter uses the information to correct and break wrong contigs these two strategies are quite distinct but both can avoid errors and in some cases have the similar results however the map strategy is more reasonable to avoid error when compared with celera for example lacking sufficient mate_pair information celera was not able to detect the potential_errors which generated through other operation such as best overlap_graph strategy in cabog by its method whereas map will sacrifice the size but avoid potential_errors by leaving alone the conservative unitigs in addition map does not include the scaffolder module as bambus does bambus uses the scaffold graph to report the regions of variation in closely_related strains and to distinguish between them the analysis of the strain variation among metagenomes could be carried_out by a stand alone software such as strainer we have demonstrated that our strategy can achieve_higher assembly accuracy in terms of both reads and nucleotide sites while maintaining high assembly capacity however the application of map algorithm is sensitive to several factors such as the mate_pair length and sequence_coverage which are the state of the art challenges in metagenomic assembly as the map algorithm finds mate_pair paths in the overlap_graph too long length of the mate_pairs may lead to too many nodes traversed between them and complicating the process of finding mate_pair paths in addition low sequence_coverage may greatly reduce the number of overlaps making the overlap_graph being sparse thus a deeper sequencing may increase the efficiency of map especially in the short_read it should be noted that without mate_pair information map assembles the reads into unitigs functioning similar to the assembler minimus it is noted that unlike the metagenome projects sequencing on sanger platform in early years recently_emerged metagenome projects using sequencing_platform were sometimes inclined not to take the mate_pair approach to sequence the dna_fragments mainly due to the lower_costs however robust mate_pair protocols are increasingly regarded as essential to new sequencing_technologies for their wider application in de_novo sequencing especially to metagenomic assembly process the study in this article demonstrates that using mate_pair information to resolve the repeat in the overlap_graph is the promising method for metagenomic assembly moreover our attempt in this article provides valuable support for the mate_pair approach in the trade_off in sequencing protocol selection for sequencing_platform or other next generate sequencing_platform in metagenome projects as we have clarified our assembly method are designed to address the issue of longer metagenomic_reads recommended as bp from such as sanger and sequencing_technologies the strongest reason for this interest is that longer_reads are 
