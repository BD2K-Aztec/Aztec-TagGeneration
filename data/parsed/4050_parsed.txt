roary rapid large_scale prokaryote pan genome_analysis a typical prokaryote population sequencing study can now consist of hundreds_or of isolates interrogating these datasets can provide detailed insights into the genetic_structure of prokaryotic_genomes we introduce roary a tool that rapidly builds large_scale pan genomes identifying the core and accessory genes roary makes construction of the pan_genome of thousands of prokaryote samples possible on a standard desktop without compromising on the accuracy of results using a single_cpu roary can produce a pan_genome consisting of isolates in hours using gb of ram with further speedups possible using multiple processors availability_and roary is implemented in perl and is freely_available under an open_source gplv_license from http sanger pathogens github io roarythe term microbial pan_genome was first used in to describe the union of genes shared by genomes of interest since then availability of microbial sequencing_data has grown exponentially aligning wholegenome sequenced isolates to a single reference_genome can fail to incorporate non reference_sequences by using de_novo assemblies non reference_sequences can also be analyzed microbial organisms can rapidly acquire genes from other organisms that can increase virulence or promote antimicrobial drug_resistance gaining a better picture of the conserved genes of an organism and the accessory genome can lead to a better understanding of key_processes such as selection and evolution the construction of a pan_genome is np_hard with additional difficulties from real_data due to contamination fragmented assemblies and poor annotation therefore any approach must employ heuristics to produce a pan_genome reviewed in the most complete standalone pan_genome tools are panoct which uses a conserved gene neighborhood in addition to homology to accurately place proteins into orthologous clusters ls bsr which uses a preclustering step before running blast to rapidly assign genes to families and pgap which takes annotated assemblies performs an all against all blast clusters the results and produces a pan_genome panoct and pgap require an all against all comparison using blast with the running time growing approximately quadratically with the size of input_data and are computationally infeasible with large_datasets they also have quadratic memory_requirements quickly exceeding the ram available in high performance servers for large_datasets ls bsr introduces a pre clustering step that makes it an order of magnitude faster than pgap however it is less sensitive we have developed a method to generate the pan_genome of a set of related prokaryotic isolates it works v c the author published_by we evaluated the accuracy running time and memory_usage of roary against three similar standalone pan_genome applications in each case we performed the analysis using a single processor amd opteron and provided gb of ram we constructed a simulated dataset based on salmonella_enterica typhi s typhi ct acc no al allowing us to accurately assess the quality of the clustering we created genomes with identical core genes and accessory genes in varying combinations all the applications created clusters that are within of the expected results with roary correctly building all genes as shown in the overlap of the clusters is virtually_identical in all applications except ls bsr which over clusters in of cases in addition a set of real annotated assemblies of s typhi genomes was used subsets of the data were provided to each application and the running time and memory_usage were noted the running time of pgap and panoct increases substantially making only small_datasets computationally_feasible and supplementary figs s s roary scales consistently as more samples are added supplementary figs s s and has been shown to work on a dataset of isolates as shown in the memory_usage of pgap and panoct also increases rapidly as more samples are added quickly exceeding gb for even small_datasets the memory_usage of roary scales consistently as more samples are added making it feasible to process large_datasets on a standard desktop computer within a few hours we conducted similar experiments with more diverse datasets including streptococcus pneumonia staphylococcus_aureus and yersinia_enterocolitica and the results exhibit similar speed ups as shown in supplementary figures s and s the performance in a multi processor environment iscore is defined as a gene being in at least of samples which allows for some assembly errors in very large_datasets where there are no results the applications failed to complete within days or used more than gb of ram the first column is the number of unique s typhi genomes in the input_set with a mean of contigs over all assemblies shown in supplementary figs s and s with roary achieving a speedup of x using cpus and gnu parallel we have shown that roary can construct the pan genomes of large collections of bacterial_genomes using a desktop computer where it was not previously computationally possible with other methods further speedups in running time are possible by providing more processors to roary on simulated_data roary is the only application to correctly identify all clusters this increased accuracy comes from using the context provided by conserved gene neighborhood information roary scales well on large real_datasets identifying large_numbers of core genes even in the presence of a varied open pan_genome 
