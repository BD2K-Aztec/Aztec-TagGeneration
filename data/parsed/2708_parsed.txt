systems_biology libsbmlsim a reference implementation of fully_functional sbml simulator motivation the systems_biology sbml is currently supported by software_tools among which support numerical integration of ordinary_differential ode_models although sbml is a widely_accepted standard within this field there is still no language neutral library that supports all features of sbml for simulating ode_models therefore a demand exists for a simple portable implementation of a numerical integrator that supports sbml to enhance the development of a computational platform for systems_biology results we implemented a library called libsbmlsim which supports all the features of sbml and confirmed that the library passes all tests in the sbml test suite including those for sbml events algebraicrules fast attribute on reactions and delay libsbmlsim is implemented in the c programming_language and does not depend on any third_party library except libsbml which is a library to handle sbml documents for the numerical integrator both explicit and implicit methods are written from scratch to support all the function ality of sbml features in a straightforward implementation we succeeded in implementing libsbmlsim as a platform independent library that can run on most common operating_systems windows macosx and linux and also provides several language bindings java c python and ruby availability the source_code of libsbmlsim is available from http fun bio keio ac jp software libsbmlsim libsbmlsim is distributed under the terms of lgpl understanding of the logic and dynamics of gene regulatory and biochemical_networks is a major_challenge in systems_biology for this reason there exist numerous software_tools that can simulate ordinary_differential odes and several efforts to standardize the model description of computational_models have been made one major model description language is the systems_biology sbml which is well accepted in the systems_biology field although there exist sbml supported software_tools there is still no language neutral library that supports all sbml features and has been confirmed as passing all sbml tests for example few simulator completely support sbml events which is an element to describe a discontinuous change to a model with respect to time number of particles parameter_values etc supporting events in the simulator requires some effort by developers if they are using one of the existing numerical integration libraries because most of the integrators assume that the model is continuous another element that is not well supported in sbml is the sbml algebraicrule element which allows modelers to reduce the number of variables and to add a constraint to each variable therefore supporting algebraicrule in the simulator involves far more than just implementing a numerical integrator for odes because the simulator has to solve differential algebraic equations daes which requires an implementation to solve non linear simultaneous equation numerically or analytically to determine the value of variables described in algebraicrule this is also required when a simulator must support the fast attribute on an sbml reaction element the delay function is a rarely supported sbml function in existing simulators especially with a combination of event elements the delay function allows a modeler to include biological_processes having a delayed_response this function requires some additional modification to the ode solver itself to store calculated_values that are used after a certain delay to carefully and quantitatively check the capability of each sbml elements on the simulator it is recommended to run the test cases provided by the sbml test suite and validate each simulation_results sbml test suite consists of numerous combinations of sbml features in separate_models with the expected results the test results are also publicly released for existing software http sbml org facilities database and currently there is still no language neutral library that confirmed to pass all sbml tests the aim of the current work is the development of a portable simulation library that fully supports sbml features for this purpose we at first focused on accuracy by a straightforward implementation staying carefully within the specifications of sbml although there already exist elaborated and efficient solvers numerical integrators including variable step integrator and both explicit and implicit method are implemented from scratch because we wanted to reduce the number of dependent libraries as much as possible we are planning to port this library on tablet computers and smartphones sbml can also describe partial_differential pdes stochastic_differential sdes and discrete stochastic simulation_models which are not yet included in the sbml test suite as yet libsbmlsim does not provide integrators for these types of models a known limitation which we intended to address in our future development of the library 
