genome_analysis jensembl a version aware java api to ensembl data systems motivation the ensembl project provides release specific perl apis for efficient high_level programmatic_access to data stored in various ensembl_database schema although perl scripts are perfectly suited for processing large volumes of text_based data perl is not ideal for developing large_scale software applications nor embedding in graph ical interfaces the provision of a novel java api would facilitate type safe modular object orientated development of new bioinfor_matics tools with which to access analyse and visualize ensembl data results the jensembl api implementation provides basic data_retrieval and manipulation functionality from the core compara and variation databases for all species in ensembl and ensemblgenomes and is a platform for the development of a richer api to ensembl datasources the jensembl architecture uses a text_based configuration module to provide evolving versioned mappings from database schema to code objects a single installation of the jensembl api can therefore simultaneously and transparently connect to current and previous database instances such as those in the public archive thus facilitating better analysis repeatability and allowing through time comparative_analyses to be performed availability project development released code libraries maven repository and documentation are hosted at sourceforgethe ensembl project provides a genome information system for the annotation analysis and display of genome_assembly data pertaining to vertebrates ensembl http www ensembl org and for other taxonomic_groups ensemblgenomes http www ensemblgenomes org together with core genomic_annotations the curated resources now include comparative_genomic variation functional genomic and regulatory data stored in separate but linked database schemas access to data in ensembl databases is freely provided through ensembls interactive web_browser the biomart data_mining tool http www ensembl org biomart martview and web_services http www biomart org martservice html publicly exposed mysql databases ensembldb ensembl org mysql ebi ac uk ensembldb ensembl org and programmatically through perl api modules http www ensembl org info data api html the perl api is ideally_suited to the processing of large volumes of text_based data and as such is used for the majority of the ensembl systems internal workflows however perl is not an ideal language for embedding in graphical interfaces in contrast java provides a robust object oriented programming environment and is a preferable language for implementing large_scale projects with the benefits of compile time type checking enforced interfaces the potential to separate interface from implementation allowing for transparent alternative implementations multi threading better support for graphical_user and support for garbage collection of circularly referenced objects java like perl also benefits from a vast resource of freely_available diverse code libraries and development frameworks and tools including open_source projects in the bioinformatics domain previously ensembl provided the ensj library a java api for data access in java or jython like the perl api ensj intimately embedded data access code i e the actual sql statements that access the ensembl mysql databases within the body of code representing the genetic objects as a consequence a new api release had to be generated for each database schema version ensembl release configured to connect and retrieve data from its cognate schema with no backwards compatibility guaranteed as with the perl api the dispersed nature of the embedded sql statements meant that changes required to keep pace with each database release were spread across multiple files which was an inefficient process in ensj was discontinued when the ensembl team elected to focus their finite resources on the maintenance of the perl api code alone since then despite the growing number of bioinformatic_tools being developed in java there has been no java ensembl api available other parties have however developed several partial apis to ensembl in a number of alternative programming_languages particularly to support bulk data download typically these apis do not directly address the issue of schema versioning and many are not actively maintained two of the most widely used such apis are the bioconductor r interface to biomart biomart http www bioconductor org_packages release bioc html biomart html although this is a biomart api rather than an ensembl api per se and the biogem plug in rubyensembl api http bioruby annex rubyforge org which uses active records to abstract over the ensembl core schema to whom correspondence should be addressed the author s published_by this is an open_access the terms of the creative commons attribution license http creativecommons org licenses by which permits unrestricted use distribution and reproduction in any medium provided the original_work 
