asp g an asp based method for finding attractors in genetic_regulatory motivation boolean_network are suitable to simulate grns in the absence of detailed kinetic_information however reducing the biological reality implies making assumptions on how genes interact interaction rules and how their state is updated during the simulation update scheme the exact choice of the assumptions largely determines the outcome of the simulations in most cases however the biologically correct assumptions are unknown an ideal simulation thus implies testing different rules and schemes to determine those that best capture an observed biological_phenomenon this is not trivial because most current methods to simulate boolean_network of grns and to compute their attractors impose specific assumptions that cannot be easily altered as they are built into the system results to allow for a more flexible simulation framework we developed asp g we show the correctness of asp g in simulating boolean_network and obtaining attractors under different assumptions by successfully recapitulating the detection of attractors of previously published_studies we also provide an example of how performing simulation of network models under different settings help determine the assumptions under which a certain conclusion holds the main added value of asp g is in its modularity and declarativity making it more flexible and less error_prone than traditional approaches the declarative nature of asp g comes at the expense of being slower than the more dedicated systems but still achieves a good efficiency with respect to computational time availability_and the source_code of asp g is available atgene regulatory_networks grns consist of genes proteins and other regulatory_molecules that undergo complex and dynamic interactions which drive gene_expression and ultimately complex cellular_behavior to be able to understand and predict this behavior various mathematical_models have been developed that describe the dynamics of these grns different model formalisms have been used as reviewed in de jong one of the earliest models to describe grns are boolean_network boolean_network are attractive because of their simplicity by reducing the complexity of grns to qualitative logical models boolean_network are able to cope with the largely incomplete kinetic_information of biological_networks despite their highly simplified representation of biological reality boolean_network were shown to still grasp the important dynamic_properties of grns such as the networks attractors an attractor represents a stable set of states toward which the transiently changing gene_expression values converge to evolving toward an attractor thus corresponds to reaching a specific developmental_stage cell_types development stages of cells etc or functional mode de and the analysis of attractors in a regulatory_network thus hints toward the functional modes of the regulatory_network de current knowledge regarding grns is generally incomplete comparing simulated with observed attractors states e g developmental_stages of a certain network model can thus aid in evaluating existing network models and or predict missing_information in the current knowledge for instance mendoza and alvarezand more recently espinosastudied flower_development in arabidopsis_thaliana using boolean_network of which the network attractors corresponded to stable gene_expression levels during the different stages of flower_development these models helped predicting mutant phenotypes and the existence of a yet uncharacterized gene involved in the transition from the to whom correspondence should be addressed non flowering to the flowering state davidich andused a boolean_network and its steady_states to describe the different stages in yeast_cell where the stages of the cycle correspond to the strong attractors of the network is the choice of the proper assumptions these assumptions refer to the activation rules and update scheme activation rules determine the way the activation state of each gene depends on the activation states of its interactors in the previous transition step the update scheme determines how these activation states are updated i e either synchronously or asynchronously the exact choice of these assumptions largely determines the number and characteristics of the attractors as in most cases the true_biological activation rules and update scheme are not known one should be able to easily test different activation rules and schemes as this allows to have an idea on the conditions under which the simulated network model would be able to capture an observed biological_phenomenon boundary_conditions several computational_tools have been developed to perform the computation of attractors in boolean_network developed genysis which uses techniques involving binary decision diagrams bdd to compute attractors used techniques based on temporal logic model checking in antelope used state_space pruning and randomized state_space traversal methods to improve the scalability of the attractor computation dubrova andused a boolean satisfiability sat solver typically used for combinatorial modeling and problem_solving to compute attractors of grns and obtained a better computational time and space efficiency compared with the bdd based_approach more recently developed genefatt based on the reduced order bdd robdd data_structure which further improves the efficiency of the attractor computation most of the aforementioned systems to simulate boolean_network in principle can perform simulations with different assumptions however changing these assumptions would require tedious modifications on these systems for instance using the sat approach modifying the structure of the network and the updating rules would require updating the truth tables in the cnet format to allow for a more flexible simulation framework we developed asp g which makes use of the declarative programming paradigm answer set programming asp the declarative nature of asp allows one to specify and modify the domain specific logic here the definition of the network interactions activation rules and update schemes required to represent and solve the computational_problem at hand here dynamical modeling and attractor calculation in an intuitive and modular way to illustrate the flexibility of our approach we applied it to calculate attractors of previously_published boolean_network of grns of different sizes and complexity and different simulation assumptions by trying to mimic previous results under diverse settings we can show that the main advantage of our approach consists of making the modeling more flexible and less error_prone and therefore helps delineate the boundary_conditions under which the biological conclusions based on simulations of boolean_network are valid at the same time we also show that with the use of fast and efficient asp solvers the computational_efficiency of our method is in the same range as that of the most efficient dedicated methods for the simulation of boolean_network and the calculation of their attractors in this article we presented asp g a modular system to simulate boolean_network of grns and to subsequently compute their attractors asp g is based on the declarative asp programming paradigm which has already been previously applied in the context of biological_network data analysis and modeling see e g recently showed in a theoretical comparison between boolean_networks and the underlying semantics of asp that a strong mathematical relation exists between the attractors steady_states of boolean_networks and the notion of stable models commonly used in asp we built on this earlier result in our proposed method asp g the main added value of asp g is in its declarativity and modularity it allows users to easily test different update schemes and activation rules when simulating the dynamics of their boolean_network by selecting and modifying the appropriate modules in addition the fact that asp g is based on a declarative language makes it less error_prone than other approaches such as sat which depend on the definition of difficult_to and tedious to construct truth tables using an underlying declarative programming paradigm also makes aspg easily extendable to other parameter_settings decoupling the problem definition from its solution thus allows for a greater_flexibility compared with other ad_hoc systems such as genysis and genefatt where assumptions such as update scheme and activation rules are already built into the system we showed the correctness of asp g in simulating boolean_network and obtaining attractors under different assumptions by successfully recapitulating the detection of attractors of previously published_studies relying on a modular and flexible declarative programming paradigm definitely comes at the expense of being slower than the more dedicated systems to compute attractors such as genysis and genefatt however in terms_of asp g proved to be fast for small networks i e up to genes computations are below a second for larger_networks i e up to genes the longest computation time took min also ongoing_research in asp solvers will make it possible for asp to reach a point where it outperforms other logic paradigms this is definitely the case when comparing asp with binary or multiple decision diagrams used to calculate attractors in boolean_networks models for grns as they suffer from memory explosion when the size of the network starts to become large for larger sized networks any exhaustive method will face a challenge as the state_space of the network increases exponentially with respect to the number of nodes in the network when dealing with such larger_networks methods that avoid an exhaustive_search as inmight become more suitable under these conditions conclusively asp g is tailored to simulate boolean_network of grns and to compute attractors in a diagnostic mode where one wants to test different update schemes and activation rules to find the setting that best matches experimental_data or to correctly delineate the boundary_conditions under which the biological conclusions based on these simulations are valid 
