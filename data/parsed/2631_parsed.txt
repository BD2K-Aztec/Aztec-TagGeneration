sequence_analysis kanalyze a fast versatile pipelined k_mer toolkit motivation converting nucleotide_sequences into short overlapping fragments of uniform length k_mers is a common step in many bioinformatics applications while existing software_packages count k_mers few are optimized for speed offer an application_programming api a graphical_interface or contain features that make it extensible and maintainable we designed kanalyze to compete with the fastest k_mer counters to produce reliable output and to support future development efforts through well architected documented and testable code currently kanalyze can output k_mer counts in a sorted tab_delimited file or stream k_mers as they are read kanalyze can process large_datasets with gb of memory this project is implemented_in and the command_line cli is designed to integrate into pipelines written in any language results as a k_mer counter kanalyze outperforms jellyfish dsk and a pipeline built on perl and linux utilities through extensive unit and system testing we have verified that kanalyze produces the correct k_mer counts over multiple datasets and k_mer sizes k merizing sequence_data is a necessary step for many bioinformatics applications k_mer based_approaches are used to assemble reads detect repeats estimate read_depth identify protein binding_sites find mutations in sequencing_data and perform a variety of other tasks as new applications are created it is important to have reliable software for generating k_mers if developers choose to rewrite k_mer code there is an additional risk of introducing bugs that can affect results this problem is compounded when algorithms become more complex such as counting k_mers in large_datasets with limited memory the time required to develop and to test a fast algorithm becomes prohibitive existing_tools often lack features that make them more available to new applications few have an api or document return codes we created kanalyze as a fast reusable k_mer toolkit capable of running on multiple_platforms it is packaged with an api for integration into other programs as well as a cli for manual execution and scripted pipelines the count module has a graphical mode for desktop use because it is designed for longevity the project is organized documented and tested the source_code includes unit tests to quickly verify accuracy as the code changes we ran tests on several datasets and compared the results with other k_mer software including a perl pipeline we built for verifying results throughout the design process the best practices for scientific computing were observed kanalyze makes both speed and accuracy available to k_mer applications kanalyze offers an extensible api and a complete cli for k_mer processing_tools these interfaces allow kanalyze to be integrated directly into java programs via the api or into pipelines of any language via the cli for desktop users a graphical_interface is included for the count module with carefully_chosen algorithms and data_structures kanalyze can perform at a level commensurate with programs compiled to native code through extensive testing we are confident that it produces accurate results kanalyze is designed to survive years of maintenance and feature additions the source is distributed under the gnu lesser gpl to restrict its usage as little as possible we encourage others to contribute to the kanalyze project 
