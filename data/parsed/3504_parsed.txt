genome_analysis permory an ld exploiting permutation_test algorithm for powerful genome_wide association testing motivation in genome_wide gwas examining hundreds of thousands of genetic_markers the potentially high number of false_positive requires statistical correction_for permutation_tests are considered_the for multiple_testing in gwas because they simultaneously provide unbiased type_i control and high power at the same time they demand heavy computational effort especially with large_scale datasets of modern gwas in recent_years the computational_problem has been circumvented by using approximations to permutation_tests which however may be biased results we have tackled the original computational_problem of permutation_testing in gwas and herein present a permutation_test algorithm one or more orders_of than existing implementations which enables efficient permutation_testing on a genome_wide scale our algorithm does not rely on any kind of approximation and hence produces unbiased results identical to a standard permutation_test a noteworthy feature of our algorithm is a particularly effective performance when analyzing high_density marker sets availability freely_available on the web atthe analysis of genome_wide gwas using hundreds of thousands of single_nucleotide snp markers requires strict_control of the type_i many simple approaches to multiple_testing such as the bonferroni method fail to account for linkage_disequilibrium ld among snps which leads to an overly conservative p value correction the resulting loss of power matters increasingly because the number of genetic_markers and the marker_density both grow constantly permutation_based corrections fully account for the correlation among snps caused by ld and therefore are considered_the of multiple_testing in gwas they provide the highest statistical_power among the procedures controlling to whom correspondence should be addressed family wise type_i risk on the other hand they require a lot more computational effort than the simple bonferroni adjustment for example running a large number of permutations k for large_scale marker sets using standard_software such as plink can take up to several years of computing time progress has been made by the introduction of accelerated permutation procedures the software presto allows to perform moderate numbers of permutations to for large_datasets within a day or more and thus already the calculation of adjusted p values in the region of to nevertheless there has been an ongoing demand for faster methods to compute genome_wide adjusted p values which has motivated the development of various approximation algorithms over the last years a first alternative approach is based on the bonferroni_correction adjusting the testing threshold for m markers being tested to m suggested to replace the bonferroni m by an effective number of independent_tests m eff which is derived from eigenvalues of the markers correlation_matrix in this way information about the correlation between snps is used and therefore results in a less conservative p value adjustment than bonferroni that is m eff m based on the initial idea several authors proposed different ways of estimating m eff however in general it still yields conservative estimates in comparison with the permutation_test another alternative framework is based on the multivariate_normal mvn which is used as an approximation of the unknown distribution of the marker set lin and seaman and mllerwere the first to propose mvn based_methods for multiple testing adjustment in association studies followed by conneely and boehnke who increased its efficiency by numerically computing the asymptotic mvns instead of deriving them by simulation however due to the numerical limitations of integrating high_dimensional mvns these approaches require a block wise strategy in large marker sets which does not consider correlations between disjoint marker blocks to answer this problem proposed a resamplingbased method called slide which uses a sliding_window locally accounting for the inter marker correlation however both accuracy and computational_efficiency depend on the size of the window that is extending the window increases accuracy but at the same time results in a considerable_loss of computational_efficiency we compare our method with existing permutation_based software namely presto and plink as well as alternative_approaches for which we select simplem representing the methods using m eff and slide representing the mvn framework respectively to the best of our knowledge these two algorithms both represent the fastest and most accurate methods of their class we do not treat the rat software by which is based on importance sampling because it was designed as a special application to adjust a single preferably highly_significant p value whereas here we are interested in simultaneously adjusting a wide_range of p values multiple testing adjustment is important for genetic data analysis but it has been computationally_challenging to use the gold_standard method permutation_tests one can think of two general approaches to this problem either accelerate the permutation procedure or take an efficient approach to compute approximation and improve its accuracy in recent_years research primarily has focused on the latter approach we employed the former and have developed a permutation algorithm optimized for use with genetic data our algorithm not only presents a notable improvement over existing permutation_test implementations but even can compete with the fastest alternative_methods we showed that our algorithm is also well equipped for the analysis of increasingly denser and larger marker sets including growing sample_sizes permory hence relieves the computational_burden of permutation_testing on a page 
