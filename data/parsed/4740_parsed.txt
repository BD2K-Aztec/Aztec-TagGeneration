tree structured algorithm for long weak motif_discovery motivation motifs in dna_sequences often appear in degenerate form so there has been an increased interest in computational algorithms for weak motif_discovery probabilistic algorithms are unable to detect weak motifs while exact methods have been able to detect only short weak motifs this article proposes an exact tree based motif_detection treemotif algorithm capable of discovering longer and weaker motifs than by the existing_methods results treemotif converts the graphical_representation of motifs into a tree structured representation in which a tree that branches with nodes from every sequence represents motif instances the method of tree construction is novel to motif_discovery based on graphical_representation treemotif is more efficient and scalable in handling longer and weaker motifs than the existing algorithms in terms of accuracy and execution time the performances of treemotif were demonstrated on synthetic data as well as on real_biological regulatory_regions such as promoters enhancers locus control regions etc contain motifs or regulatory_elements that control biological_processes such as gene_expression generally activation or inhibition of gene_expression is regulated by proteins referred to as transcription_factors tfs that bind to particular sites in regulatory_regions for example tata_box with a core_sequence of tataaa located in the promoter_region of genes is bound by tfs such as tfiid tfiia and tfiib to initiate transcription such tf_binding tfbs are useful dna motifs and their locations and detection are important to decipher and control sophisticated regulatory_mechanism of gene_expression in practice sequence_motifs occur with mutations or degeneration at sites which are then referred to as motif instances motifs are denoted as l d motifs where l denotes the motif length and d denotes the maximum number of mutations allowed in the motif many techniques have been proposed for detecting motifs enumeration algorithms probabilistic to whom correspondence should be addressed algorithms and deterministic algorithms in addition ensemble techniques have been attempted an algorithmic challenge for motif_discovery was posed in pevzner and sze find planted motif instances of l d motifs in dna_sequences of length it was observed that most existing techniques were unable to detect a motif this problem referred to as motif challenge problem planted motif_discovery problem or subtle weak motif_discovery problem has recently received increased attention many deterministic graphbased algorithms have been proposed for weak motif_discovery which begin by representing l mer substrings sampled from sequences in the dataset as nodes in a multipartite graph thereafter the nodes with d hamming_distance are connected by edges as two instances of the same motif must not differ by more than in d sites the cliques of a sufficient size of this graph represent instances of the motifs in the dataset a graph_based algorithm winnower was proposed to solve the motif challenge problem cwinnower imposes an additional filtering constraint to winnower to decide whether edges should be deleted or retained the modification substantially improves the execution time compared with winnower we have previously_proposed an exact graphbased algorithm dpcfg which efficiently detects weak motifs by constructing lists cliques of motif instances in graphs dpcfg had better accuracy and execution time than those of winnower for sequences as long as for the motif problem however for longer and weaker motifs such as dpcfg demands high memory_requirements this work attempts to solve problems with longer and weaker motifs with less memory and time requirements probabilistic graph based_algorithms such as motifcut and mcl wmr have also been proposed for weak motif_discovery motifcut formulates the problem into finding maximum density subgraphs in a weighted graph constructed using all l mer substrings from the dataset mclwmr is a heuristic that uses the markov cluster to search for cliques of motif instances in weighted graphs mcl wmr has shown competitive execution time and accuracy non graph based_algorithms were also proposed for example projection enhanced discovery performances through finding good starting points for expectation_maximization projection produced higher performance than winnower for weaker l d motif_detection problems however page the performance of treemotif was evaluated on synthetic data as well as on real_biological synthetic datasets provide quantitative_measures that can compare its performance with the existing techniques experiment results of meme gibbsdna projection itriplet dpcfg and treemotif were obtained from runs on a workstation with ghz cpu and gb ram detections with meme gibbsdna projection and dpcfg were based on exactly one motif occurrence per sequence oops while with itriplet and treemotif detections were made with at least one motif instance per sequence weak motif_discovery is an important yet unresolved problem in computational_biology several graph_based exact methods such as winnower and dpcfg have shown improved accuracy compared with heuristics or probabilistic methods however clique finding to discover the motifs can be time consuming in this article we designed treemotif for discovering weak l d motifs by building up trees on nodes of graphs after initialization treemotif appends new nodes onto existing trees where the appending operations happen only when cliques indicated by the leaf nodes are extendable by the new nodes the novel constrained strategy of clique construction introduced in treemotif can avoid trivial operations on intermediate results of final cliques in addition by doing motif refinement the sensitivity of motif_discovery defined in section can be increased compared with the list algorithm inwhich produces exact oops motif instances by using a recursive node selection performance_comparisons with several popular motif_discovery methods have shown that treemotif detects weak motifs accurately especially for relatively longer weak motifs moreover it performs better on a recent benchmark constructed using real motif data one drawback of treemotif is that its memory requirement grows exponentially as the sequence_length n or parameter p is increased because of large memory_requirements treemotif failed to find weaker l d motifs such as and this is due to the maintenance of increased number of page 
