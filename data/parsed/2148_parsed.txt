genetics_and gwastools an r bioconductor_package for quality_control and analysis of genome_wide gwastools is an r bioconductor_package for quality_control and analysis of genome_wide gwas gwastools brings the interactive capability and extensive statistical libraries of r to gwas data are stored in netcdf format to accommodate extremely large_datasets that cannot fit within rs memory limits the documentation includes instructions for converting data from multiple formats including variants called from sequencing gwastools provides a convenient interface for linking genotypes and intensity data with sample and single_nucleotide annotation despite the increasing_popularity of next_generation the relatively low_cost of chip arrays and the recent introduction of exome chips continue to make genome_wide gwas an attractive option for many investigators the success of gwas depends in large part on rigorous quality_control qc and quality_assurance qa to ensure that falsepositive signals are removed and that real signals are not masked by low quality data we present gwastools an r bioconductor_package to facilitate qc qa of large single_nucleotide snp datasets as snp_arrays have increased in size commonly million snps it is often impossible to store an entire dataset in rs virtual memory even at maximum compression of one byte per genotype analysing floating point values such as allelic probe intensity requires even more storage space existing r packages for gwas such as snpstats store genotype matrices in memory and do not include intensity data we use the network common data form netcdf format to store large genotype and intensity datasets on disk with efficient access to subsets of the data for an example dataset of samples and snps which exceeds rs limit of elements in a single array iterative read time for a netcdf file is up to times_faster than a ped file the benefits of gwastools include the interactive analysis provided by rs interface and the ability to include intensity data intensity data can be used to detect sex_chromosome aneuploidies which can be confused with sex mis annotation autosomal anomalies which generate genotyping_errors and evaluation of clustering by genotype call gwastools supports the following format conversions inputplain text plink variant_call imputed genotypes impute beagle mach outputplink snpstats objects snpannotationdataframe and scanid in a scanannotation dataframe but any number of other variables of different types may also be included an important component of gwas analysis is ensuring that annotation is mapped correctly to its corresponding genotype data the classes genotypedata and intensitydata each contain a netcdf reader object a snp annotation object and a scan annotation object on object creation validity methods ensure that the primary keys of the netcdf and annotation objects match most functions in gwastools take genotypedata and intensitydata objects as arguments such that all necessary information e g genotype chromosome and sex is contained in a single_object common methods are provided to access data across multiple_classes including getsnpid getscanid getchromosome getposition getsex and getgenotype in designing gwastools we took care to separate the application_programming of the genotypedata and intensitydata classes from the format in which the data are stored this design allows for extension to other data_formats without changing any of the functions that use genotypedata and intensitydata objects for example gwastools contains classes for storing snp and scan annotation in sqlite format and for storing genotype data in memory as a matrix or on disk in the highly_efficient genomic data_structure gds format used by snprelate a genotypedata object can be constructed with these objects as well in addition to the functionality already included in gwastools one could make use of the genotypedata and intensitydata classes to apply the many statistical functions available in r to gwas data 
