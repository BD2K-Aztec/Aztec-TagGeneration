gpu accelerated biochemical_network simulation motivation mathematical_modelling is central to systems and synthetic_biology using simulations to calculate statistics or to explore parameter_space is a common means for analysing these models and can be computationally_intensive however in many cases the simulations are easily parallelizable graphics_processing gpus are capable of efficiently running highly_parallel programs and outperform cpus in terms of raw computing_power despite their computational advantages their adoption by the systems_biology community is relatively slow since differences in hardware architecture between gpus and cpus complicate the porting of existing code results we present a python_package cuda sim that provides highly parallelized algorithms for the repeated simulation of biochemical_network models on nvidia cuda gpus algorithms are implemented for the three popular types of model formalisms the lsoda algorithm for ode integration the eulermaruyama algorithm for sde simulation and the gillespie algorithm for mjp simulation no knowledge of gpu computing is required from the user models can be specified in sbml format or provided as cuda code for running a large number of simulations in parallel up to fold decrease in simulation runtime is attained when compared to single_cpu implementations availability http cuda sim sourceforge net mathematical_modelling is an integral part of systems and synthetic_biology ordinary_differential odes are the most commonly used methodology but due to increasing appreciation of the importance of stochasticity in biological_processes stochastic_differential sdes and markov jump processes mjps are also applied since most models are non linear they generally cannot be solved analytically and therefore require numerical treatment furthermore in order to understand behaviour across high_dimensional parameter_space or to perform simulation based_inference a very large number to whom correspondence should be addressed present_address apoptosis and proliferation control laboratory cancer research uk london research_institute london uk of simulations is required making analysis of even the simplest models extremely time consuming for computationally_expensive calculations graphics_processing gpus can be used gpus are many core multi_threaded chips that are capable of several hundred gflops in terms of raw computing_power a single gpu in a desktop pc is comparable to a cpu cluster but is much cheaper however due to their single instruction multiple data simd architecture only highly parallelized processes can be efficiently run on gpus even though platforms for general_purpose gpu computing like cuda compute_unified from nvidia which provides a cuda api exist it remains difficult and time consuming to port existing algorithms that were designed for execution on cpus there have been developments in porting biochemical_network simulators to gpus reviewed in but there does not currently exist a general_purpose simulation tool that integrates multiple algorithms within the same interface here we present a new python_package called cuda sim which provides highly parallelized algorithms for large_scale simulations of biochemical_network models it is compatible with all nvidia gpus that support cuda absolutely no knowledge of cuda and gpu computing is needed for the user to access the simulation algorithms the integration of odes is carried_out using a gpu_implementation of lsoda sde simulations are provided via the euler maruyama algorithm and simulations from a mjp or master_equation are performed using the gillespie algorithm all functionality can be accessed via a python interface that hides the implementation details 
