data_and a linear_programming model for protein inference problem in shotgun_proteomics motivation assembling peptides identified from tandem_mass into a list of proteins referred to as protein inference is an important issue in shotgun_proteomics the objective of protein inference is to find a subset of proteins that are truly present in the sample although many methods have been proposed for protein inference several issues such as peptide degeneracy still remain_unsolved results in this article we present a linear_programming model for protein inference in this model we use a transformation of the joint probability that each peptide protein pair is present in the sample as the variable then both the peptide probability and protein probability can be expressed as a formula in terms of the linear combination of these variables based on this simple fact the protein inference problem is formulated as an optimization_problem minimize the number of proteins with non zero probabilities under the constraint that the difference between the calculated peptide probability and the peptide probability generated from peptide_identification algorithms should be less than some threshold this model addresses the peptide degeneracy issue by forcing some joint probability variables involving degenerate pep tides to be zero in a rigorous manner the corresponding inference algorithm is named as proteinlp we test the performance of proteinlp on six datasets experimental_results show that our method is competitive with the state of the art protein inference algorithms availability the source_code of our algorithm is available at https sourceforge net_projects prolp protein identification using tandem_mass ms_ms is the most widely used tool for detecting proteins from biological_samples in a typical shotgun_proteomics experiment proteins in a sample are first digested into peptides and the resulting mixture of peptides is subjected to mass_spectrometry to generate tandem_mass after spectra acquisition the peptide that generates each spectrum is identified with peptide_identification algorithms from these putative peptide_identifications the proteins that are present in the sample are detected with protein inference algorithms computationally the input for the protein inference problem is a bipartite_graph the left is a set of identified peptides and the right is the set of candidate_proteins that have at least one constituent peptide the inference problem considered here is to find a subset of proteins that are truly present in the sample however such protein inference problem is only partially solved since several technical_challenges still remain unconquered one of the most challenging problems is the peptide degeneracy issue which arises when a single peptide can be mapped to multiple proteins the performance of protein inference algorithms mainly depends on our capability of assigning these degenerate shared peptides to proteins that really generate them to date there are already many protein inference algorithms available in the literature the reader can refer to a recent survey for details here we shall discuss briefly how these methods tackle the peptide degeneracy issue and present our research motivation existing protein inference algorithms solve the peptide degeneracy problem in quite different ways generally they fall into two categories as listed in the subsequent sections inference algorithms in the first category solve the peptide degeneracy problem with some simple rules or assumptions in an implicit manner one typical example is the widely used two peptide rule which regards all candidate_proteins that have at least two matching peptides as true_positives tps the underlying assumption is that degenerate peptides should belong to all proteins that they can match in contrast idpicker formulates the protein inference problem as a set covering problem and solves it with a greedy_algorithm in the greedy selection procedure proteins that can match the maximal number of uncovered peptides are selected in an iterative manner the underlying assumption is that each degenerate peptide should be assigned to one protein only inference algorithms in the second category treat the peptide degeneracy issue explicitly in terms of conditional_probability briefly they either model the conditional_probability of one protein being present given a peptide or model the conditional to whom correspondence should be addressed probability of one peptide being present given a protein proteinprophet one of the most widely used protein inference methods learns degenerate peptide weight using an em like algorithm in fact such degenerate peptide weight corresponds to the probability of one protein being present conditional on the presence of a given peptide alternatively msbayespro utilizes the concept of peptide detectability which is defined as the probability of detecting a peptide in a standard sample by a standard proteomics routine if its parent protein is expressed fido models the probability with which a sample peptide is generated from a protein containing it with a constant probability hsm considers five types of mechanisms that a peptide can be generated by a protein i e the conditional_probability that one peptide is present has five possible values the attempts of treating the peptide degeneracy problem rigorously in the second category have obtained promising results however they still have some limitations first proteinprophet employs an em like iterative procedure to estimate protein probabilities this method is described procedurally rather than derived from a well defined optimization model in contrast msbayespro hsm and fido derive their models from clear explicitly stated statistical assumptions however they formulate the protein inference problem as a combinatorial_optimization this means that they may generate different inference results from the same dataset when obtaining the optimal_solution is too time consuming second fido and hsm use a very small set of parameters to approximate all possible values that the conditional_probability can take such a simplification makes it possible to create efficient accompanying algorithms but it may also limit the capability of achieving better inference performance in contrast there are no such limitations in proteinprophet and msbayespro unfortunately the conditional_probabilities in proteinprophet are calculated using a formula that has not been rigorously justified the peptide detectability values in msbayespro are predicted using a complex model trained on other datasets finally existing_methods involve many parameters that are not easy to specify for example fido needs to have a grid_search in order to find good values for its three parameters the aforementioned observations motivate our research in this article we take a step further toward completely solving the protein inference problem with particular emphasis on peptide degeneracy to that end we present a linear_programming lp model for protein inference which is built on two simple probability equations we first introduce the joint probability that both a protein and its constituent peptide are present in the sample to obtain a linear_model we use a mathematical transformation of this joint probability as the variable the marginal probability of a peptide being present can be expressed as a formula in terms of the linear combination of these variables if we assume that the marginal probability of each identified peptide being present is known the protein inference problem could be formulated as the following optimization_problem minimize the number of proteins of non zero probabilities while the calculated peptide probability should be as close to its known value as possible we show that this optimization_problem actually can be written as a lp problem which has only one parameter that is easy to specify and has a clear interpretation this new protein inference algorithm is named as proteinlp experimental_results on six datasets show that our proteinlp algorithm is a competitive and complementary_approach for protein inference the main contributions of the work described in this article can be summarized as follows to our knowledge our work is the first lp formulation for the protein inference problem our method guarantees to find the optimal_solution instead of using conditional_probability our model is the first attempt of addressing the peptide degeneracy problem with the joint probability it greatly_simplifies the model without sacrificing the discrimination power the rest of this article is organized as follows in section we describe our method in detail section_presents the experimental_results and section concludes the article we evaluate the performance of different methods by creating a curve which plots the number of tps as a function of q value an identified protein is labeled as a tp if it is present in the corresponding protein reference_set or target protein_sequence database is the joint probability that peptide i and protein j are both present in the sample in the model the linear_program has two kinds of constraints column constraints and row constraints the row constraints require that for each peptide i the difference between the observed peptide probability and the calculated peptide probability should be no greater than a threshold the column constraints can shrink some protein probabilities to and as a fp otherwise given a certain probability threshold t suppose there are t t tps and f t fps the false_discovery fdr is estimated as fdr t f t f t t t the corresponding q value is defined as the minimal fdr that a protein is reported q t min t t fdr t the curve is produced by varying the probability threshold t the probabilities of top scoring proteins in the several methods are all equal to one and the order of these proteins in the output_file is random thus we skip these proteins with same probabilities and start from the one with a different score when calculating the q value plots the number of tps identified by four methods at different q values some important observations are summarized as follows first none of these four methods can always achieve the best performance over all datasets throughout six datasets our method is stable and never performs the worst globally fido proteinprophet pp and msbayespro msb because people are particularly interested in the performance of different algorithms when the q value or fdr is very small we only plot the curve up to along the x axis for yeast dme and humanmd datasets fido has a minimum non zero q value of on yeast dataset which is to plot the curve of fido within the slot of we use the maximal number of tps achieved at q value as the value of y axis at q value note that such an operation overestimates the actual_performance of fido on the yeast data since the maximum q value for humanekc is we choose as the maximal value of x axis we cannot set the q value range very small for mixtures and sigma datasets since the probabilities of top scoring proteins in the several algorithms are all equal to one hence we have to ship these proteins with same probabilities and then calculate the q value of the first appearing protein with a different probability proteinlp is approximately or tied with other algorithms the best inference algorithm on four datasets yeast dme humanmd and humanekc and the second best on mixture data locally it beats proteinprophet five times outperforms both msbayespro and fido four times second proteinlp has the largest number of tps among the highest ranking proteins when q value i e fps on three datasets dme humanmd and humanekc other three algorithms can also achieve such a property on some datasets the number of these datasets is and for proteinprophet msbayespro and fido respectively finally the experimental_results from simple mixture to complex human data show the trend that proteinlp is more powerful on processing the ms data generated from real_samples to compare the capability of different methods in tackling the peptide degeneracy issue we present the identification results of four methods when inferring proteins containing a high_scoring degenerate peptide in for each dataset we count the number of tps and fps identified by proteinprophet msbayespro fido and proteinlp with the same number of reported proteins then we divide the identified proteins into two classes degenerate proteins which contain a high_scoring degenerate peptide and simple proteins which do not contain any such degenerate peptide from we have the following observations first proteinprophet and proteinlp can identify more degenerate proteins than msbayespro and fido in most cases this is because both proteinprophet and proteinlp tend to assign a degenerate peptide to the parent protein with more identified peptides as a result some degenerate proteins will have much higher probability than other proteins in contrast msbayespro and fido do not have such a tendency when we let different methods report the same number of proteins proteinprophet and proteinlp will return more degenerate proteins since these proteins are ranked more front by these two methods second msbayespro can always report the least number of fp degenerate proteins on mixtures sigma and yeast at the cost of identifying less tp degenerate proteins all four methods report zero fp degenerate proteins on humanmd and humanekc datasets third proteinlp is able to identify more tp degenerate proteins than the other three methods on dme humanmd and humanekc datasets our method never reports the most fp degenerate proteins moreover proteinlp identifies the least number of fp degenerate proteins on dme dataset overall msbayespro is more powerful in controlling the false_discovery with respect to degenerate proteins whereas our method offers a reasonable trade_off between tp and fp rates using the same set of identified proteins in we also plot two groups of venn diagrams to further check the overlap and difference among degenerate proteins identified by different inference algorithms in supplementary figures s and s these figures show that the set of proteins identified from the same dataset by different methods can vary significantly moreover proteinlp can always report some additional degenerate proteins that have never been identified by the other three methods on all datasets except sigma this fact further confirms that proteinlp can serve as a strong and complementary_approach for protein inference proteinlp requires only one parameter we choose as the default setting to test the effect of this parameter we run proteinlp over a rough grid of that ranges from to we omit parameter value of since all the protein probabilities are zero under this parameter setting we use the number of tps at certain q value threshold as the performance metric to assess the effect of different parameters we choose as the q value threshold for mixtures and sigma and for all the other four datasets respectively as shown in the performance of our method is sensitive to different parameter specifications and is not the best choice to address the parameter selection problem we develop an entropy based_approach for setting a proper value automatically see supplementary section for details for the six datasets we count the number of true_positives and false_positives identified by proteinprophet pp msbayespro msb and fido and proteinlp plp among their top k ranked proteins where k is and for mixtures sigma yeast dme humanmd and humanekc datasets respectively the value of k is determined according to the number of proteins with probability of reported by proteinprophet we divide the identified proteins into two classes degenerate proteins are proteins that share a high_scoring peptide with another protein and simple proteins do not share such a peptide with any other protein to solve the peptide degeneracy problem we need to know which protein really generates the degenerate shared peptide the most natural idea is to model or infer the conditional_probability of one peptide protein being present given a protein peptide however we may still need the protein probability as the variable in the mathematical formulation besides the conditional_probability this will lead to a hard optimization_problem that cannot be optimally solved in fact the joint probability that both a protein and its constituent peptide are present in the sample can also provide similar discrimination information for assigning a degenerate peptide to the right protein therefore the main advantage of proteinlp over other methods is the use of joint probability as the variable which avoids modeling the protein probability and the conditional_probability simultaneously so that the optimization formulation is greatly_simplified in the future work we plan to incorporate some supplementary_information such as proteinprotein_interactions into the lp model to help solving the degeneracy issue for example if we know that there is an interaction between two proteins then it can be expected that the existence of one protein may lead to the presence of another protein to utilize such interaction information we can introduce a linear constraint on the probability difference between two interacting_proteins to enforce their coexistence 
