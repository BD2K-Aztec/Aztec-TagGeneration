sequence_analysis a python_package for parsing validating mapping and formatting sequence_variants using hgvs nomenclature biological sequence_variants are commonly represented in scientific_literature clinical reports and databases of variation using the mutation nomenclature guidelines endorsed by the human genome_variation society hgvs despite the widespread use of the standard no freely_available and comprehensive programming libraries are available here we report an open_source and easy to use python_library that facilitates the parsing manipulation formatting and validation of variants according to the hgvs specification the current_implementation focuses on the subset of the hgvs recommendations that precisely describe sequence level variation relevant to the application of high_throughput to clinical_diagnostics availability_and the package is released under the apache open_source source_code documentation and issue tracking are available atas high_throughput becomes commonplace in the investigation and diagnosis of disease it is essential that communicating variants from sequencing_projects to the scientific_community and from diagnostic laboratories to health_care is easy and accurate the human genome_variation society hgvs mutation nomenclature recommendations are widely endorsed by professional_organizations mandated by numerous journals and displayed by databases and tools the hgvs recommendationsoriginally devised to standardize the representation of variants discovered before the advent_of sequencingare now approved by the hgvs and continue to evolve under the auspices of the human variome project the continual evolution of hgvs guidelines makes the nomenclature difficult to understand and to use for experts and non experts alike often resulting in incorrect usage and potential clinical interpretation errors we sought a software library for manipulating hgvs variants that was appropriate for clinical_diagnostics specifically we required the following functionality i we must be able to process patient variants locally i e not sent to a remote site ii we must be able to audit extend and control updates of the source_code and data iii we must be able to map variants in regions of genome transcript discrepancies particularly indels mutalyzer provides a web_interface and web_services for constructing validating and transforming sequence_variants but is not available for local installation another python_library https github com counsyl hgvs similar in spirit to the one we present here uses a regular expressionbased parser and relies on exon structures derived from blat alignments although other packages accept or generate hgvs formatted variants such as snpeff and vep they are not intended for use as a software library here we present an open_source python_library for parsing mapping validating and formatting sequence_variation according to the hgvs guidelines the library features a parser based on a parsing expression grammar and a variant mapper that accommodates insertion_deletion discrepancies between reference genomic_sequences and transcripts that confound most existing_tools object representation for a full list of object classes readers should consult the source_code the hgvs parser presented here is based on a parsing expression grammar and was inspired by previous work there are parsing rules to cover dna rna cds and protein parsing any rule may be invoked to parse components of valid hgvs strings into an appropriate type for example the c edit rule may be used to parse anhgvs substring such as c c t following python conventions formatting is implemented using the str method of each class the hgvs package requires sequence_data and exon structures to map variants between the genome and transcript coordinates to infer protein_sequence changes from transcripts and to validate variants the data provider interface declares seven methods required to support hgvs functionality developers may implement a subclass of the abstract interface to use data from other sources the hgvs package includes a concrete implementation based on the publicly_available universal transcript archive information about uta is available with package documentation in addition to the syntactic validation provided during parsing the hgvs package includes validation tools to ensure that a sequencevariant object conforms to the hgvs guidelines and to catch common errors for performance reasons the validator distinguishes intrinsic and extrinsic validation intrinsic validation asserts internal correctness of the object such as requiring that the start position is less than or equal to the end position or that the length of the location range specified for an insertion is one and extrinsic validation invokes external data for validation such as verifying that the reference_sequence specified in the variant matches that from a source database the hgvs package provides tools to transform map variants between genomic g mrna r cds c and protein p variants of particular note is the implementation of an indel aware mapper that correctly accounts for insertions_and in transcripts with respect to a genomic reference these discrepancies occur owing to natural polymorphisms and sequencing_errors and occur in of current refseq transcripts the package also includes a transcript liftover tool to migrate variants between different transcripts when used in conjunction with uta liftover may also be performed between the same refseq transcript aligned to a genomic reference by splign and blat splign and blat provide substantially different exon structures for of refseq transcripts 
