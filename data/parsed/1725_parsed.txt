sequence_analysis extreme an online em_algorithm for motif_discovery motivation identifying regulatory_elements is a fundamental problem in the field of gene_transcription motif discoverythe task of identifying the sequence_preference of transcription_factor proteins which bind to these elementsis an important step in this challenge meme is a popular motif_discovery algorithm unfortunately memes running time scales poorly with the size of the dataset experiments such as chip_seq are providing a rich amount of information on the binding preference of transcription_factors meme cannot discover motifs in data from these experiments in a practical amount of time without a compromising strategy such as discarding a majority of the sequences results we present extreme a motif_discovery algorithm designed to find dna_binding in chip_seq data unlike meme which uses the expectation_maximization for motif_discovery extreme uses the online expectation_maximization to discover motifs extreme can discover motifs in large_data in a practical amount of time without discarding any sequences using extreme on chip_seq data we discover many motifs including some novel and infrequent motifs that can only be discovered by using the entire dataset conservation analysis of one of these novel infrequent motifs confirms that it is evolutionarily_conserved and possibly functional availability_and all source_code is available at the github repositorytranscription factors tfs are proteins that play_an in transcriptional_regulation by promoting or blocking the recruitment of rna_polymerase they can bind specifically to recognition_sequences on the genome or to other tfs in a complex high_throughput assays generate a rich amount of information on the sequence_preference of tfs chip_seq can provide the genome_wide binding_sites of a single tf dnase_seq which sequences open_chromatin in the genome can provide single_nucleotide for the binding_sites of many tfs when sequenced deep enough binding_sites appear as dips or footprints fps in the dnase_seq signal fps only identify the locations of the tf_binding they do not identify the proteins that are bound there these assays can provide functional information for thousands to millions of base_pair regions in the genome the task of identifying the sequence_preference of a tf is called motif_discovery motif_discovery can be classified as either search based or probabilistic search based_algorithms infer motifs as consensus_sequences probabilistic algorithms infer motifs as position frequency matrices pfms which specify the frequency of nucleotides for each position in the binding_site while pfms provide more information about a tfs binding_specificity than consensus_sequences inferring pfms is not always practical probabilistic motif_discovery programs usually use algorithms such as expectation_maximization em for inference these algorithms scale poorly with dataset size search based_algorithms are therefore preferred for large_datasets dreme is an example of a search based algorithm designed for large_datasets meme is a popular probabilistic motif_discovery program it uses the em_algorithm to infer pfms since its inception in it has gone through several versions however meme scales poorly with large_datasets one strategy to improve memes performance is to discard many of the sequences this is the strategy used by memechip however discarding sequences can decrease the chance of discovering motifs corresponding to infrequent cofactors another strategy as used in steme applies suffix_trees to accelerate meme however steme is only practical for finding motifs of up to width on large_datasets because its efficiency tails off quickly as the motif width increases other strategies for accelerating meme involve specialized hardware such as parallel pattern matching chips on pci cards however these implementations require hardware not available to most researchers to overcome these issues we propose an online implementation of the meme algorithm that we have named extreme the online em_algorithm sticks closely to the original em_algorithm hereafter referred to as the batch em_algorithm normally the online em_algorithm is designed for cases where not all data can be stored at once although most computers have enough memory to store entire sequence_datasets at once the online em_algorithm is still advantageous for motif_discovery because for large_sample the online em_algorithm is more efficient from a computational point_of than the batch em_algorithm we show that many of the features of the original meme algorithm can be adapted to whom correspondence should be addressed to the online methodology furthermore we show that extreme can achieve_similar results to meme in a fraction of the execution time we also show that using the entire dataset is necessary to discover infrequent motifs which is not always practical to do with meme to the best of our knowledge this is the first application of the online em_algorithm to motif_discovery meme is a popular motif_discovery algorithm it has been a valuable_tool in the ongoing challenge of identifying regulatory_elements however its performance scales poorly with large_datasets experiments such as chip_seq generate data that are too large for meme to process in a practical amount of time without discarding most of the data to overcome this challenge we have developed extreme a motif_discovery algorithm that can process chip_seq data efficiently without discarding any data we first show using simulated_datasets that memes running time scales much faster than extremes running time with respect to dataset size using a chip_seq dataset and a dnase_seq dataset we demonstrate that using the entire dataset of sequences is necessary to discover infrequent motifs we also show that the motifs discovered by extreme are similar in quality to the motifs discovered by meme 
