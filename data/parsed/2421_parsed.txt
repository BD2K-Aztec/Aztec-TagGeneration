indel tolerant read_mapping with trinucleotide frequencies using cache oblivious kd trees motivation mapping billions of reads from next_generation experiments to reference_genomes is a crucial task which can require hundreds of hours of running time on a single_cpu even for the fastest known implementations traditional approaches have difficulties dealing with matches of large edit_distance particularly in the presence of frequent or large insertions_and indels this is a serious obstacle both in determining the spectrum and abundance of genetic_variations and in personal_genomics results for the first time we adopt the approximate string matching paradigm of geometric embedding to read_mapping thus rephrasing it to nearest_neighbor queries in a q gram frequency vector space using the l distance between frequency vectors has the benefit of providing lower bounds for an edit_distance with affine gap costs using a cache oblivious kd tree we realize running_times which match the state of the art additionally running time and memory_requirements are about constant for read_lengths between and bp we provide a first proof_of that geometric embedding is a promising paradigm for read_mapping and that l distance might serve to detect structural_variations treq our initial_implementation of that concept performs more accurate than many popular read_mappers over a wide_range of structural_variants availability_and treq will be released under the gnu public license gpl and precomputed genome indices will be provided for download at http treq sf net the possibility to re sequence genomes rapidly and cost efficiently using next_generation ngs_technologies has provided fascinating insights into the breadth and prevalence of human genetic_variation in particular the abundance of structural variantswe will jointly refer to them as insertion and deletions indels and not distinguish for example between novel sequence insertions and duplications unfortunately these structural_variants more exactly short indels are complicating the first step in the analysis mapping dna sequencing_reads to reference_genomes this is surprising as approximate string matching the theoretical problem underlying read_mapping is arguably one of the most fundamental problem in bioinformatics and a very well studied to whom correspondence should be addressed area in data_mining for surveys see boytsov b navarro mapping reads from dna sequencing_experiments requires solving approximate string matching problems for billions of short dna_sequences of length_bp against entire genomes there have been a multitude of methods proposedsee for example the benchmarks performed byand the results and optimal choice of method depend strongly on the read_length and the maximal edit_distance allowed out of the variety of different approaches see boytsov a for a detailed taxonomy proposed for approximate string matching current read_mappers rely on only three different paradigms seed and extend encompassing hash tables and q gram filtering prefix suffix tries using the_burrows and one approach based on merge sort their computational_efficiency depends on the existence of exact_matches between the read and the genome intuitively there cannot be an approximate match of small edit_distance between a read and the genome if not one or several exact_matches of length q exist the relationship between the presence of such matching q grams sequence of length q and the edit_distance was revealed in a seminal paper by a lower_bound for the edit_distance between two strings is given by the l distance between their count vectors of qgrams for q these are the trinucleotide frequency vectors this provides the basis for a seed extend strategy of using efficient algorithms for finding one initial exact q gram match exploring whether additional exact q gram matches support the existence of an approximate match left and then use an efficient alignment algorithm such as myers bit vector algorithm to verify and assess the quality of the match existing_methods either implement this idea of q gram filtering directly or implicitly rely on it the running_times depend on the maximal edit_distance permitted smaller maximal edit_distance allows to chose larger q thus there will be fewer exact q gram matches and putative approximate matches to explore indeed their probability decreases exponentially if we think of patterns being derived from a match in the text through edit operations of technical nature sequencing_errors or biological nature genetic_variants the probability of hitting all q grams and thus rendering q gram filtering useless increases with the number of edits gapped q grams requiring exact_matches in a fixed pattern of q out of q q positions are one way of addressing this most popular approaches however strictly limit the maximal edit_distance and use heuristics to keep running time in check at the potential cost of missing best matches most approaches to approximate string matching using ukkonens q gram lemma rely on the existence of reasonably large q grams which are exact_matches between pattern and text these can be found efficiently with a number of techniques and yield putative hits which are then evaluated using an alignment algorithm for each pattern and each putative hit the number of shared q grams is evaluated de_novo left we map both reads and genome locations to vectors of gram frequencies and identify approximate matches finding nearest_neighbors right this is accelerated by the use of a spatial index structure e g a kd tree which is created by recursively partitioning the input space around the median value of a dimension in particular the detection of indels suffers from the limits on edit_distance of matches as our results show many of the existing_methods have problems in mapping bp reads with indels to the reference_genome longer_reads improve the situation for some approaches consequently the state of the art in the detection of structural_variants is the use of paired_end libraries and advanced methods for performing downstream_analysis after mapping the paired_end libraries to reference_genomes noted that in particular detection of small bp indels is a largely open_problem although our analysis reveals that one recent approach stampy provides excellent sensitivity in the detection of such short indels the deviations from mean insert length are measured and thus the sequencing_coverage required to arrive at statistical_significance is inversely proportional to the indel length our results will show that the detection of bp indels from single reads is possible using l distance we pursue a different strategy from current read_mappers following ideas first proposed for protein_sequences and generally referred to as vector space frequency distance methods embedding strings as q gram frequency vectors these geometric embeddings have not yet made their way into read_mapping unlike other areas of bioinformatics for example in the estimation of bacterial_species phylogeny through oligonucleotide frequency distances under the name of k spectra in classifying protein_sequences using support_vector or in alignment_free sequence_comparisons we choose q and consider vectors of all trinucleotide frequencies by embedding reads of length between and bp as vectors in r the problem of finding a minimal edit_distance approximate match now becomes the problem of finding a nearest_neighbor in a data_set of vectors derived from a genome by sliding a window over the genome and mapping the sequence to a frequency vector right finding approximate nearest_neighbors however has been well studied and a large range of spatial index data_structures have been proposed generally leading to o nlogn complexity for construction of the spatial index and o logn complexity for nearest_neighbor queries where n denotes the number of points in the index empirical running_times however vary_widely based on the detailed_structure of the problem instance and thus algorithm engineering is important for achieving competitive running_times the vector space frequency distance method introduced inwas not further pursued except in a small_scale study focusing on different ways to map strings to vectors in recent_years researchers in databases both multi media and text investigated indices in high_dimensional spaces but the small alphabet size of dna that leads to nonsparse frequency vectors preclude their use here boytsov b implemented and evaluated a range of different approaches in approximate string matching also on dna datasets which are of small bacterial genome_size megabasepair we found that his findings do not translate when the genome_size increases by a factor of for instance the effects of cache or page misses which motivate cache oblivious data_structures that guarantee minimum number of cache misses irrespective of cache size and memory hierarchy are simply not observable on small data_sets during the development of the method we used state of the art kd tree libraries but found them to be lacking in performance once the index contained more than a few million points indeed on genome_size problems the ability to effectively implement data_structures in a cache oblivious manner is more important than computational_complexity in the following sections we will show how l distance serves as a lower_bound for affine gap costs introduces our methodology and implementation details and provides detailed analysis on both real and simulated_data to show the advantages and drawbacks of geometric embeddings to evaluate treq and compare its performance we ran a number of read mappersbowtie bwa soap mrfast novoalign http www novocraft com ssaha last stampy and razers on simulated and real read datasets see supplementary tables s for version numbers these read_mappers were evaluated with their default and in some cases customized parameters for allowing maximal permissible edit_distance we also forced them to report one single best_hit for treq parameters q d q g and k were fixed throughout the experiments currently quality_scores are ignored in the match evaluation phase of treq for simulated_data we define accuracy as the percentage of reads_mapped to the actual genomic_locations from where they were sampled we use human_genome hg build as the reference for all the experiments 
