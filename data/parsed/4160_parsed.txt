sequence_analysis seal a distributed short_read and duplicate removal tool seal is a scalable tool for short read_pair mapping and duplicate removal it computes mappings that are consistent with those produced by bwa and removes duplicates according to the same criteria employed by picard markduplicates on a node hadoop cluster it is capable of processing about gb per hour in map rmdup mode while reaching a throughput of gb per hour in mapping only mode availability seal is available online at http biodoop seal sourceforge net deep sequencing_experiments read billions of short fragments of dna and their throughput is steadily_increasing these reads need to be post processed after sequencing to prepare the data for further analysis which implies that the computational steps need to scale their throughput to follow the trend in sequencing_technology such high data rates imply the need for a distributed architecture that can scale with the number of computational nodes typical post processing_steps include sequence_alignment which is a fundamental step in nearly all applications of deep sequencing_technologies and duplicate_read which is a major_concern for illumina_sequencing the pressure for better and faster tools has recently given rise to the development of new alignment_algorithms that outperform traditional ones in terms of both speed and accuracy distributed alignment tools have also been created with crossbow as one of the most prominent examples however crossbow is based on bowtie and thus does not currently support gapped_alignment an important feature for many applications in this work we describe seal a new distributed alignment_tool that combines bwa with duplicate read detection and removal seal harnesses the hadoop mapreduce framework http hadoop apache org to efficiently distribute i o and computation across cluster nodes and to guarantee reliability by resisting node failures and transient events such as peaks in cluster load in its current form seal specializes in the pair end alignment of sequences read by illumina sequencing_machines seal uses a version of the original bwa code base version c that has to whom correspondence should be addressed been refactored to be modular and extended to use shared memory to significantly improve performance on multicore systems 
