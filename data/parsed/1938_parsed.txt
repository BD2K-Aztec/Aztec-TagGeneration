g blastn accelerating nucleotide alignment by graphics processors motivation since the basic_local blast has become one of the most popular and fundamental bioinformatics_tools for sequence_similarity searching receiving extensive attention from the research_community the two pioneering papers on blast have received over citations given the huge population of blast users and the increasing size of sequence_databases an urgent topic of study is how to improve the speed recently graphics_processing gpus have been widely used as low_cost high_performance platforms the existing gpu blast is a promising software_tool that uses a gpu to accelerate protein sequence_alignment unfortunately there is still no gpu accelerated software_tool for blast_based nucleotide sequence_alignment results we developed g blastn a gpu accelerated nucleotide alignment_tool based on the widely used ncbi_blast g blastn can produce exactly the same results as ncbi_blast and it has very similar user commands compared with the sequential ncbi_blast g blastn can achieve an overall speedup of x under megablast mode more impressively it achieves an overall speedup of x over the multithreaded ncbi_blast running on cpu cores when running under blastn mode the overall speedups are x against core and x against core g blastn also supports a pipeline mode that further improves the overall performance by up to when handling a batch of queries as a whole currently g blastn is best optimized for databases with long_sequences we plan to optimize its performance on short database sequences in our future work availability the basic_local blast is one of the most fundamental software_tools in bioinformatics for matching biological_sequences due to the explosive_growth of sequence_data improving the speed of blast has become increasingly critical in the last decade many attempts have been made to design and develop new blast software_tools for specific hardware or even parallel supercomputers unfortunately most researchers do not have access to these hardware platforms following the popularity of multicore processors several blast software_tools using multiple cpu cores for increased speed have been developed one good example is the widely used national_center ncbi_blast which supports multithreading in the preliminary stage of the blast algorithm our experiments on a server with two quad core intel_xeon cpus show that the multithreaded ncbi_blast can achieve an average speedup of x over the sequential version ncbi_blast also supports an indexed mega blast module which uses the database index to achieve an approximate speedup of x plast is a parallel implementation of blast that applies a new indexing technique together with sse instructions and multithreading to achieve better alignment speed klast is an optimized and extended version of plast and includes a module klastn to compare two sets of dna_sequences as compared with ncbi blastn klastn can achieve good speedup with comparable sensitivity in recent_years graphics_processing gpus have been widely_accepted as low_cost high_performance platforms compared with traditional multi core cpus gpus have much higher computational horsepower and memory bandwidth many bioinformatics_tools have been accelerated by gpus in recent_years the significant_difference between gpu and cpu architectures has created many challenges in developing highly_efficient gpu software without the development of carefully_designed parallel algorithms and sophisticated optimizations the huge potential of gpus may not be fully realized some gpu based software_tools have been developed for protein sequence_alignment lings gpu based blast software can achieve a speedup of x compared with ncbiblast recently vouzis and sahinidis developed gpu blast which can typically achieve acceleration speedup of x relative to the sequential ncbi_blast the major advantage of gpu blast is that it can produce the same results as ncbi_blast to the best of our knowledge we are the first to provide an open_source gpu solution namely g blastn for nucleotide sequence_alignment that can produce the same results as ncbi_blast g blastn is developed on top of the ncbi_blast source_code it currently supports the megablast and blastn modes of ncbi_blast for brevity we use blastn to refer to the nucleotide blast module of ncbi_blast the major idea behind g blastn is to store a small hash_table in the fast gpu cache memory and then scan the dna database in parallel using all of the available gpu cores we have overcome several challenges to fully use the gpu horsepower to achieve significant speedup some other parts of blastn have also been optimized we evaluate g blastns performance by running a set of experiments on human and mouse genome_databases as well as a partial of the ncbi nucleotide nt collection database using a contemporary nvidia gtx gpu with a cost of g blastn under megablast mode can achieve significant speedups over the multithreaded blastn running on core or core cpus when running under the more sensitive blastn mode g blastn also achieves reasonable speedups when processing a batch of queries g blastn supports a pipeline mode that can further improve the performance by up to the remainder of the article is organized as follows in section we briefly_review the main algorithms of blastn and present our design for g blastn in section we present the detailed implementation of g blastn in section we present the experimental_results we conclude the article in section 
