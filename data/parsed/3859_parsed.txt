ragout a reference assisted assembly tool for bacterial_genomes bacterial_genomes are simpler than mammalian ones and yet assembling the former from the data currently generated by high_throughput short_read sequencing_machines still results in hundreds of contigs to improve assembly_quality recent_studies have utilized longer pacific_biosciences pacbio reads or jumping libraries to connect contigs into larger scaffolds or help assemblers resolve ambiguities in repetitive_regions of the genome however their popularity in contemporary genomic_research is still limited by high_cost and error_rates in this work we explore the possibility of improving assemblies by using complete_genomes from closely_related strains we present ragout a genome rearrangement approach to address this problem in contrast with most reference guided algorithms where only one reference_genome is used ragout uses multiple references along with the evolutionary_relationship among these references in order to determine the correct order of the contigs additionally ragout uses the assembly_graph and multi_scale synteny_blocks to reduce assembly gaps caused by small contigs from the input assembly in simulations as well as real_datasets we believe that for common bacterial_species where many complete_genome from related strains have been available the current high_throughput paradigm is sufficient to obtain a single high_quality scaffold for each chromosome the recent proliferation of next_generation with short_reads has enabled many new experimental opportunities but it has also raised formidable computational challenges in genome_assembly even for relatively simple bacterial_genomes their assemblies from current_generation of high_throughput short_reads are still fragmented with hundreds of contigs to improve the assemblys quality recent_studies have utilized longer pacific_biosciences pacbio reads or jumping libraries to connect contigs into larger scaffolds or help assemblers resolve ambiguities in repetitive_regions of the genome however their popularity in current genomic_research is still limited by high_cost and error_rates when a related genome is available an alternative approach is to use this genome to guide the assembly of the target_genome in a method called reference assisted assembly the first reference assisted assembly tools aligned contigs against the reference and ordered them according to their positions in the reference_genome while this approach is still commonly used it introduces errors when structural_variations between the reference and the assembled target_genome are present in an attempt to address this problem gaul and blanchette formulated the contig ordering problem which attempts to order contigs so that the break distance dcj distance between the resulting scaffold and the reference_genome is minimized this formulation has been further applied in some reference guided assembly tools unfortunately while the approach is theoretically sound these tools still generate erroneous scaffolds when there are rearrangements between the target and reference_genomes this poses an important question is a single reference_genome sufficient to obtain a single scaffold for each chromosome without errors recently introduced raca software which made an important step toward reliable reconstruction of the target assembled genome in contrast to other tools which use only one reference raca utilizes a reference as well as multiple outgroups to guide the assembly this approach proved to be valuable since the adjacency information in the outgroups can also help infer the adjacencies in the target assembly although raca marked an important advancement in the reference guided assembly problem it still suffers some limitations first raca uses information from outgroup genomes but it heavily relies on a single reference as with any genome rearrangement tools raca decomposes these sequences into synteny_blocks however rather than constructing synteny_blocks by considering all input_sequences raca constructs synteny_blocks based on pairwise_sequence against only the reference_genome this approach in some cases cannot detect synteny_blocks and also raises the question of what to do with assembly sequences contigs that do not align against the reference second unlike synteny_blocks constructed from complete_genomes synteny_blocks constructed in the presence of contigs can be fragmented since assemblies usually have contigs of various lengths constructing synteny_blocks from fragmented assemblies raises a problem on which scale should synteny_blocks be constructed if one constructs large_scale synteny_blocks then small and fragmented synteny_blocks within small contigs are not considered thus leading to gaps in the assembly on the other hand if one constructs small_scale synteny_blocks then the rearrangement to whom correspondence should be addressed the author published_by this is an open_access the terms of the creative_commons http creativecommons org_licenses which permits non commercial re use distribution and reproduction in any medium provided the original_work for commercial re use please_contact permissions_oup com analysis becomes harder since smaller synteny_blocks are more likely to exhibit structural_variations and are also more susceptible to be incorrectly identified i e false synteny_blocks this dilemma must be addressed in order to obtain high_quality scaffolds in this work we present ragout reference assisted genome ordering utility a genome rearrangement approach for reference assisted assembly that can produce high_quality scaffolds with a small number of misordered contigs and high genome_coverage rather than working with a single reference ragout uses multiple complete_genomes from closely_related strains in contrast with most existing_tools in which only a fixed scale of synteny_blocks is used our algorithm works iteratively with different scales of synteny_blocks and also utilizes the assembly_graph to improve scaffolds we demonstrate that with multiple references ragout significantly_improves the assembly of the target_genome compared to existing_tools through simulations as well as real_datasets we believe that for common bacterial_species for which many complete_genome from related strains have been made available the current high_throughput paradigm is sufficient to assemble into a single high_quality scaffold the ragout software is freely_available at https github com fenderglass ragout we benchmarked ragout against other reference assisted assembly tools mauve contig mover oslay raca on one simulated and three real bacterial datasets since the complete sequences of target genomes are available we can also assess the quality of the resulting scaffolds by the number of misordered contigs scaffold gaps and coverage as each output scaffold is an ordered list of contigs we define the number of misordered contigs as the minimum number of contigs in the scaffolds whose mapping positions or directions are not consistent with the mapping positions and directions of the contigs before and after them also we define the number of gaps in a scaffold as the number of contig pairs that are adjacent in a scaffold but are separated by some other contigs when we map all contigs to the reference_genome the coverage is defined as the total number of aligned bases against the reference divided by the genome_size mauve contig mover and oslay were run with parameters recommended for bacterial_genomes for ragout we ran three iterations with the corresponding minimum synteny block sizes as they are the default scales used in sibelia for bacterial_genomes since raca works with only one synteny block size we chose the maximal synteny block scale most reliable in this article we have presented ragout a package for improving assemblies using multiple complete references we demonstrated that with multiple related genomes available one can obtain a complete and high_quality scaffold for each chromosome using only high_throughput this marks an important improvement in genome_assembly of short_reads and even raises a question whether long pacbio reads or long jumping libraries are needed for genomic studies of common bacteria where multiple related references have been available the current version of ragout uses sibelia for synteny block reconstruction and therefore limits itself to bacterial_genomes when synteny_blocks have been available ragout is fast and memory_efficient we plan to make ragout compatible with other synteny block generation tools that can work with mammalian_genomes e g cactus aligner and further extend ragout to work with mammalian datasets another limitation of ragout is that it only uses the assembly_graph for recovering repetitive blocks or small contigs that could not be captured in synteny analysis therefore it can make mistakes when rearrangements happened on the target branch since de_bruijn can be transformed into breakpoint graphs and vice_versa the de_bruijn output from short_read assemblers can also be used for rearrangement analysis and we will focus on this issue in further studies 
