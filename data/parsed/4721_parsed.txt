tral tandem_repeat annotation library motivation currently more than sequence tandem_repeat detectors are published providing heterogeneous partly complementary partly conflicting_results results we present tral a tandem_repeat annotation library that allows running and parsing of various detection outputs clustering of redundant or overlapping annotations several statistical frameworks for filtering false_positive annotations and importantly a tandem_repeat annotation and refinement module based on circular profile_hidden cphmms using tral we evaluated the performance of a multi_step tandem_repeat annotation workflow on sequences in uniprotkb_swiss the researcher can use these results to predict run times for specific datasets and to choose annotation complexity accordingly availability_and tral is an open_source python_library and is available together with documentation and tutorials via http www vital it ch software tral tandem_repeats trs are sequence_features where motifs or tr units are found right next to each other often as imperfect repetitions currently more than tr detector trd programs exist each focusing on different tr types and using different methodologies we have shown that currently available trds do not provide exhaustive detections and combining trs from several trds is essential for reliable tr annotation therefore a researcher interested in trs needs to handle all of the following tasks i executing and parsing results of several trds despite no commonly_accepted file_format ii validating tr predictions and clustering redundant or overlapping results iii filtering out false_positive tr predictions in a robust statistical_framework iv annotating known trs homogenously across homologous_sequences and discerning variation among the trs each of these tasks is implemented in tralan open_source python tr annotation library tral is highly modularized such that a researcher can use the implemented methods or customize them by adding other trds overlap criteria statistical_tests or model based annotation methods the software is designed to run efficiently and user_friendly on single machines as well as on large computing clusters for a variety of workflows scripts and tutorials are available online 
