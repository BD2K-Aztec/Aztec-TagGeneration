genome_analysis trimmomatic a flexible trimmer for illumina sequence_data motivation although many next_generation ngs read preprocessing tools already existed we could not find any tool or combination of tools that met our requirements in terms of flexibility correct handling of paired_end data and high performance we have developed trimmomatic as a more flexible and efficient preprocessing tool which could correctly handle paired_end data results the value of ngs read preprocessing is demonstrated for both reference based and reference free tasks trimmomatic is shown to produce output that is at least competitive with and in many cases superior to that produced by other tools in all scenarios tested availability_and trimmomatic is licensed under gpl v it is cross_platform java required and available atthe presence of poor_quality or technical sequences such as adapters in next_generation ngs_data can easily result in suboptimal downstream_analyses nonetheless it is not trivial to precisely identify such sequences including partial adapter sequences while leaving valid sequence_data intact furthermore given the rate with which ngs sequence_data are currently being produced the additional burden of sequence preprocessing must be kept relatively modest so as to avoid adding undue overhead to the bioinformatics pipeline the preprocessing approach must also not interfere with the downstream_analysis of the data for example ngs_data often come in the form of paired_end and typically the forward and reverse reads are stored in two separate fastq_files which contain reads from each dna_fragment in the same order many downstream tools use this positional relationship between pairs so it must be maintained when preprocessing the sequence_data the wide_range of available ngs library preparations combined with the range of downstream applications demand a flexible_approach it should be possible to choose a set of processing_steps to be applied in a user_defined order and ideally even allow some steps to be included more than once in other domains this can be achieved using a shell pipeline to combine multiple tools as required e g in newick however the need for pair awareness makes this approach difficult to apply as the connection between the corresponding reads in the paired files will typically be lost correcting this would require an additional step to reconcile the read_pairs and store the singleton reads separately furthermore the processing_steps would not be able to assess the read_pair as a unit which is necessary or at least advantageous in some cases the alternative approach of executing a series of tools in succession would involve the creation of intermediate files at each step a non trivial overhead given the data size involved and would still require pair awareness to be built into every tool used these issues suggest that the typical approaches to achieve flexibility by combining multiple single purpose tools are not optimal thus although many ngs read preprocessing tools exist none of them alone or in combination could offer the desired flexibility and performance and most were not designed to work on paired_end data as a result we developed trimmomatic as a more flexible pair aware and efficient preprocessing tool optimized for illumina ngs_data to illustrate the value of data preprocessing we evaluated two different scenarios reference based alignment using bowtie and bwa against the escherichia_coli k mg reference ncbi sequence nc and de_novo using velvet on public e coli k mg datasets sra datasets srx and srr as described in the supplementary methods 
