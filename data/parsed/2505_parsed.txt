integrating genome_assemblies with maia motivation de_novo of a eukaryotic_genome with next_generation data is still a challenging_task over the past_few several assemblers have been developed often suitable for one specific type of sequencing_data the number of known genomes is expanding rapidly therefore it becomes possible to use multiple reference_genomes for assembly projects we introduce an assembly integrator that makes use of all available data i e multiple de_novo assemblies and mappings against multiple related genomes by optimizing a weighted combination of criteria next_generation ngs_platforms such as roche branford ct solid ab foster city ca and solexa illumina san_diego ca allow for gigabytes of data generation at an affordable cost the third generation sequencing_platforms helicos cambridge ma pacific_biosciences menlo park ca may even let the cost per megabase drop under per megabase considering the relatively low_cost of these platforms compared with classical sanger_sequencing it becomes possible to use them for de_novo sequencing_projects however the millions of short dna_sequences generated by ngs_platforms called reads are still relatively small given this limited read_length and the many repetitive_regions in a eukaryotic_genome de_novo is still a challenging_task to alleviate this problem it is essential to design_algorithms that make full use of all available data over the past_few several assemblers have been developed for ngs_data assemblers pull millions of reads together into larger contiguous sequences called contigs a typical assembly of a eukaryotic_genome is a set with thousands of contigs these contigs are unordered as well as unoriented i e it is unknown whether they come from the forward or reverse strand the process to determine orientation and relative ordering of contigs is called scaffolding to whom correspondence should be addressed some assemblers have built in scaffolders otherwise an external scaffolder can be used such as bambus an alternative to de_novo is mapping the reads against a finished or draft_genome from a close_relative a template from such a mapping a consensus can be called generating a comparative assembly as the number of known genomes is growing rapidly in the future it will be more often the case that multiple close_relative genomes are available to create such assemblies however mapping against a closely_related genome will only yield those parts that are identical in target and template genome to get the unique components in the target_genome a de_novo will always be required assemblers are often specialized for a specific type of reads de_bruijn graph_based assemblers such as velvet abyss and allpaths are most suitable for short_reads solid solexa whereas overlap_layout algorithms such as newbler roche and cabog are more suitable for the longer_sequences it is not trivial to deal efficiently with different read types simultaneously or to combine outputs of different assemblers hybrid strategies using two types of sequencing_data mostly work by altering the output of a first assembler to make it suitable for application on a second generated contigs with vcake using solexa data which were subsequently used as input to the newbler assembler together with data simulated sanger reads from a set of contigs assembled by newbler with data these reads were subsequently used as input to the celera_assembler combined with true sanger reads we are aware of only one de_novo assembler designed to integrate sanger and ngs_data called forge however forge does not allow for integration of comparative assemblies other hybrid strategies combine assemblies using minimus minimus is restricted to only two assemblies so to combine three or more assemblies it has to be applied iteratively minimus also does not allow for weighted combinations of contigs in this article we describe maia multiple assembly integrator a graph_based algorithm for integration of several de_novo and comparative assemblies assembly integration is related to both de_novo and scaffolding but differs in its input an assembler deals with short_sequences reads and high genome_coverage to account for read errors and repeats in the genome a scaffolder tries to determine the relative ordering and orientation of large sequences contigs of a single de_novo assuming the target_genome is covered once an integrator is a hybrid ofan overlap_graph is constructed in which nodes represent contigs and edges represent overlaps a forward and a reverse edge is added between the pairs of nodes but these are indicated by an undirected edge for simplicity a start node and an end node is determined using a reference_genome edges are assigned weights based on several properties of the alignments and contigs combined using weighted z scores d an orientation is assigned to the contigs by traversing the graph depth first in order of weight indicated by the numbers edge dashed box in b assigns reverse orientation to the blue node while a forward orientation has already been assigned via edge therefore it is recognized as conflicting and it is removed e oriented contigs and end_to overlaps form a directed graph f the highest scoring path is found using a tabu search_procedure which leads to the assembly of a chromosome these dealing both with contigs and manifold genome_coverage allowing a number of assemblies to be considered simultaneously maia is not restricted in the number of assemblies and uses the full contigs produced not requiring these to be broken into reads or k_mers of any type pairwise_alignments of contigs are calculated to generate an overlap_graph in this graph nodes represent contigs and edges represent alignments these edges are weighted with several properties of the contigs and alignments which are combined using weighted z scores assemblies are integrated at chromosome level by finding the combination of contigs which yields the highest_score this is achieved by optimizing a path in the overlap_graph between the contigs that align closest to the and ends of a reference_genome the assembled chromosome directly follows from this path the maia approach has two main advantages first multiple known related genomes can be used simultaneously in the assembly process second different ngs sources can be assembled with specific de_novo assemblers to be integrated afterwards with maia as a demonstration of the algorithm maia is applied to the saccharomyces_cerevisiae strain cen pk d a strain widely used for systems_biology research and metabolic_engineering its genome is assembled using solexa reads reads and three genomes of previously_sequenced closely_related s cerevisiae strains the method is compared with two other hybrid approaches using minimus and velvet 
