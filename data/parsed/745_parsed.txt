biofvm an efficient parallelized diffusive transport solver for d biological simulations motivation computational_models of multicellular systems require solving systems of pdes for release uptake decay and diffusion of multiple substrates in d particularly when incorporating the impact of drugs growth substrates and signaling factors on cell receptors and subcellular systems_biology results we introduce biofvm a diffusive transport solver tailored to biological_problems biofvm can simulate release and uptake of many substrates by cell and bulk sources diffusion and decay in large d domains it has been parallelized with openmp allowing efficient simulations on desk top workstations or single supercomputer nodes the code is stable even for large time steps with linear computational_cost scalings solutions are first order accurate in time and second order accurate in space the code can be run by itself or as part of a larger simulator availability_and biofvm is written in c with parallelization in openmp it is maintained and available for download at http biofvm mathcancer org and http biofvm sf net under the apache license v mathematical_modeling of many biological_systems requires solving for secretion diffusion uptake and decay of multiple substrates in three dimensions cells change phenotype division rate metabolism secretions etc in response to their microenvironment the spatial distribution of cells and their uptake and secretion of substrates alters the substrates distribution affecting later cell_behavior with zero flux conditions on ox here x is the computational domain with boundary ox q is the vector of substrate densities q are the substrate saturation densities d are the diffusion_coefficients k are the decay_rates s and u are the supply and uptake_rates may vary throughout the domain f x k w k s k u k q k k ntg is a collection of cells centered at x k with volume w k supply and uptake_rates s k and u k and saturation densities q k k s is defined by k x inside cell k and k x otherwise all products of vectors are element wise while most multicellular models e g morpheus chaste include diffusion solvers they generally are not designed to scale well to large d domains with more than a few substrates most are not designed for multithreaded parallelization on multicore desktops the solvers tend to use explicit time steppings require strict stability restrictions on dt or implicit time steppings stable but require inverting large matrix systems 
