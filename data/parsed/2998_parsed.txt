data_and mir prefer an accurate fast and easy to use plant mirna prediction_tool using small rna_seq plant microrna prediction_tools that use small_rna sequencing_data are emerging quickly these existing_tools have at least one of the following problems i high false_positive ii long running time iii work only for genomes in their databases iv hard to install or use we developed mir prefer mirna prediction from small rna_seq which uses expression_patterns of mirna and follows the criteria for plant microrna annotation to accurately_predict plant mirnas from one or more small rna_seq samples of the same species we tested mir prefer on several plant_species the results show that mir prefer is sensitive accurate fast and has low memory_footprint availability_and https github complant micrornas mirnas are nt_long non_coding that play_important in transcriptional_and of gene_expression recently_developed genome_wide mirna annotation tools all use small rna_seq to quantify the expression of annotated mirnas and to predict novel ones these tools suffer from several of the following problems first these tools usually have variable sensitivity and high false_positive fp rate when applied to different species second most of existing ngsbased tools are slow third most existing command_line based tools are not user_friendly web_server tools such as miranalyzer are easy to use but they usually only work for genomes in their databases which inhibit users to analyze new genomes in addition most of web_server tools also have other problems listed here thus there is a need for a plant mirna prediction_tool that has good performance high_sensitivity low fp rate and accurate works for all plant_genomes runs fast has a small memory_footprint and is easy to use mir pfefer uses expression_patterns of mirnas and follows the criteria for plant microrna annotation to accurately_predict plant mirnas from one or more small rna_seq samples it has high_sensitivity and low fp rate mir prefer is much faster and uses less memory than existing_tools using mir prefer requires minimum informatics expertize it has low dependency on other programs there is no need to compile or install the pipeline it provides a checkpoint feature which makes it easy to continue an unfinished job from where it was stopped and the documentation is publicly_available the mir prefer pipeline is in the process of being incorporated into the maker p genome_annotation engine job running on a high_performance system is killed because of resource limits or the laptop that the user works on runs out of battery by restarting a job from the latest checkpoint other than starting it from the beginning a lot of time resources can be saved for long running jobs on large plant_genomes as far as we know mir prefer is the first microrna prediction_tool that provides such a useful feature 
