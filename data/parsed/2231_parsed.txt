sequence_analysis hpc clust distributed hierarchical_clustering for large sets of nucleotide_sequences motivation nucleotide sequence_data are being produced at an ever increasing rate clustering such sequences by similarity is often an essential first step in their analysisintended to reduce redundancy define gene_families or suggest taxonomic units exact clustering_algorithms such as hierarchical_clustering scale relatively poorly in terms of run time and memory_usage yet they are desirable because heuristic shortcuts taken during clustering might have unin tended consequences in later analysis steps results here we present hpc clust a highly optimized software pipeline that can cluster large_numbers of pre aligned dna_sequences by running on distributed computing hardware it allocates both memory and computing_resources efficiently and can process more than a million sequences in a few hours on a small cluster availability_and source_code are freely_available meringlab org software hpc clust the pipeline is implemented in c and uses the message_passing mpi standard for distributed computing the time complexity of hierarchical clustering_algorithms hca is quadratic on or even worse on log n depending on the selected cluster linkage method however hcas have a number of advantages that make them attractive for applications in biology i they are well defined and should be reproducible across implementations ii they require nothing but a pairwise distance_matrix as input and iii they are agglomerative meaning that sets of clusters at arbitrary similarity thresholds can be extracted quickly by post_processing once a complete clustering run has been executed consequently hcas have been widely_adopted in biology in areas ranging from data_mining to sequence_analysis to evolutionary_biology apart from generic implementations a number of hierarchical_clustering implementations exist that focus on biological sequence_data taking_advantage of the fact that distances between sequences can be computed relatively cheaply even in a transient fashion however the existing implementations such as mothur esprit or rdp online clustering all struggle with large sets of sequences in light of these performance limits heuristic optimizations have also been implemented such as cd_hit and uclust hierarchical_clustering starts by considering every sequence separately and merging the two closest ones into a cluster then iteratively larger clusters are formed by joining the closest sequences and or clusters the distance between two clusters with several sequences will depend on the clustering linkage chosen in single_linkage it is the similarity between the two most similar sequences in complete linkage between the two most dissimilar sequences and in average linkage the average of all pairwise similarities the latter method is also known as the unweighted_pair mean upgma and is often used in the construction of phylogenetic guide trees in the type of approach used by cd_hit and uclust each input_sequence is considered sequentially and is either added to an existing cluster if it is found to meet the clustering threshold or is used as a seed to start a new cluster although this approach is extremely efficient it can lead to some undesired characteristics i it will create clusters with sequences that may be more dissimilar than the chosen clustering threshold ii it can occur that a new cluster is created close to an existing cluster but at a distance just slightly longer than the clustering threshold at this point any new sequences close to both clusters will be split among the two clusters whereas previous sequences will have been added to only the first cluster this effectively results in a reduction of the clustering threshold locally and iii different sequence input orders will result in different sets of clusters due to different choices of the seed sequences point i also affects hca using single_linkage and to a lesser extent average linkage but does not occur with complete linkage here we present a distributed implementation of an hca that can handle large_numbers of sequences it can compute single complete and average linkage clusters in a single run and produces a merge log from which clusters can subsequently be parsed at any threshold in contrast to cd_hit uclust and esprit which all take unaligned sequence_data as their input hpc clust like mothur takes as input a set of pre aligned sequences this allows for flexibility in the choice of alignment algorithm a future version of hpcclust may include the alignment step as well for further details on implementation and algorithms see the supplementary_material to whom correspondence should be addressed the author published_by this is an open_access the terms of the creative commons attribution license http creativecommons org licenses by which_permits distribution and reproduction in any medium provided the original_work clustering is often among the first steps when dealing with raw_sequence and therefore needs to be as fast and as memory_efficient as possible the implementation of a distributed version of hierarchical_clustering in hpc clust makes it now possible to fully cluster a much larger number of sequences essentially limited only by the number of available computing nodes 
