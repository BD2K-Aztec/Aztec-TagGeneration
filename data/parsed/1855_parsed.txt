data_and flowpeaks a fast unsupervised_clustering for flow_cytometry data via k means and density peak finding motivation for flow_cytometry data there are two common approaches to the unsupervised_clustering problem one is based on the finite mixture_model and the other on spatial exploration of the histograms the former is computationally slow and has difficulty to identify clusters of irregular shapes the latter approach cannot be applied directly to high_dimensional as the computational time and memory become unmanageable and the estimated histogram is unreliable an algorithm without these two problems would be very useful results in this article we combine ideas from the finite mixture_model and histogram spatial exploration this new algorithm which we call flowpeaks can be applied directly to high_dimensional and identify irregular shape clusters the algorithm first uses k means algorithm with a large k to partition the cell_population into many small_clusters these partitioned data allow the generation of a smoothed density_function using the finite mixture_model all local peaks are exhaustively searched by exploring the density_function and the cells are clustered by the associated local peak the algorithm flowpeaks is automatic fast and reliable and robust to cluster shape and outliers this algorithm has been applied to flow_cytometry data and it has been compared with state of the art algorithms including misty mountain flock flowmeans flowmerge and flame in analyzing flow_cytometry data one fundamental_question is how to divide the cells into distinct subsets with the phenotypes defined by the fluorescent intensity of the cell_surface or intracellular markers the unsupervised_clustering for flow_cytometry data is traditionally done by manual gating where cells are sequentially clustered gated in one dimension d or d with the aid of d contour plots and d histograms manual gating has two problems it is i highly subjective depending on the users expertise and the sequences of the markers to draw the gates and where to draw the gates and ii tedious for data consisting of n channels to whom correspondence should be addressed the user needs to check and draw the gates on possibly n pairs of d contour plots the automatic gating of the cells in machine_learning called unsupervised_clustering has become an active research area for the past several years there are currently two common approaches to address the unsupervised_clustering problem one is based on the finite mixture_model and the other is based on spatial exploration of the histograms both approaches have their own weaknesses the finite mixture_model assumes that the data are generated by a mixture of gaussian_distributions students t distribution or skewed t distributions some of these methods require data transformation to reduce the data asymmetry there are two issues faced by the finite mixture_model i how many components are needed and ii the cluster shape is not necessarily the same as what the model assumed most authors resort to the bayesian_information bic or some variants to determine the optimum number of components which still leaves ambiguity as there are competing finite mixtures that give similar bic with completely different partitions of the data the bic approach is also computationally very burdensome since it needs to compute the clustering for all possible k and then determine the best k if the cluster shape is not convex or very asymmetrical these algorithms are likely to split a single cluster into several small ones the new generation algorithms such as misty mountain and flock try to find the irregular shape and not to rely on k they are fast and they find the data dependent cluster shape however the new generation algorithms cannot be applied directly to high_dimensional thus misty mountain needs to first apply principal_component to reduce the dimension and flock needs to search a d subspace that is optimal for a particular cluster these dimension_reduction techniques may result in information_loss in this article our goal is to combine these two approaches allowing us to quickly detect the data dependent cluster shapes so that the algorithm can be applied directly to high_dimensional 
