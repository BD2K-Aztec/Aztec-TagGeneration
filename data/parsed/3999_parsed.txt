sequence_analysis revister an automated pipeline to revise misaligned reads to simple tandem_repeats motivation simple tandem_repeats are highly_variable genetic_elements and widespread in genomes of many organisms next_generation have enabled a robust comparison of large_numbers of simple tandem_repeat loci however analysis of their variation using traditional sequence_analysis approaches still remains limiting and problematic due to variants occurring in repeat sequences confusing alignment programs into mapping sequence_reads to incorrect loci when the sequence_reads are significantly different from the reference_sequence results we have developed a program revister which is an automated pipeline using a local mapping reference reconstruction method to revise mismapped or partially misaligned reads at simple tandem_repeat loci revisster estimates alleles of repeat loci using a local alignment_method and creates temporary local mapping reference_sequences and finally remaps reads to the local mapping references using this approach revister was able to successfully revise reads misaligned to repeat loci from both simulated_data availability revister is open_source available at http rev ister sourceforge net with the advent_of technologies sequencing_approaches became the most common strategy for variation discovery in a population nextgeneration_sequencing have enabled investigators to generate a huge amount of sequence_data and to compare variants between different populations in a cost and time efficient way unfortunately with their inherent sequencing_errors and short sequence read_lengths data analysis for several kinds of repeat elements such as transposon elements and tandem_repeats still remains limiting and problematic the quality of variation discovery relies on the mapping results of sequence_reads to a reference incorrect mapping or non mapping of sequence_reads to the reference is mainly caused by inconsistency between sequences of the test subject and the reference especially in repeat regions and often results in invalid variant_calling simple tandem_repeat str sequences in a test subject frequently show significant differences from a reference_sequence this is likely due to mutation_rates that have been estimated to be mutation_events per generation which is much higher than mutation_rate bp generation for a snp single_nucleotide in a unique_sequence in our study of brucella genomes we observed that mapping programs often assign high quality_scores to incorrectly mapped_reads when two or more tandem_repeat loci contain the same motif with different repeat lengths and their flanking_sequences show high similarity this is because mapping program parameters are normally set to minimize the number of mismatch or insertion deletions indel bases in an alignment supplementary figs s and s this mismapping leads directly to invalid variant_calls in repeat loci because the variation calling programs rely only on the mapping quality_scores to filter out false_positive variants from incorrectly mapped_reads in the human_genome we found that more than two third of strs are overlapping or near within nt transposon elements supplementary notably at rich strs are often discovered near the ends of retrotransposons which frequently results in the left or right flanking_sequence of an str being highly replicated while the other flanking_sequence is unique supplementary the sequence reads_mapped to the incorrect str_loci due to length_variation of the strs can be remapped if flanking_sequences on one side of the strs are unique and the correct lengths of the strs in the sequenced sample are known sequence_reads are also often partially misaligned to a reference_sequence if the reads contain indel variants and do not span enough of both flanking_sequences of the locus a few programs such as smra and gatk realign sequence reads_mapped to the indel variant loci to correct misalignment but their performance is poor for the reads_mapped to str_loci containing long indels to correctly realign sequence_reads at the indel variant loci the programs require correctly mapped_reads supporting the variants but the reads containing tandem_repeat variation often fail to be mapped to the correct loci and as a result the programs do not obtain sufficient read_depth to support the correct variant_calls several programs including pindel dindel and soapindel have been developed to find insertions_and using remapping of to whom correspondence should be addressed unmapped reads or local_alignment approaches but they do not handle reads_mapped to incorrect loci although lobstr has been developed to profile short_tandem loci using its own alignment approach it is limited to only analyzing mer motif repeat loci to overcome the difficulty of variant_calling at str_loci in a bacterial_genome we applied an iterative backbone remapping and assembly method to generate the genome_sequence of bacterial field_isolates and to call their correct variants the method has successfully detected indel variants including tandem_repeat variants shorter than the read_length but is not applicable to eukaryotic_genomes because many variants at diploid genomes are heterozygous analysis of heterozygous str variants is even more challenging compared with snps or short indels because two different non reference alleles are frequently discovered from an str locus and the alleles at the str locus can be different between individuals here we describe revister revise simple tandem_repeat error reads which is an automated pipeline using a local mapping reference reconstruction method to revise mismapped mapped to incorrect position or partially misaligned mapped to correct position but one of ends misaligned reads at str_loci it takes fastq formatted files a reference_sequence file and a list file containing str locations as inputs and uses bwa as an initial mapping program it subsequently realigns reads unmapped by bwa using blat and conducts local_assembly with all aligned_reads to an str locus from the local assembled result new local mapping reference_sequences are generated and all mapped_reads containing more than one mismatch in their alignments and unmapped reads are mapped again to the new local mapping references reads_mapped to the local mapping references are relocated to the original reference and compared with the original alignments to choose the best alignment the performance of revister was compared with two mapping programs including bwa and bowtie and a realignment program gatk using three different test datasets bwa v bowtie v and gatk v were used for the performance comparison for bwa and bowtie default options were used to map sequence_reads to reference_sequences for gatk which realigned the results of two mapping programs options t indelrealigner targetintervals with interval files that contained positions of target str_loci were used revister used bwa v and blat v as initial mapping programs here we presented revister as an automated pipeline to revise mismapped or partially misaligned sequence_reads to str_loci which frequently have high variation rates resulting in misalignment of reads the str_loci are often found near the beginning or end of long repeat sequences such as transposon elements which results incorrect mapping of reads because of high similarity found in the flanking_sequence revister creates local mapping references for each str locus from a graph generated from mapped_reads and then remaps the sequence_reads to the local mapping references using this approach we were able to successfully correct reads misaligned to the str_loci from bwa alignments for both simulated_data overall we observed that revister could align more reads to support correct alleles of str_loci for haploid genomes than the other programs in application to the human_genome data we used indirect comparison methods to evaluate revisters performance because it is difficult to identify true alleles of str_loci in a given human_genome many str in the human_genome are parts of transposon elements which may be distributed in more than several tens_of of copies supplementary figs s and s in such cases mapping programs perform poorly to initially map sequence_reads to correct loci revister like other mapping software will find it difficult to correctly identifynote the exon targeted sequence_reads of four human_genomes were mapped by bwa to the ncbi build human_genome reference_sequence and their alignments were revised by revister the same sequence_reads were mapped by two different methods including pe and se for comparison numbers of reads aligned by two se methods supporting nonreference allele candidates commonly_detected by two different pe methods because allele candidates of pe methods have higher reliability than that of se the numbers of reads which were aligned by revister se and bwa se and concordant with non reference allele candidates detected by revister pe and bwa pe for human exome sequence na were compared with validate improvement of alignments after revisters revision of data from se approaches allele candidates and realign reads for such loci this issue common to for other mapping and genotyping programs may be reduced as advanced sequencing_technologies begin producing longer_reads than current_technologies with the traditional resequencing approach many researchers consider mismapping of reads a difficult problem yet to be resolved while a few methods have been developed to revise partially misaligned reads revister is the first program to revise not only partially misaligned reads but also mismapped reads to str_loci like other programs its performance can be improved in the future first its performance is greatly affected by the initial mapping results from bwa and blat in our comparison we observed that bowtie showed better performance than bwa revister currently uses bwa for the initial mapping because of the xa tags the information in the tags are used only to revise pe but an additional module to use other mapping programs with better performance will be implemented in near future second in the local mapping reference reconstruction step the current version of revister searches for only exact match of two reads to connect them in a graph to reduce the possibility of creating a graph supporting false_positive alleles this may result in not creating any graph with reads containing sequencing_errors time efficiency is also a limitation of the current version supplementary it has been implemented in perl so we would expect significant speedup in the next version to be implemented in c or c the significant_advantage of revister is fault tolerant automation which is one of the most important functions for complex pipelines revister has been designed to be fully_automated and to easily recover an analysis after a process interruption by a system failure such as a power failure when the analysis process is restarted revister begins the process from the unfinished step if users type the same command as the original run 
