genetics_and pygenclean efficient tool for genetic data clean up before association testing genetic_association making use of high_throughput genotyping_arrays need to process large_amounts of data in the order of millions of markers per experiment the first step of any analysis with genotyping_arrays is typically the conduct of a thorough data clean up and quality_control to remove poor_quality genotypes and generate metrics to inform and select individuals for downstream statistical_analysis we have developed pygenclean a bioinformatics tool to facilitate and standardize the genetic data clean up pipeline with genotyping array data in conjunction with a source batch queuing system the tool minimizes data manipulation errors accelerates the completion of the data clean up process and provides informative plots and metrics to guide decision_making for statistical_analysis availability_and pygenclean is an open_source python software and is freely_available along with documentation and examples from http www statgen org genome_wide and similar designs typically rely on the use of massive_amounts of genotype data covering the genome of thousands of study participants before proceeding to statistical_analysis with genotyping array data quality_control qc and data clean up are usually performed to identify poorly performing samples and failed genotypes and to produce the analysis set according to set genetic ancestry criteria this is particularly important for association tests which can be sensitive to even small sources of systematic or random errors when joined with large_sample and a large number of genotyped markers small errors can cause loss of statistical_power and spurious_associations hence a thorough qc is required even though it might become computationally_intensive plink is a tool widely used for quality_assessment providing multiple quality_metrics about markers and samples that allows efficient data management even though plink is a complete toolset it lacks automation and some steps require a considerable amount of manual tuning pygenclean automates the qc procedure using plink while providing the user with multiple summarization files and visual aids for quick identification of quality_issues it also allows for the parallelization of steps for servers with a drmaa compliant distributed resource management system the tool consists of multiple stand alone scripts that are linked together via a main script and a configuration file the latter facilitating user customization remove all the samples that have a missing rate higher than a user_defined threshold the sex check module uses plinks check sex options to compare gender registered in the input_files and the gender deduced by their x chromosome heterozygosity_rate using all samples the script also produces a graph showing the summarized y intensities in function of the summarized x intensities of all samples highlighting problematic samples the script also produces a plot showing the overall log r ratio and b allele_frequency baf for both x and y chromosomes of problematic samples helping in the identification of allelic_imbalance and in estimating the number of x and y chromosomes finally the script computes the heterozygosity_rate on the x chromosome and the number of missing calls on the y chromosome helping in the resolution of possible gender mix_ups the find related samples module uses plinks genome option to estimate the relatedness of study participants using identity by descent and identity by state for each sample_pairs it finds the possible degree of relatedness using the cotterman coefficients as estimated by plink z z and z the script also computes the ibs ratio to produce two plots of z and z in function of ibs ratio above a user_defined threshold those plots provide visual support for the identification of sample pair relatedness finally the script offers the possibility of randomly selecting one sample of each related group excluding other related samples from the final dataset the check ethnicity module uses the plink program to compute the multidimensional_scaling mds values of the samples this method requires a pairwise identity by descent matrix to be computed which can be computationally_demanding using parallelization the pygenclean script efficiently computes the mds values using plink and with the addition of reference_populations such as ceu yri and jpt chb will find outliers with respect to a user_defined reference_population and will create mds graphs the outliers detection script uses the standard_deviation of each cluster found by a k means algorithm two additional scripts are provided for the automation of the qc pipeline the first one subset helps to subset the dataset by excluding or selecting a set of markers or samples the second one compare gold_standard compares the current dataset with a gold_standard for example if some samples from the genomes_project were genotyped the script compares the study genotypes with those of the reference genomes_project data if needed markers are flipped according to their minor_allele for comparability a dataset comprising samples including multiple duplicates of four hapmap samples and internal control samples genotyped at the beaulieu saucier pharmacogenomics centre on the illumina humanomni exome beadchip markers including duplicated markers was processed with pygenclean a parameter file as described in was created and used on a cluster with nodes of intel_xeon cpus at ghz with hyper threading and gb of random_access for each node the sample missingness module was run two times with and of missing calls thresholds and the snp missingness module was run in between to minimize data loss to optimize computation speed the duplicated samples module was run independently of the others and some script was run in parallel on the cluster all other scripts were run with default_parameters after days of computation including manual verification time the final dataset after qc consisted of markers genotyped on unique samples note that the full power of the cluster is used only for the relatedness and the ethnic modules as only a maximum of four processes were used in parallel for the other modules as genetic datasets are getting larger efficient genetic data qc and clean up procedures are required pygenclean ensures quick customizable and traceable results with datasets of any size 
