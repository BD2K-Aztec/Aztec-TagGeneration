genome_analysis unimog a unifying framework for genomic_distance calculation and sorting based on dcj unimog is a software combining five genome rearrangement models double cut and join dcj restricted dcj hannenhalli and pevzner hp inversion and translocation it can compute the pairwise genomic distances and a corresponding optimal sorting scenario for an arbitrary number of genomes all five models can be unified through the dcj model thus the implementation is based on dcj and where reasonable uses the most efficient existing algorithms for each distance and sorting problem both textual and graph ical output is possible for visualizing the operations availability_and the software is available through the bielefeld university bioinformatics web_server at http bibiserv techfak uni bielefeld de dcj with instructions and examplegenome rearrangements describe the dynamics of evolution at an abstracted genomic_level in contrast to local mutations of single dna base_pairs very little is known about the exact procedure of rearrangement events and how and when they are triggered more detailed knowledge of evolution could help to improve the understanding of the mechanisms important for survival and development of species the evolutionary distance between at least two organisms with shared gene content can be estimated by solving the combinatorial problem of finding a possible sequence of rearrangement operations among their shared genes under the aspect of parsimony thus all genes unique to one of the genomes are ignored and only one representative among duplicated_genes is chosen for the comparison in recent_years large_amounts of genomic_data have become available and genome comparison has become a routine task for example the chimpanzee sequencing and analysiscompared chimpanzee and human_genomes and developed a catalogue of genetic_differences since both are closely_related only one fusion of two chromosomes and several inversions were identified another example is the comparison of human and mouse genomes by pevzner and tesler among other methods they used grimm for the analysis because utilizing automated methods allows for easier and faster analyses no matter how divergent the investigated organisms are grimm is based on the hannenhalli and pevzner hp model thus its set of rearrangement operations comprises inversions translocations fusions and fissions of linear genomes however one can investigate the phylogenetic distance under different aspects and the hp model is only one of the common models besides the hp model we consider four additional models the inversion model allows for inversions of internal genomic_regions in linear uni chromosomal genomes while the translocation model comprises the exchange of two linear chromosome_ends as already mentioned hp combines both models and adds fusions and fissions of two chromosomes to the repertoire of rearrangement operations among the included models the most general is the double cut and join dcj model which allows for all common rearrangement operations inversions translocations fusions fissions circularizations and decircularizations besides these operations block interchanges which describe the exchange of two dna_segments can be mimicked through two operations by all models except the inversion model finally the restricted dcj model allows the same operations as the dcj model but constricts it by requiring immediate decircularization in the next step for emerging circular chromosomes in our software unimog the dcj adjacency graph data_structure serves as basis for all calculations and in contrast to grimm it implements based on dcj all of these five distance models and is able to return either the desired distance or the distance and a corresponding optimal sorting scenario for fast comparisons between the different distances it is also possible to calculate all five distances and sorting scenarios at once if applicable another advantage is that the input is neither limited to two genomes at a time nor can genes only be represented by integers instead gene names are converted to integers for the internal representation in the case of multiple input genomes all of them are compared pairwise with each other the distance results are then returned in a matrix which is also provided in phylip format inset and can further be fed into distance based phylogenetic_tree methods possibly after applying distance to whom correspondence should be addressed the author published_by this is an open_access the terms of the creative commons attribution license http creativecommons org licenses by which permits unrestricted use distribution and reproduction in any medium provided the original_work was chosen even though its worst_case running time is cubic because in practice it almost always runs in linear time our implementation of the inversion sorting algorithm is the sequence augmentation algorithm introduced bywith a quadratic worst_case running time based on the data_structures from this algorithm also defines the running time of the hp sorting algorithm since it uses the preprocessing explicated in tesler a and afterwards hands over the concatenated genomes to the inversion sorting algorithm although grimm still contains an error revealed by we use their corrected capping and concatenation algorithm note that all of these algorithms return only one of possibly many sorting scenarios sampling uniformly among all scenarios will be subject of a future version of unimog because of the efficient implementation unimog can handle large_genomes and was tested with genomes up to genes without encountering any problems for further improvement of the computational performance regions with identical gene_order can be merged into larger synteny_blocks since none of the considered models can break up conserved blocks for an intuitive handling the output of unimog is divided_into three levels first the graphical output is designed for closely studying the rearrangement scenarios highlighting each performed operation and allowing three different zoom levels furthermore when color mode is active each chromosome is assigned a unique color for easier analysis of large_genomes second an optimal sorting scenario is returned in text format which allows for easy reuse of intermediate genomes finally the results are also returned as a list of adjacencies of each intermediate genome the integrated save functions allow quick saving of graphical or textual output data conflict of interest none declared 
