sambamba fast processing of ngs alignment formats sambamba is a high performance robust tool and library for working with sam bam and cram sequence_alignment files the most common file_formats for aligned next_generation data sambamba is a faster alternative to samtools that exploits multi core processing and dramatically_reduces processing time sambamba is being adopted at sequencing centers not only because of its speed but also because of additional functionality including coverage analysis and powerful filtering capability availability_and sambamba is free_and available under a gplv_license sambamba can be downloaded and installed from http www open bio org wiki sambamba sambamba v was released withprocessing speed matters not only for diagnostics but also for analysis and sharing of computational_resources next_generation ngs is increasingly used as a genetic screening_tool in diagnostics and reducing time from sample intake to test result diagnosis potentially saves lives introducing multi core processing can accelerate steps in a pipeline when the cpu is the bottleneck since its introduction by the genomes_project the sequence_alignment format sam and its compressed binary counterpart bam have become the de facto file_formats used for storing and distributing ngs_data samtools is the original tool for sam bam_files processing including data_extraction and filtering recently samtools added the cram format as a compressed alternative to sam bam while samtools exploits the speed of the low_level c programming_language and uses streamed data for efficiency it has limited support for parallel processing samtools has inspired a number of other bam processors notably picard samblaster biobambam and scramble each of which is either slower than samtools or offers a subset of its functionality to accelerate analysis_pipelines we created sambamba a new incarnation of samtools that fully utilizes parallel processing sambamba which means parallel in swahili is written in the d programming_language a modern programming_language with runtime performance similar to that of c d has powerful abstractions for parallel_computing which make it possible to scale computations with the number of cores sambamba is a software engineering example that shows how to make effective use of the d programming_language and multi core computers to reduce the time needed to get from sample to result whole_genome and growing sample numbers make such performance_improvements increasingly relevant processing_speed comparison of samtools and sambamba wall clock time s versus number of threads to convert an gb cram genomes hg to gb sam with samtools view is bound to a single thread at cpu with sambamba io gets saturated at approximately cpu when using a faster ram disk io gets saturated at approximately cpu for samtools a ram disk makes no difference when adding more threads performance reproducibly degrades because of cpu cache contention all timings were performed on a server class machine with gb of ram and cpu cores core amd opteron tm processor ghz with 
