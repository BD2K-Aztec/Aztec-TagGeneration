systems_biology software support for sbgn maps sbgn ml and libsbgn motivation libsbgn is a software library for reading writing and manipulating systems_biology sbgn maps stored using the recently_developed sbgn ml file_format the library available in c and java makes it easy for developers to add sbgn support to their tools whereas the file_format facilitates the exchange of maps between compatible software applications the library also supports validation of maps which simplifies the task of ensuring compliance with the detailed sbgn specifications with this effort we hope to increase the adoption of sbgn in bioinformatics_tools ultimately enabling more researchers to visualize biological_knowledge in a precise and unambiguous manner availability_and milestone was released in december source_code example files and binaries are freely_available under the terms of either the lgpl v or apache v open_source licenses from http libsbgn sourceforge net the systems_biology sbgn le facilitates the representation and exchange of complex biological_knowledge in a concise and unambiguous manner as standardized pathway maps it has been developed and supported by a vibrant community of biologists biochemists software_developers bioinformaticians and pathway_databases experts to whom correspondence should be addressed sbgn is described in detail in the online specifications see http sbgn org documents specifications here we summarize its concepts only briefly sbgn defines three orthogonal visual languages process description pd entity relationship er and activity flow af sbgn maps must follow the visual vocabulary syntax and layout rules of one of these languages the choice of language depends on the type of pathway or process being depicted and the amount of available information the pd language which originates from kitanos process diagrams and the related celldesigner tool is equivalent to a bipartite_graph with a few exceptions with one type of nodes representing pools of biological_entities and a second type of nodes representing biological_processes such as biochemical_reactions transport binding and degradation arcs represent consumption production or control and can only connect nodes of differing types the pd language is very suitable for metabolic_pathways but struggles to concisely depict the combinatorial complexity of certain proteins with many phosphorylation states the er language on the other hand is inspired by kohns molecular_interaction maps and describes relations between biomolecules in er two entities can be linked with an interaction arc the outcome of an interaction for example a protein complex is considered an entity in itself represented by a black dot which can engage in further interactions thus er represents dependencies between interactions or putting it differently it can represent which interaction is necessary for another one to take place interactions are possible between two or more entities which make er maps roughly_equivalent to a hypergraph in which an arc can connect more than two nodes er is more concise than pd when it comes to representing protein_modifications and protein interactions although it is less capable when it comes to presenting biochemical_reactions finally the third language in the sbgn family is af whichthe sbgn ml file_format and libsbgn library provide opensource software support for sbgn maps they have been adopted by several tools already and development is ongoing it is expected that the availability of a community supported api will significantly expedite sbgns adoption we use the word milestone for versioning purposesthe latest release is milestone which was released in december libsbgn is primarily focused on exchanging between sbgn software other functionalities such as conversion to other formats or generating suitable layout are not currently supported it is certainly likely that some or all of these functionalities will be added in the future as optional modules sbgn ml will likely see the addition of fine_grained graphics specification support for linking between files and improved usage of ontologies additionally libsbgn will see expansion to other programming_languages beyond java and c such as for example javascript the sbgn ml file_format is represented as an xml schema sbgn xsd examples are available as test files xml png the accompanying documentation reflects the content of the schema and clarifies a number of additional rules and conventions e g coordinate system this set of resources constitutes the sbgn ml specifications the libsbgn library in c and java and the file_format have been released on sourceforge under a dual license the lesser general public licence lgpl version or later and apache version the development process is an active community effort organized around regular online meetings discussions on the mailing list and development tools on sourceforge bug tracker svn repository and documentation wiki new developers are very welcome 
