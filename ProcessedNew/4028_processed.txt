structural bioinformatics rnafbinv: an interactive java application for fragment-based design of rna sequences in rna design problems, it is plausible to assume that the user would be interested in preserving a particular rna secondary structure motif, or fragment, for biological reasons. the preservation could be in structure or sequence, or both. thus, the inverse rna folding problem could benefit from considering fragment constraints. we have developed a new interactive java application called rna fragment-based inverse that allows users to insert an rna secondary structure in dot-bracket notation. it then performs sequence design that conforms to the shape of the input secondary structure, the specified thermodynamic stability, the specified mutational robustness and the user-selected fragment after shape decomposition. in this shape-based design approach, specific rna structural motifs with known biological functions are strictly enforced, while others can possess more flexibility in their structure in favor of preserving physical attributes and additional constraints. availability: rnafbinv is freely available for download on the web at http://www.cs.bgu.ac.il/rnaexinv/rnafbinv. the site contains a help file with an explanation regarding the exact use. contact:the inverse rna folding problem for designing sequences that fold into a given rna secondary structure was introduced in the early 1990s in vienna . the approach to solve it by stochastic optimization relies on the solution of the direct problem using software available in rna folding prediction web servers, e.g. the rnafold server or mfold , by performing energy minimization with thermodynamic parameters . initially, a seed sequence is chosen, after which a local search strategy is used to mutate the seed and apply repeatedly the direct problem of rna folding prediction by energy minimization. then, in the vicinity of the seed sequence, a designed sequence is found with desired folding properties according to the objective function in the optimization problem formulation. performance improvements of this approach have been worked out in info-rna , rna-ssd and nupack:design . some general extensions of the problem that are evolutionary motivated were suggested inand were carried out using evolutionary computation without efficiency considerations. other trials to solve related problems, such as the design of rna with multiple target structures, include frnakenstein . some interesting analogies to the coding theory were described in the study by. recently, a constraint programming approach was developed in rnaifold , and a global sampling approach was introduced in rna-ensign . remaining within the framework of a local search strategy, using a coarse-grain tree-graph representation of the rna secondary structure, we extended the inverse rna folding problem to include constraints such as thermodynamic stability and mutational robustness, developing a program called rnaexinv . the program improved the efficiency with respect to the study by, but it had no preference to a particular rna secondary structure motif that the user would like to preserve. to motivate the need for enabling the user to specify a preference for particular rna secondary structure motifs that the practitioner would like to preserve, one can think of an example from the area of rna viruses. it is well known that particular hepatitis c virus stem-loops are important for virus replication (e.g.). in the future, the functional importance of more such rna structural motifs in diverse types of rnas will be revealed. the ability of the user to design sequences according to such given information should become useful. rnafbinv (rna fragment-based inverse) is an interactive java application that allows the user to insert an rna secondary structure and design sequences based on user-selected fragments by solving an extended inverse rna folding problem. given an rna secondary structure, the rnafbinv program decomposes the structure into fragments that are rna secondary structure motifs. the user can then select to preserve certain fragments that are presumed to be of biological importance, after which the program solves the extended inverse rna folding problem by considering the additional constraints of mutational robustness and thermodynamic stability . in addition, nucleotide constraints on the sequence can be inserted. the decomposition into structural motifs based on coarse-grain treegraphs allows a bottom-up approach in which the rna-designed sequences are constructed from the fragments, from sequence constraints and from evolutionary and physical attributes. the first use of coarse-grain tree-graphs in this context was suggested in the study by, in to whom correspondence should be addressed. which the physical attributes were inserted as constraints, inspired by the review of higgs (2000) about the physical aspects of rna secondary structure. rnafbinv is a natural extension of the coarse-graining idea that uses the coarse-grain tree-graph representation to decompose the structure into fragments. the user can then select structure constraint fragments that should be preserved, and together with user-selected sequence constraint fragments, they comprise building blocks on which the sequences are designed. for coarse-graining, we have chosen to work with tree-graphs , but similarly, one can use abstract shapes . the application consists of three separate programs: rnaattributes, rnafbinv and rnafbinv-flex that supports flexible length-designed sequences. the rnaattributes program is an aid tool that accepts an rna sequence and provides its predicted minimum free energy secondary structure and its minimum free energy and mutational robustness. the rnafbinv program is the main program that accepts an rna structure, thermodynamic stability, mutational robustness and a choice of user-selected sequence and structure fragments based on coarsegrain tree-graph representation. the output consists of designed sequences that are ranked by the base pair distance of their predicted structure from the input structure. the rnafbinv-flex program is an extension to rnafbinv that also outputs designed sequences but of variable lengths. because of this flexibility, rnafbinv-flex does not accept sequence constraints in the current implementation, as the locations of sequence constraints become obscured when the sequences vary in size. in the future, more sophisticated programs could perhaps allow inserting sequence constraints in rnafbinv-flex, but this requires special development. in the current implementation of rnafbinv-flex, up to 2 nt are deleted, and it is possible to consider sequence constraints by filtering the results obtained in a post-processing step.the output from rnaattributes, rnafbinv and rnafbinv-flex can be easily checked by running rnafold or mfold on the designed sequences. to test whether the inverse problem solutions obtained from our program meet the desired constraints convincingly, we ran it on artificial examples as well as on natural ones. for example, on an mirna precursor example that was taken fromand illustrated in, we were able to obtain designed sequences that fulfill all constraints imposed and full preservation of the selected fragments.  
