sequence analysis bridges: a tool for identifying local similarities in long sequences bridges is a heuristic search tool that uses short word matches to rapidly identify local similarities between sequences. it consists of three stages: filtering input sequences, identifying local similarities and post-processing local similarities. as input sequence data are released from memory after the filtering stage, genome-scale datasets can be efficiently compared in a single run. bridges also includes 20 parameters, which enable the user to dictate the sensitivity and specificity of a search. availability: bridges is implemented in the c programming language and can be run on all platforms. source code and documentation are available at http://github.com/rassis/bridges.identifying homologous genomic segments is fundamental to tackling a number of biological problems, including mapping functional elements, predicting protein structures, quantifying molecular evolutionary dynamics and establishing phylogenetic relationships. homologous segments can be located with high accuracy by employing the smithwaterman approach, a dynamic programming algorithm . however, because it entails examining every possible alignment, the smithwaterman approach is computationally intensive and timeconsuming, rendering its use unrealistic for many large-scale projects . in the past quarter century, several heuristic tools have been developed to rapidly locate homologous segments . rather than traversing sequences base-by-base, such programs limit their focus to regions with short exact word matches. though this means that sensitivity is lower when searching for distantly related similarities, heuristic approaches are orders of magnitude faster than the smith waterman approach and have low computational costs associated with them . for these reasons, such tools have become an invaluable resource for biologists and form the backbone of bioinformatics. recently, we were faced with the task of identifying pairs of unique paralogous segments in the drosophila melanogaster genome. we encountered a number of obstacles when attempting to use the entire genome as both a query and database with currently available search tools. thus, we developed bridges, which can to whom correspondence should be addressed. perform rapid memory-efficient heuristic searches on genome-scale datasets. another asset of bridges is that it is highly flexible, with 20 parameters that enable the user to tailor a search to his or her particular goals.bridges is a fast and efficient search tool for identifying homologous segments between long sequences. in a single run of bridges on a linux machine, we were able to compare the entire d.melanogaster genome to itself and specifically locate paralogous pairs. this took 2 h and used a maximum of 1.4 gb of memory during the entire run. some important parameters used were a masking word size of 13, a searching word size of 12 and a minimum score of 100. while blast took approximately the same amount of time and memory to run, it produced shorter similarities, including those along the diagonal of the alignment. blat, with default parameters, ran for over 2 weeks before reaching the upper limit of 32 gb of memory and crashing. thus, using either of these programs would have required us to filter and stitch together local similarities or to split up the genome substantially. an added strength of bridges lies in its ability to be guided by the user via an array of parameters. this flexibility allows the user to control the sensitivity and specificity of a search. for our purposes, having a parameter-rich program to work with was invaluable in that we were able to specifically locate the types of similarities we were interested in. such flexibility can also be problematic if the user does not know what parameter values will produce the desired output. however, because bridges produces output rapidly, the user is free to experiment with several sets of parameters. in fact, we found it helpful to examine different types of output to better understand how modification of certain parameters affected our results. for example, increasing the word size or the minimum score resulted in fewer, but stronger, similarities. thus, the ability of the user to experiment with parameters is, in itself, yet another strong asset to bridges.  
