comment on: 'ergc: an efficient referential genome compression algorithm' motivation: data compression is crucial in effective handling of genomic data. among several recently published algorithms, ergc seems to be surprisingly good, easily beating all of the competitors. results: we evaluated ergc and the previously proposed algorithms gdc and idocomp, which are the ones used in the original paper for comparison, on a wide data set including 12 assemblies of human genome (instead of only four of them in the original paper). ergc wins only when one of the genomes (referential or target) contains mixed-cased letters (which is the case for only the two korean genomes). in all other cases ergc is on average an order of magnitude worse than gdc and idocomp.the rapid growth of genomic data in the last few years demands for efficient compression methods to facilitate their storage and transfer. one of the standard problems of this kind is (referential) compression of multiple individual genomes of the same species . as a pair of individual genomes differ only in variant loci, we can expect radical savings in storing a referentially encoded genome. recently, published a new referential genome compression algorithm, called ergc. as the experimental results presented in this article seemed to suggest that ergc is surprisingly good, winning easily in compression ratio over the previously proposed algorithms gdc and idocomp , we decided to take a closer look at ergc and repeat the experiments on a wider set of data.closer look, we observed that in all but d 1 one of the korean genomes is used either as a reference or a target genome. the korean genomes differ from the other ones in that they contain both lower and upper case letters (see supplementary material). they also contain nonstandard symbols, similarly to the yh genome. to better understand if the potential of ergc is due to the design of the algorithm itself, or to the handling of the lower and upper case letters and/or the non-standard symbols, we simulated these experiments again (d 2 ;. .. ; d 5 ) with the korean genomes transformed to all upper case. surprisingly, as demonstrated in, ergc achieved the worst compressed size in all cases. the reported results suggest that the gain of ergc comes from the handling of the lower and upper case symbols. since the previous experiments may not be representative enough, we decided to use a wider set of data. specifically, we chose the human genome datasets from the gdc 2 paper , which is a superset of the collections from and . to reduce the amount of computations, we chose only two chromosomes from each genome: chr10 and chr20. then, to follow the ergc paper methodology, we tested referential compression in pairs of chromosomes, in a round-robin fashion. in, we show the sums of compressed sizes; detailed results are presented in the supplementary material. ergc is outperformed in all cases by gdc and idocomp.from the conducted experiments we can draw several conclusions. firstly, the reported compression results on the d 1 and d 5 cases in the cited paper are not correct for both gdc and idocomp. secondly, ergc seems to get the main advantage due to specific handling of lower and upper case difference between the target and the reference genome. we believe that using the korean genomes is fair, however, the authors should have provided simulations on a wider set of data where the gain does not come from the lower and upper case difference. finally, after running several experiments on different datasets, we can conclude that ergc performs in general poorly when compared with gdc and idocomp.the d 1 experiment is skipped run since both the reference and the target in it consist of upper case dna symbols only.  
