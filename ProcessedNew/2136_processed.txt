gsa-lightning: ultra-fast permutation-based gene set analysis the computational speed of many gene set analysis methods can be slow due to the com-putationally demanding permutation step. this article introduces gsa-lightning, a fast implementation of permutation-based gene set analysis. gsa-lightning achieves significant speedup compared with existing methods, particularly when the number of gene sets and permutations are large. availability and implementation: the gsa-lightning r package is available on github at https:// github.com/billyhw/gsalightning and on r bioconductor. the package also contains a comprehensive users guide with a step-by-step tutorial vignette.gene set analysis embodies a range of techniques for analyzing the functional and biological properties of differentially-expressed genes. one common type of gene set analysis method, termed selfcontained method , tests whether genes within a predefined gene-set are collectively differentially expressed across two different experimental conditions. the gene sets significance is typically assessed through permutation testing. due to the computationally-demanding permutation tests, the speed of permutation-based gene set analysis methods is often compromised. there is a need to address this computation issue, particularly when performing large-scale analysis. as an example, for a genome-wide expression analysis of target genes of regulatory elements , the number of gene sets, each set being the target genes of a regulatory element, can reach tens of thousands. if there areexpression measurements, and the gene set statistics are functions of the mean of the individual statistics. all these quantities can be computed efficiently using matrix products. also, it is actually possible to perform the permutations using matrix products. the online supplementary materials provide details on how this can be done. speed and memory efficiency are further increased by using sparse matrix computations whenever possible. when the number of permutations is large, gsa-lightning breaks the permutations into batches. each batch is handled separately and then combined to obtain the final results. the online supplementary materials provide further details, and also contain a justification of the equivalence between gsa-lightning and gsa by comparing the two methods program outputs. this justifies that gsa-lightning does not sacrifice gsas accuracy in order to achieve the speedup.only methods with r implementations were compared to ensure hardware-independent results. focusing on permutation-based twosample testing, non-permutation-based methods were not compared. gsa-lightning (with the maxmean option and restandardization) was compared with six other methods using their default options unless stated otherwise. these methods were gsa (with the maxmean option and restandardization) , gseattperm from the r bioconductor package category, the self-contained version of sigpathway , safe , globaltest and padog . all analyses were performed using a macbook pro with a 2.3 ghz intel core i7 processor and 16 gb ram. the gene sets used were the target genes of 36 381 distal regulatory elements from with three or more target genes. the breast cancer data set from the cancer genome atlas (the cancer genome atlas research) downloaded using the elmer r bioconductor package was used as the gene expression data. the data set contained gene expression measures for 114 controls and 1104 patients. after removing genes without matching gene symbols and/or with 0 sample variance, 20 038 genes remained for further analysis. three speed trials were performed to examine the speed of the various methods. first, the number of gene sets was fixed at 500, and the number of permutations varied from 500 to 10 6. second, the number of permutations was fixed at 1000, and the number of gene sets varied from 500 to 30 000. the third trial mimics a more realistic scenario: the numbers of gene sets were the same as in the second trial, but the number of permutations varied according to 2 (no. genesets)/0.05. this number of permutations ensured accurate p-value estimation even after multiple correction at significance level 0.05. only gsa-lightning, sigpathway, and globaltest were tested in this trial as the other methods were too slow here.presents the results. gsa, safe and padog were not run for number of permutations 10 000, and gseattperm was not run for 50 000 permutations since these methods were too slow. also, sigpathway and globaltest encountered memory issues when the numbers of permutations were respectively 10 6 and 10 5 in the first trial, and when the number of gene sets was 5000 in the third trial, and hence were not performed there. gsa-lightning was faster than all other methods. in particular,suggests that gsalightning was the only method that could analyze large amounts of gene sets with a large number of permutations within reasonable time. in the experiments above, the maximum ram usage for gsalightning was 4 gb. a speed comparison between the different gene set statistics, with or without restandardization, for gsa-lightning and gsa is provided in the online supplementary materials. note that all the methods compared earlier are based on different test statistics. the results and sensitivity of these methods will therefore be different, depending on the data set and the methods assumptions. nevertheless, a recent review considered gsa with the maxmean statistics one of the better gene set analysis methods . by virtue of gsas strengths, a fast version of gsa is worth developing. also, a detailed speed comparison would involve comparing separately the speed for calculating the individual gene statistics, the gene set statistics, and the permutation. such comparison is beyond the scope of this article. still, for large-scale gene set analysis, the results above suggest that gsa-lightning is the only possible option among the methods compared. altogether, gsalightning is a tool capable of performing large-scale gene set analysis with statistical power guarantee.  
