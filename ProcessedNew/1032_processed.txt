codex: exploration of semantic changes between ontology versions life science ontologies substantially change over time to meet the requirements of their users and to include the newest domain knowledge. thus, an important task is to know what has been modified between two versions of an ontology (diff). this diff should contain all performed changes as compact and understandable as possible. we present codex (complex ontology diff explorer), a tool that allows determining semantic changes between two versions of an ontology, which users can interactively analyze in multiple ways. availability and implementation: codex is available under http://www.izbi.de/codex and is supported by all major browsers. it is implemented in java based on google web toolkit technology. additionally, users can access a web service interface to use the diff functionality in their applications and analyses.recently ontologies have become very popular in the life sciences. they consist of a harmonized vocabulary of terms (concepts) describing and structuring a domain of interest. their main application is the consistent and uniform description (annotation) of biological entities such as genes and proteins enabling analyses such as term enrichment or gene expression data studies. the most used ontology in bioinformatics is the gene ontology (go) consisting of subontologies for molecular functions, biological processes and cellular components. a huge number of life science ontologies are managed within the open biomedical ontologies foundry (obo) , which has established the common obo format as representation language. the content of ontologies is not static. due to new knowledge (e.g. from experimental results) or design errors made in earlier versions, they underlie continuous changes to enhance their quality. the onex tool already allows studying the evolution of life science ontologies over the recent years, e.g. one may notice that the biological processes of go doubled in their size to 21 000 concepts between 2006 and 2011. however, onex considers rather simple changes (e.g. concept additions and deletions) such that there is still an increasing need to figure out what has exactly been changed between the two versions of an ontology (diff). the complexity and size of life science ontologies to whom correspondence should be addressed. requires that a diff should be as compact and human-understandable as possible. semantic changes such as concept merges, additions of entire subgraphs or moves of concepts should be reported instead of long lists of rather basic changes as generated by tools such as obodiff of obo-edit . a semantic diff can be valuable for both ontology users and developers, e.g. if a user likes to perform a term enrichment analysis based on a new ontology version, she may be interested in revised concepts compared with the previously used version, or a developer likes to know which changes were performed in the last year to plan future modifications. current ontology browsers such as amigo or ontology lookup service are limited to the latest available version and do not offer diff facilities. we therefore present codex, a web tool to ad hoc compute a semantically rich diff between two ontology versions.we apply codex to determine and analyze the difference between selected ontology versions. first, we compute the diff between the july and november 2010 version of the sequence ontology (. this time the ontology grew by 3 and the diff encompasses 3300 changes. the changes are dominated by attribute value changes (2423) especially changes of definitions. other frequent semantic changes are moves of concepts (188) and leaf additions (169). however, there was a huge amount of revisions including merges (60) as well as obsolete changes (20). the largest of the 33 added subgraphs with 29 new concepts is go:0000988 (protein binding transcription factor activity).the presented codex application allows to compare different ontology versions and determines a compact diff based on semantic changes. thus, users can flexibly determine semantic diffs and use this knowledge for understanding the ontology evolution or to adapt dependent data. the application can be accessed via an interactive web front-end or a web service interface.  
