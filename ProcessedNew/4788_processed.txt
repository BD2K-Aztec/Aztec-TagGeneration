unified representation of genetic variants a genetic variant can be represented in the variant call format (vcf) in multiple different ways. inconsistent representation of variants between variant callers and analyses will magnify discrepancies between them and complicate variant filtering and duplicate removal. we present a software tool vt normalize that normalizes representation of genetic variants in the vcf. we formally define variant normalization as the consistent representation of genetic variants in an unambiguous and concise way and derive a simple general algorithm to enforce it. we demonstrate the inconsistent representation of variants across existing sequence analysis tools and show that our tool facilitates integration of diverse variant types and call sets. availability and implementation: the source code is available for download atmethods for calling genetic variants from sequence data are rapidly evolving beyond single nucleotide polymorphisms (snps), to more complex variants such as short insertions and deletions (indels), short tandem repeats (strs), multi-nucleotide polymorphisms (mnps), structural variations (svs) and others. these different classes of variants are typically represented in the variant call format (vcf) , which provides a format for storing variant calling results for diverse variant types generated by different tools. different sequence analysis software tools often represent the same sequence variant in different ways in a vcf file, making it non-trivial to integrate and compare variants across call sets. however, the impact of ambiguous variant representations on the analysis of sequence data is under-appreciated, and there is no standard guideline for consistent representation of variants. here we provide a formal definition and algorithm for variant normalization. our definition and algorithm enable the representation of variants in an unambiguous, unique way. we show that existing variant calling software tools often do not consistently represent complex variants. finally, we demonstrate how our normalization method helped integrate different variant call sets in the 1000 genomes).  
