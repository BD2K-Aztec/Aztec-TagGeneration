sbwt: memory efficient implementation of the hardware-acceleration-friendly schindler transform for the fast biological sequence mapping motivation: the full-text index in minute space (fm-index) derived from the burrowswheeler transform (bwt) is broadly used for fast string matching in large genomes or a huge set of sequencing reads. several graphic processing unit (gpu) accelerated aligners based on the fm-index have been proposed recently; however, the construction of the index is still handled by central processing unit (cpu), only parallelized in data level (e.g. by performing block-wise suffix sorting in gpu), or not scalable for large genomes. results: to fulfill the need for a more practical, hardware-parallelizable indexing and matching approach , we herein propose sbwt based on a bwt variant (i.e. schindler transform) that can be built with highly simplified hardware-acceleration-friendly algorithms and still suffices accurate and fast string matching in repetitive references. in our tests, the implementation achieves significant speedups in indexing and searching compared with other bwt-based tools and can be applied to a variety of domains. availability and implementation: sbwt is implemented in c with cpu-only and gpu-accelerated versions. sbwt is open-source software and is available atindex structures, such as the full-text index in minute space (fm-index) derived from the burrowswheeler transform (bwt) and enhanced suffix arrays , have been widely used in ngs applications for mapping short reads to the references . recently the biological applications of the fm-index are expanding; the fm-index has been used to compress ngs data and de novo assembly . these applications require dynamic construction of the indexes based on reads. for instance, in the construction of the overlap graph for doing de novo assembly as demonstrated by simpson and durbin . the suboptimal performance of  
