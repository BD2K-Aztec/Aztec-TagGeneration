fiona: a parallel and automatic strategy for read error correction motivation: automatic error correction of high-throughput sequencing data can have a dramatic impact on the amount of usable base pairs and their quality. it has been shown that the performance of tasks such as de novo genome assembly and snp calling can be dramatically improved after read error correction. while a large number of methods specialized for correcting substitution errors as found in illumina data exist, few methods for the correction of indel errors, common to technologies like 454 or ion torrent, have been proposed. results: we present fiona, a new stand-alone read errorcorrection method. fiona provides a new statistical approach for sequencing error detection and optimal error correction and estimates its parameters automatically. fiona is able to correct substitution, insertion and deletion errors and can be applied to any sequencing technology. it uses an efficient implementation of the partial suffix array to detect read overlaps with different seed lengths in parallel. we tested fiona on several real datasets from a variety of organisms with different read lengths and compared its performance with state-of-the-art methods. fiona shows a constantly higher correction accuracy over a broad range of datasets from 454 and ion torrent sequencers, without compromise in speed. conclusion: fiona is an accurate parameter-free read errorcorrec-tion method that can be run on inexpensive hardware and can make use of multicore parallelization whenever available. fiona was implemented using the seqan library for sequence analysis and is publicly available for download at http://www.seqan.de/projects/next-generation dna sequencing (ngs) technologies have revolutionized genomics and produce billions of base pairs per day in the form of reads of length !100 bp. in this article, we focus on ngs reads produced by genome sequencing. owing to the large range of applications of genome sequencing, the correction of errors introduced by the sequencer, substitution as well as insertion or deletion (indels), has recently attracted attention. previous studies showed that error correction can improve de novo genome assembly performance and snp detection . depending on the technology, the most prevalent error type differs. illumina technology produces mostly substitution errors , whereas 454 sequencers are prone to produce runs of larger insertions of the same nucleotide. ion torrent sequencers were shown to have a large amount of indel errors and a high-sequencing error rate . however, current error correction methods suffer a number of limitations as highlighted in a recent review .(i) most methods cannot correct indel errors because they are tailored to correct only substitution errors and are therefore only applicable to illumina reads. (ii) most approaches need to be parameterized depending on the dataset, otherwise their performance is suboptimal. this either requires in-depth knowledge by the user or parameter optimization using downstream analysis, which often leads to longer running times in practice.(iii) because the throughput of ngs technologies is growing steadily, many approaches are not applicable to larger datasets because of running time or memory limitations. these caveats make it hard for users to choose the optimal tool for their dataset and ngs technology. here we introduce a new approach to read error correction, called fiona, which addresses all the above mentioned limitations. fiona provides an accurate and highly parallelized method for correction, with the ability to correct indel errors, while it automatically adjusts its parameters. all read errorcorrection methods have to perform essential tasks: (i) computation of read overlaps, (ii) error detection in reads and (iii) error correction. in a recent review by, the methods have been classified into k-spectrum based, suffix tree/array based and multiple sequence alignment (msa) based. we will briefly explain the differences and weaknesses of these approaches but refer the reader to : k-spectrum based. k-spectrum based read error correction was introduced in the euler assembler . there exist many variations on the k-spectrum based error corrections for ngs reads , for example, approaches that were designed to select the necessary parameters using mixture models . popular methods are quake , reptile and the error correction module from the allpaths-lg assembler , all of which use base quality values. to our knowledge, only allpaths-lg in this category can correct short indel errors. to whom correspondence should be addressed. y the authors wish it to be known that, in their opinion, the first three authors and the last author should be regarded as joint first authors. the author 2014. published by oxford university press. this is an open access article distributed under the terms of the creative commons attribution non-commercial license (http://creativecommons.org/licenses/by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. for commercial re-use, please contact journals.permissions@oup.comthe general disadvantage for most of these methods is their inability to correct indel errors, a severe limitation for 454 or ion torrent sequencers. in addition, for most of these approaches, parameters need to be optimized by the user to obtain good performance, for example, reptile. suffix tree/array based. shrec was the first approach that uses a variable seed length for read overlap and error-detection computation. it considers for each erroneous read a set of correcting reads such that all reads share a k 1-mer left of the error and the set of correcting reads share a k-mer that ends with the correct base, which outvotes the erroneous base. to efficiently find erroneous reads and correcting candidates, shrec traverses a generalized suffix tree of all reads, in which erroneous and correcting reads occur as children of branching nodes with string depth k 1. building on a suffix tree representation, the hybridshrec algorithm extended the ideas to correct indel errors and sequences in color space . in both methods, potentially correcting reads are compared with erroneous reads using hamming distance, seeded by the shared k 1-mers between reads. further, both methods are sensitive to the input parameters and therefore show variable performance when compared in other studies , and the full suffix tree data structure needs large memory resources. the hitec algorithm introduced automatic parameter selection using coverage statistics . seed lengths and coverage threshold are set automatically, given the genome length and the average error rate. hitec uses the suffix array instead of a suffix tree to save memory. however, hitec can only correct substitution errors and the automatic parameter selection works only for reads of same length as found for illumina data. note that these methods do not define explicitly which correction for an erroneous position is applied when the same error is encountered multiple times through different seed lengths in the tree, and in which order errors in a read are corrected. msa based. among the two existing multiple alignment-based methods echo and coral (salmela and schr oder, 2011), only coral can correct indel errors. coral computes initial read overlaps with hash tables for a fixed k-mer length and then uses dynamic programming to form multiple read alignments. this alignment is costly for long reads but has a clear optimization function, as read errors are corrected by the best voting correction in the msa.we performed a comprehensive experimental evaluation of fiona and other tools on various real-world read sets. for the evaluation of read correction quality, the metric gain has been established in as a good summary of both sensitivity and precision. the gain can be computed by b a=b where a and b are the sums over the number of errors after and before correction over all reads. when more errors are introduced than corrected over all the reads, the gain takes a negative value. for the evaluation, we developed a tool compute_gain, which is included in the fiona distribution (supplementary section s3.2) to cover most of the use cases nowadays, we evaluated the accuracy on read sets from 454, iontorrent and illumina sequencers that show a varying degree of read lengths (mean values from 92 to 544 bp) and depth of coverage (up to 490). we selected datasets for a diverse set of organisms to explore the impact of genome complexity and repeat content on error correction performance, from short genomes (escherichia coli, pseudomonas syringae) to longer and more complex ones (drosophila melanogaster, homo sapiens). further details about all datasets and the evaluation are given in supplementary section s3. the only variable parameter besides the input read set given to fiona is the estimated genome length (supplementary). fiona was run with default parameters for all datasets, i.e. the sequencing error rate was 5 and the presorting q-gram length was set to 10.in this study, we introduced fiona, a new algorithm for the correction of sequencing errors without the need for a reference sequence. fiona builds over existing strategies to accurately correct errors, accounting for indels with automatic parameter selection. one of the main advantages of fiona is the use of variable seed lengths, combined with a global optimization criterion to choose the best correction for a read. our experiments show that fiona outperforms other methods on datasets from different sequencing technologies.timegain454  
