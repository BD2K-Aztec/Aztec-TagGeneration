indel-tolerant read mapping with trinucleotide frequencies using cache-oblivious kd-trees motivation: mapping billions of reads from next generation sequencing experiments to reference genomes is a crucial task, which can require hundreds of hours of running time on a single cpu even for the fastest known implementations. traditional approaches have difficulties dealing with matches of large edit distance, particularly in the presence of frequent or large insertions and deletions (indels). this is a serious obstacle both in determining the spectrum and abundance of genetic variations and in personal genomics. results: for the first time, we adopt the approximate string matching paradigm of geometric embedding to read mapping, thus rephrasing it to nearest neighbor queries in a q-gram frequency vector space. using the l 1 distance between frequency vectors has the benefit of providing lower bounds for an edit distance with affine gap costs. using a cache-oblivious kd-tree, we realize running times, which match the state-of-the-art. additionally, running time and memory requirements are about constant for read lengths between 100 and 1000 bp. we provide a first proof-of-concept that geometric embedding is a promising paradigm for read mapping and that l 1 distance might serve to detect structural variations. treq, our initial implementation of that concept, performs more accurate than many popular read mappers over a wide range of structural variants. availability and implementation: treq will be released under the gnu public license (gpl), and precomputed genome indices will be provided for download at http://treq.sf.net.the possibility to re-sequence genomes rapidly and cost-efficiently using next generation sequencing (ngs) technologies has provided fascinating insights into the breadth and prevalence of human genetic variation , in particular the abundance of structural variantswe will jointly refer to them as insertion and deletions (indels) and not distinguish, for example between novel sequence insertions and duplications. unfortunately, these structural variants, more exactly short indels, are complicating the first step in the analysis, mapping dna sequencing reads to reference genomes. this is surprising, as approximate string matching, the theoretical problem underlying read mapping, is arguably one of the most fundamental problem in bioinformatics and a very well-studied to whom correspondence should be addressed. area in data mining; for surveys see boytsov (2011b); navarro (2001). mapping reads from dna sequencing experiments requires solving approximate string matching problems for billions of short dna sequences of length 20500 bp against entire genomes. there have been a multitude of methods proposedsee for example the benchmarks performed byand the results and optimal choice of method depend strongly on the read length and the maximal edit distance allowed. out of the variety of different approaches [see boytsov (2011a) for a detailed taxonomy] proposed for approximate string matching, current read mappers rely on only three different paradigms : seed-and-extend (encompassing hash tables and q-gram filtering), prefix/suffix tries (using the burrows wheeler transform) and one approach based on merge sort . their computational efficiency depends on the existence of exact matches between the read and the genome. intuitively, there cannot be an approximate match of small edit distance between a read and the genome if not one or several exact matches of length q exist. the relationship between the presence of such matching q-grams (sequence of length q) and the edit distance was revealed in a seminal paper by: a lower bound for the edit distance between two strings is given by the l 1 distance between their count vectors of qgrams (for q = 3 these are the trinucleotide frequency vectors). this provides the basis for a seed-extend strategy of using efficient algorithms for finding one initial exact q-gram match, exploring whether additional exact q-gram matches support the existence of an approximate match,(left), and then use an efficient alignment algorithm, such as myers bit-vector algorithm , to verify and assess the quality of the match. existing methods either implement this idea of q-gram filtering directly , or implicitly rely on it . the running times depend on the maximal edit distance permitted: smaller maximal edit distance allows to chose larger q, thus there will be fewer exact q-gram matches and putative approximate matches to explore; indeed their probability decreases exponentially. if we think of patterns being derived from a match in the text through edit operations of technical nature (sequencing errors), or biological nature (genetic variants), the probability of hitting all q-grams and thus rendering q-gram filtering useless increases with the number of edits . gapped q-grams , requiring exact matches in a fixed pattern of q out of q q positions, are one way of addressing this. most popular approaches, however, strictly limit the maximal edit distance and use heuristics to keep running time in check at the potential cost of missing best matches.. most approaches to approximate string matching using ukkonens q-gram lemma rely on the existence of reasonably large q-grams which are exact matches between pattern and text. these can be found efficiently with a number of techniques and yield putative hits, which are then evaluated using an alignment algorithm. for each pattern and each putative hit, the number of shared q-grams is evaluated de novo (left). we map both reads and genome locations to vectors of 2-gram frequencies and identify approximate matches finding nearest neighbors (right). this is accelerated by the use of a spatial index structure, e.g. a kd-tree, which is created by recursively partitioning the input space around the median value of a dimension.in particular, the detection of indels suffers from the limits on edit distance of matches. as our results show, many of the existing methods have problems in mapping 100 bp reads with indels to the reference genome; longer reads improve the situation for some approaches. consequently, the state-of-the-art in the detection of structural variants is the use of paired-end read libraries and advanced methods for performing downstream analysis after mapping the paired-end read libraries to reference genomes (noted that in particular detection of small, 550 bp indels, is a largely open problem, although our analysis reveals that one recent approach, stampy , provides excellent sensitivity. in the detection of such short indels, the deviations from mean insert length are measured, and thus, the sequencing coverage required to arrive at statistical significance is inversely proportional to the indel length. our results will show that the detection of 116 bp indels from single reads is possible using l 1 distance. we pursue a different strategy from current read mappers, following ideas first proposed for protein sequences and generally referred to as vector space frequency distance methods , embedding strings as q-gram frequency vectors. these geometric embeddings have not yet made their way into read mapping, unlike other areas of bioinformatics, for example in the estimation of bacterial species phylogeny through oligonucleotide frequency distances , under the name of k-spectra in classifying protein sequences using support vector machines or in alignment-free sequence comparisons . we choose q = 3 and consider vectors of all trinucleotide frequencies, by embedding reads of length between 100 and 1000 bp as vectors in r 64. the problem of finding a minimal edit distance approximate match now becomes the problem of finding a nearest neighbor in a data set of vectors derived from a genome by sliding a window over the genome and mapping the sequence to a frequency vector,(right). finding (approximate) nearest neighbors, however, has been well studied and a large range of spatial index data structures have been proposed generally leading to o(nlogn) complexity for construction of the spatial index and o(logn) complexity for nearest neighbor queries, where n denotes the number of points in the index. empirical running times, however, vary widely based on the detailed structure of the problem instance, and thus, algorithm engineering is important for achieving competitive running times. the vector space frequency distance method introduced inwas not further pursued except in a small scale study focusing on different ways to map strings to vectors . in recent years, researchers in databases, both multi-media and text, investigated indices in high-dimensional spaces , but the small alphabet size of dna that leads to nonsparse frequency vectors preclude their use here. boytsov (2011b) implemented and evaluated a range of different approaches in approximate string matching also on dna datasets which are of small bacterial genome size (3.2 megabasepair). we found that his findings do not translate when the genome size increases by a factor of 1000. for instance the effects of cache or page misses, which motivate cache-oblivious data structures that guarantee minimum number of cache misses irrespective of cache size and memory hierarchy, are simply not observable on small data sets. during the development of the method, we used state-of-the-art kd-tree libraries but found them to be lacking in performance once the index contained more than a few million points. indeed, on genome-size problems, the ability to effectively implement data structures in a cache-oblivious manner is more important than computational complexity. in the following sections, we will show how l 1 distance serves as a lower bound for affine gap costs, introduces our methodology and implementation details and provides detailed analysis on both real and simulated data to show the advantages and drawbacks of geometric embeddings.to evaluate treq and compare its performance, we ran a number of read mappersbowtie , bwa , soap2 , mrfast , novoalign (http://www.novocraft.com), ssaha2 , last , stampy and razers on simulated and real read datasets (see supplementary tables s1 for version numbers). these read mappers were evaluated with their default and, in some cases, customized parameters for allowing maximal permissible edit distance. we also forced them to report one single best hit. for treq, parameters q = 3, d = 64(= 4 q ), g = 3 and k = 200 were fixed throughout the experiments. currently, quality scores are ignored in the match evaluation phase of treq. for simulated data, we define accuracy as the percentage of reads mapped to the actual genomic locations from where they were sampled . we use human genome hg18 build 36 as the reference for all the experiments.  
