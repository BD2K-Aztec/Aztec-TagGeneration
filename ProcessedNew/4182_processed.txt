semi-automated ontology generation within obo-edit motivation: ontologies and taxonomies have proven highly beneficial for biocuration. the open biomedical ontology (obo) foundry alone lists over 90 ontologies mainly built with obo-edit. creating and maintaining such ontologies is a labour-intensive, difficult, manual process. automating parts of it is of great importance for the further development of ontologies and for biocuration. results: we have developed the dresden ontology generator for directed acyclic graphs (dog4dag), a system which supports the creation and extension of obo ontologies by semi-automatically generating terms, definitions and parentchild relations from text in pubmed, the web and pdf repositories. dog4dag is seamlessly integrated into obo-edit. it generates terms by identifying statistically significant noun phrases in text. for definitions and parentchild relations it employs pattern-based web searches. we systematically evaluate each generation step using manually validated benchmarks. the term generation leads to high-quality terms also found in manually created ontologies. up to 78 of definitions are valid and up to 54 of childancestor relations can be retrieved. there is no other validated system that achieves comparable results. by combining the prediction of high-quality terms, definitions and parentchild relations with the ontology editor obo-edit we contribute a thoroughly validated tool for all obo ontology engineers. availability: dog4dag is available within obo-edit 2.1 atthe advent of controlled vocabularies used for gene product annotation has had a deep impact on life science research , since it was a prerequisite for the analysis of high-throughput screens and the cross-referencing between databases of different model organisms and different types of data. successful vocabularies in the life sciences range from formal ontologies defined in description logics such as snomed ct via directed acyclic graphs representing is-a and part-of relations such as the gene ontology (go) to hierarchical terminologies which define narrower and broader terms such as mesh. over the past years, numerous ontologies have been created as evidenced by over 90 ontologies listed by the open biomedical ontology (obo) foundry . creating ontologies is a labour-intensive, difficult, manual process, which is supported by dedicated ontology editors such as protgand obo-edit to whom correspondence should be addressed.. recently, there have been efforts to alleviate these difficulties through text-mining, which comprises a host of techniques from natural language processing to statistics. one such system is the protg plug-in termine , which suggests terms by analyzing the frequencies of word tuples in a text for a given query. overall, text-mining has to address three problems to support ontology creation and extension: (i) generation of relevant ontology terms, (ii) their definitions and (iii) relationships between them. tables 13 summarize the current state-of-the-art for these three problems.shows that a number of systems have integrated linguistic and statistical filtering with machine learning achieving either high precision or recall.shows the success rates of definition generation systems. in particular, the definitional question answering task in the trec 2003 information retrieval competition serves as a good evaluation benchmark. existing systems achieved success rates of over 25. the most difficult problem is taxonomy induction, since it requires the identification of entities and their relations in text.shows recent results with success rates usually 50. besides evaluating ontology creation against benchmarks, one can assess how well semi-automated ontology creation and extension adheres to design guidelines as put forward among others by. this article is organized as follows: first, we introduce dog4dag, the first tool for ontology generation within obo-edit. second, we introduce the approach and system and then evaluate the quality of term, definition and relationship generation. finally, we discuss how the system supports the design guidelines inand its limits.  
