data and text mining minerva and minepy: a c engine for the mine suite and its r, python and matlab wrappers we introduce a novel implementation in ansi c of the mine family of algorithms for computing maximal information-based measures of dependence between two variables in large datasets, with the aim of a low memory footprint and ease of integration within bioinformatics pipelines. we provide the libraries minerva (with the r interface) and minepy for python, matlab, octave and c. the c solution reduces the large memory requirement of the original java implementation, has good upscaling properties and offers a native parallelization for the r interface. low memory requirements are demonstrated on the mine benchmarks as well as on large (n 1340) microarray and illumina gaii rna-seq transcriptomics datasets. availability and implementation: source code and binaries are freely available for download under gpl3 licence at http://minepy.source-forge.net for minepy and through the cran repository http://cran.r-project.org for the r package minerva. all software is multiplatform (ms windows, linux and osx).the maximal information-based non-parametric exploration (mine) family of statistics, including the maximal information coefficient (mic) measure, was recently introduced in , aimed at fast exploration of two-variable relationships in many-dimensional datasets. mine consists of the algorithms for computing four measures of dependence mic, maximum asymmetry score (mas), maximum edge value (mev), minimum cell number (mcn)between two variables, having the generality and equitability property. generality is the ability of capturing variable relationships of different nature, while equitability is the property of penalizing similar levels of noise in the same way, regardless of the nature of the relation between the variables. the mine suite received immediate appraisal as a real breakthrough in the data mining of complex biological data as well as criticisms (see comments and referenced experiments by simon and tibshirani and by gorfin et al. at http://comments. sciencemag.org/content/10.1126/science.1205438.) many groups worldwide have already proposed its use for explorative data analysis in computational biology, from networks dynamics to virus ranking . together with the algorithm description, the mine authors provided a java implementation (mine.jar), two wrappers (r and python) and four reference datasets . however, applicability and scalability of mine.jar on large datasets is currently limited owing to memory requirements and lack of programming interfaces. further, a native parallelization, currently unavailable, would be of significant benefit. these issues are hurdles for a systematic application of mine algorithms to high-throughput omics datafor example, as a substitute of pearson correlation in network studies. inspired by these considerations, we propose an ansi c implementation of the mine algorithms, and the interfaces for r (minerva), and for c, python and matlab/octave (minepy).  
