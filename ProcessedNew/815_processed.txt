genome analysis bpipe: a tool for running and managing bioinformatics pipelines bpipe is a simple, dedicated programming language for defining and executing bioinformatics pipelines. it specializes in enabling users to turn existing pipelines based on shell scripts or command line tools into highly flexible, adaptable and maintainable workflows with a minimum of effort. bpipe ensures that pipelines execute in a controlled and repeatable fashion and keeps audit trails and logs to ensure that experimental results are reproducible. requiring only java as a dependency, bpipe is fully self-contained and cross-platform, making it very easy to adopt and deploy into existing environments. availability and implementation: bpipe is freely available frombioinformatics is a rapidly expanding field in which the arrival of new technologies and tools, and the evolution of experimental techniques is a constant occurrence. therefore, data analysis pipelines cannot be static and researchers are faced with a continual need to adapt, understand, experiment with and integrate new computational tools into their analyses. such analyses are usually composed of a chain of tools that perform separate stages of the process. for example, calling variants from exome sequencing data typically involves several tasks such as aligning the raw data to the genome; removing duplicate reads; recalibrating quality scores; calling variants; and filtering variants. for each step, several alternative computation tools are available, but ultimately a tool for each step needs to be chosen and integrated into a complete pipeline to produce results of biological significance. integration of such diverse computational tasks into a cohesive unit is approached in different ways. where the expertise is available, scripting languages such as perl or python are frequently employed to create pipeline scripts. at the other end of the spectrum, tools such as galaxy and taverna have emerged which offer many advantages in terms of ease of use and level of automation. despite the advantages of other tools, some bioinformaticians still prefer to run jobs as shell scripts. although this makes running them easy, it has many limitations. for example, when scripts fail before to whom correspondence should be addressed. completion, it is often difficult to determine where or why they failed and even harder to restart from the point of failure. there is no automatic log of commands or capture of output. failed jobs may leave half-created files that can be confused with completed files. modifying the pipeline often requires changes in multiple places, meaning that a missed change can cause commands to fail, or use incorrect data. bpipe tries to solve these problems while retaining much of the simplicity and syntax of a shell script.  
