genome analysis mindthegap: integrated detection and assembly of short and long insertions motivation: insertions play an important role in genome evolution. however, such variants are difficult to detect from short-read sequen-cing data, especially when they exceed the paired-end insert size. many approaches have been proposed to call short insertion variants based on paired-end mapping. however, there remains a lack of practical methods to detect and assemble long variants. results: we propose here an original method, called mindthegap, for the integrated detection and assembly of insertion variants from re-sequencing data. importantly, it is designed to call insertions of any size, whether they are novel or duplicated, homozygous or heterozy-gous in the donor genome. mindthegap uses an efficient k-mer-based method to detect insertion sites in a reference genome, and subsequently assemble them from the donor reads. mindthegap showed high recall and precision on simulated datasets of various genome complexities. when applied to real caenorhabditis elegans and human na12878 datasets, mindthegap detected and correctly assembled insertions 41 kb, using at most 14 gb of memory. availability and implementation: http://mindthegap.structural variants (svs) are large-scale structural changes in the genome. they have been typically defined in opposition to point mutations, which are single nucleotide polymorphisms (snps) and short insertions or deletions (indels). svs therefore include insertions, deletions and inversions of genomic sequences. recent research has shown that they play an important role in evolution and diseases (1000 genomes). however, svs are challenging to discover using present-day sequencing approaches, as they generally span genomic regions that are longer than the reads. computational methods have been designed to extract evidence of svs from sequencing data using two types of analyses: paired-end mapping of reads to a reference genome and copy number estimation using read depth .mindthegap is the first integrated method to detect and assemble insertion variants of any size and any type, using modest computing resources. the find module of mindthegap differs from most other existing methods by not relying on read mapping. instead, the de bruijn graph of reads is compared against the reference sequence, which enables fast and low-memory analysis. however, one current limitation of the find module is that it fails to detect insertions when other polymorphism occurs near the insertion site. improvements to waive this limitation are under development, based on a more detailed analysis of gaps longer than k. furthermore, the method could also be used to output snps and other types of structural variants. long insertion variants are challenging to detect and assemble; thus, there is a shortage of tools to compare mindthegap with. we compared our results with soapindel, which is a popular indel detection software limited to short insertions. the novelseq software is designed to find and assemble large insertions, and therefore would have been another candidate for comparison. however, despite several attempts and reaching out to the author, we were unable to run the software successfully on any of our datasets (the novelseq_cluster step ran indefinitely). novelseq relies on a complex pipeline, and we conjecture that it may be tailored to specific data types. while most other insertion detection methods require to run external software, mindthegap is stand-alone and is therefore easy to use. if needed, the modular organization of mindthegap allows users to replace the find module with the results of a classical insertion detection based on paired-end mapping. the fill module could also be used as a de novo assembly finishing step, i.e. gap-filling between adjacent contigs in scaffolds, although we did not evaluate its performance for this task. one important design choice for the fill module is to perform assembly with all the k-mers in the read dataset. this enables to assemble not only novel insertions, but also duplicated insertions and transposition events. classification of assembled insertions into the different event types is not done by mindthegap, but can be done by re-mapping insertions to the reference genome. one drawback of considering all reads during insertion assembly is that the de bruijn graph becomes more complex to analyze. an important future work will be to improve the recall of the fill module by using paired-end reads information to guide traversal of contig graphs. as repeated regions are notoriously difficult to assemble, we anticipate that our approach might not be effectivenote. parameter r was set to 2, and assembled insertions smaller than 5 bp were filtered out.for mobile element insertions. however, there exist methods tailored to the assembly of mei, based on local assembly with recruitment of mate reads. our tests on the na12878 dataset showed there is room for improvement: only two long homozygous insertions were successfully assembled out of 23 predicted ones. we postulate that (i) polymorphism or repetitions near the insertion sites hinder detection by the find module, and (ii) the complexity of the human genome makes de novo assembly of large contigs difficult. as no other tool was able to assemble long insertions, we could not assess whether our results were owing to weaknesses in our method, or to specificities of this particular dataset (complex insertion sequences or mispredicted insertions).  
