using semantic web rules to reason on an ontology of pseudogenes motivation: recent years have seen the development of a wide range of biomedical ontologies. notable among these is sequence ontology (so) which offers a rich hierarchy of terms and relationships that can be used to annotate genomic data. well-designed formal ontologies allow data to be reasoned upon in a consistent and logically sound way and can lead to the discovery of new relationships. the semantic web rules language (swrl) augments the capabilities of a reasoner by allowing the creation of conditional rules. to date, however, formal reasoning, especially the use of swrl rules, has not been widely used in biomedicine. results: we have built a knowledge base of human pseudogenes, extending the existing so framework to incorporate additional attributes. in particular, we have defined the relationships between pseudogenes and segmental duplications. we then created a series of logical rules using swrl to answer research questions and to annotate our pseudogenes appropriately. finally, we were left with a knowledge base which could be queried to discover information about human pseudogene evolution. availability: the fully populated knowledge base described in this document is available for download from http://ontology.pseudogene.org. a sparql endpoint from which to query the dataset is also available at this location.in recent years, formal ontologies have been suggested as a solution to the problem of describing complicated realms of biomedical knowledge . well-designed ontologies possess a number of positive aspects including, (i) the ability to define controlled vocabularies of terms, (ii) the ability to inherit and extend existing terms, (iii) the ability to declare relationships between existing terms and (iv) the ability to infer new relationships by reasoning over existing terms. through the technologies known collectively as the semantic web, most especially the web ontology language (owl) , researchers are able to share and extend ontologies throughout the scientific community. although biomedical ontologies have existed for a number of years, scientists are far from realizing the full benefits of their use. there is still room for considerable advancement in this area, especially in the application of formal reasoning. a unique strength of formal ontologies in the area of knowledge representation is their ability to be reasoned upon in a logically provable way. this reasoning is performed using description logic to whom correspondence should be addressed.(dl) , a form of logic developed to reason on objects, both individual objects and classes of objects. software called reasoners [examples include pellet , fact++ and kaon (use the rules of dl to perform particular operations on knowledge bases. the most important of these are: (i) consistency checking: the adherence of the ontological model to the rules of dl; (ii) satisfiability checking: the ability for classes described to be realized by actual individuals; and (iii) classification: the expansion of relationships between objects inferred from explicitly stated relationships. the dl version of the owl language assures that dl reasoners can perform these services in a computationally tractable manner. while the first two services are imperative for ensuring the integrity of data, the third, the ability to infer new relationships, is especially appealing to scientists as it hints at the possibility of new discovery. moreover, the relationships discovered are instantly provable, given the reasoners adherence to the rules of formal logic. the owl language offers a rich set of properties for inference, including class subsumption, property subsumption, transitivity of properties and inverse properties. we consider a simple example. we define a class father as a subclass of a class ancestor and a class son as a subclass of a class descendent. we also define a property has_father as a sub-property of has_ancestor with an inverse property has_son that is a subproperty of has_descendent. now, if say that matt has_father ted, the reasoner can automatically infer that ted has_descendant matt. taken in isolation, such examples seem trivial and obvious but they can be very helpful when sifting through huge amounts of data. despite the richness of owls set of relational properties, it does not cover the full range of expressive possibilities for object relationships that we might like. for example, it is often useful to declare data relationships in terms of conditional statements or production rules. for this purpose, a specialized rule language is useful. the semantic web rule language (swrl) incorporates an existing rule language (ruleml) with owl (swrl, 2005). rules are defined in two parts: antecedents and consequents. if all statements in the antecedent clause are determined to be true, then all statements in the consequent clause are applied. in this way, new properties can be assigned to individuals in an ontology based upon the current state of the knowledge base. a popular example is the uncle rule, which states that if a persons father has a brother, that brother is the persons uncle. so, if matt has_father ted and ted has_brother doug, the reasoner can infer that matt has_uncle doug. swrl also specifies a library of built-in functions which can be applied to individuals. these include numerical comparison, simple arithmetic and string manipulation. at present, swrl is the most widely used rule language in the semantic web community. the popular ontology development environmentwith a fully entailed ontology loaded into a triple store, we were able to issue sparql queries to find pseudogenes matching the criteria specified by cases 1 and 2. in both cases, the sparql queries are quite simple and direct. recall that in case 1, we are trying to compare the evolution rate of a pseudogene with that of its parent. using rules 16, we isolated pseudogenes and parent genes which occur on the segments of an sd pair, making sure that no other genes or pseudogenes were present on the segment containing the parent gene. by analyzing the substitution rate we attached a quality to the pseudogene indicating whether it might be positively, negatively or neutrally selected. we can now find pseudogenes of i74because of their status as genomic fossils, pseudogenes are of interest not only for how they currently appear but how they arose and developed. much like examining and dating bones to a paleontologist, the issue of ascertainment is central to the student of pseudogenes. in this, a certain amount of uncertainty is inherent. for a number of pseudogenes, we can precisely describe their origin and place in time; for others we are less certain. we can see an example of this in case 1 above, where a higher substitution rate suggests that a pseudogene may be positively selected it also raises the possibility that the surrounding region is negatively selected. we cannot say with full certainty which possibility is the case. the handling of uncertainty is a problematic issue when formally describing pseudogenes. owl and most other mainstream ontology languages do not deal with the concept of probability with respect to knowledge. this is largely because dl itself only deals with data that is certain. other branches of logic exist to handle situations of uncertainty, such as fuzzy or probabilistic logic and extensions to owl have been proposed to build knowledge bases using these logics . at present, however, these are confined to the more experimental reaches of knowledge representation studies. the alternative would be to define terms using a conventional ontology to represent different levels of certainty withduplicated-processed pseudogene found by aligning one pseudogene with another on the same segment as the parent gene. the pseudogene, pgohum00000154773, is located on chromosome 8 of the reference sequence between bases 7199348 and 7200542. its parent gene, ensg00000205946 (usp17l6p), is found on chromosome 4 between bases 8978698 and 8979894. pgohum00000154773 is found on an sd segment located between 7199348 and 7200542 on chromosome 8. the parent gene is on the duplicate segment located between 8966987 and 9017856 on chromosome 4. the duplicate segment also contains another pseudogene, pgohum00000149316 between bases 8992177 and 8992537. because this other pseudogene is a similar distance from the start of the segment as pgohum00000154773 is to the start of its segment (25 190 bp versus 24 249 bp) and the parent gene is in a different portion of the segment (11 711 bp from the start), the deduction that pgohum00000154773 is aligned to pgohum00000149316 rather than ensg00000205946 makes sense. this was found by applying swrl rule 7. regards to ascertainment. as our knowledge base grows, we hope to explore this area more fully. performance presents another challenge to builders of biomedical ontologies. although owl-dl guarantees computational tractability, it does not promise that classification can be completed using an amount of time and memory that we may find acceptable. it is also an unfortunate truth that computational expense increases as an ontology becomes more expressive. these problems are particularly acute for genomics researchers, where vast amounts of data can quickly bog down a dl reasoner even on a well apportioned machine. for example, we initially ran out of memory while trying to classify our ontology using the full set of pseudogenes. this occurred even when running the reasoner on a 32 gb server. after some experimentation, we were able to get the ontology to classify by performing two steps. first, we removed all properties that were not used for the creation of entailments for production rules, generating the full set of inferences and then re-inserting the non-essential properties. second, we changed individual instances of protein_coding_gene to a custom class simplegene which extends sos biological_region class. this freed the reasoner from applying the restrictions defined by so for protein coding genes and saved considerable amounts of memory. we felt this workaround was acceptable because our production rules do not make use of these restrictions. after the reasoner had finished generating entailments, we added an assertion declaring simplegene a subclass of protein_coding_gene, thus allowing future inferences to i76by the current ontology, including portions derived from so, as well as areas to be covered in future work. in the diagram, plain lines indicate class hierarchy (is-a) relationships, while dashed lines indicate property (has-a) relationships. be drawn upon the genes using so. after applying these techniques, classification of the full set of pseudogenes took around 19 min using a 28 gb heap size. a diminished set containing one of every 10 pseudogenes took around 11 min to classify and the set containing one of every 4 took around 13 min. it is abundantly clear that at present our approach could not be used for large-scale annotations, such as that of an entire genome. for large amounts of data, the integration of so terms with relational database technology through the chado schema and chado-xml offer a far quicker solution. it is promising that rdf data can be queried quickly using triple stores, but the process of creating the full set of entailments by classifying the data through the reasoner is still a significant performance bottleneck. we can only hope that the future will continue to bring performance improvements in this area, both through more efficient algorithms and faster technology. the ontology we have presented here is an extension of so that joins additions related to pseudogenes with additions related to sds. it forms a useful prototype for describing pseudogenes and provides a useful framework for reasoning and drawing biological inferences. it stops short, however, of providing a canonical ontology of the domain of pseudogenes. as part of our future research, we intend to build upon the structure presented here to form a more complete ontology. for example, it would be useful to add classes and relationships to describe pseudogene characteristics such as regulatory and transcribed. these terms could be incorporated from previous work by. we also wish to incorporate the notion of derivation of a pseudogene, whether from the nucleus or mitochondria. we hope to enlist the support of other pseudogene researchers in this endeavor. finally, we see the potential for further development leading to an ontology of sds.illustrates the present coverage of our ontology and areas we hope to include in the future.we used the so to build a knowledge base of pseudogenes, extending so terms where necessary to describe our data and borrowing identifiers from the pgo ontology. we created a series of custom swrl rules to find situations of interest involving our research on the relation between pseudogenes and sds. using these rules and the inherent capabilities of dl reasoners, we were able to infer new relationships about our existing data. we moved this fully entailed knowledge base into a triple store with a sparql endpoint to allow us to query it for biologically relevant information.  
