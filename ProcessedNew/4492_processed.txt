genome analysis svseq: an approach for detecting exact breakpoints of deletions with low-coverage sequence data motivation: structural variation (sv), such as deletion, is an important type of genetic variation and may be associated with diseases. while there are many existing methods for detecting svs, finding deletions is still challenging with low-coverage short sequence reads. existing deletion finding methods for sequence reads either use the so-called split reads mapping for detecting deletions with exact breakpoints, or rely on discordant insert sizes to estimate approximate positions of deletions. neither is completely satisfactory with low-coverage sequence reads. results: we present svseq, an efficient two-stage approach, which combines the split reads mapping and discordant insert size analysis. the first stage is split reads mapping based on the burrows wheeler transform (bwt), which finds candidate deletions. our split reads mapping method allows mismatches and small indels, thus deletions near other small variations can be discovered and reads with sequencing errors can be utilized. the second stage filters the false positives by analyzing discordant insert sizes. svseq is more accurate than an alternative approach when applying on simulated data and empirical data, and is also much faster. availability: the program svseq can be downloaded ata deletion is a structural variation (sv) in which a segment of dna is missing comparing with a reference genome. we focus on developing computational methods for finding deletions in this article. previously, comparative genomic hybridization with whole-genome tiling arrays was the primary method for characterizing structural variations. now highthroughput sequencing (hts) technologies (such as the roche 454 flx, illumina genome analyzer, and abi solid) become more available. these hts technologies have been applied in generating huge amount of sequence data and newer methods for finding svs are mainly developed for sequence data. for example, the pilot study of the 1000 genomes project uses multiple methods to discover svs from whole-genome sequence data collected by different technologies from hundreds of individuals. as more individuals to whom correspondence should be addressed. are being sequenced at low coverage for the purpose of finding variations at a population level, it is important to develop sv detection algorithms that are efficient for processing large amount of sequence reads and accurate given low-coverage short sequence reads. these algorithms should be able to handle sequencing errors that are hard to avoid due to technological limitations. refer to;;for discussions on the latest methods for discovering svs using sequence data. in this article, we develop a new approach called svseq for finding deletions with exact breakpoints from low-coverage next-generation sequencing data. different from methods for estimating approximate positions of beak points, svseq finds the breakpoints of deletions in resolution of 1 bp, which is similar to the program pindel . mapping the breakpoints of deletions to nucleotide resolution facilitates the analysis of the origin and functional impact of the deletions . different from pindel, svseq takes a two-stage approach for discovering deletions. the first step applies an enhanced split reads mapping approach to identify candidate deletion sites from sequence reads. the second step uses mapped paired-end reads spanning candidate deletions as supports to filter false positives. in some sense, svseq exploits more information (i.e. both the split reads and discordant paired-end reads) in the sequence data than existing approaches, which often use only one source of information. better utilizing the given data is the key to achieve higher accuracy when dealing with low-coverage data.to evaluate the accuracy and efficiency of svseq, we test our method on both simulated data and real data and compare with the program pindel. there are two versions of pindel: @bullet pindel v_0.1.0: called pindel v1 in this article. it only allows perfect matches in mapping split reads . @bullet pindel v_0.2.0: called pindel v2 in this article. this version has been released but not yet described in a paper. it allows mismatches and small indels in mapping split reads. pindel v1 has a default cutoff value c = 2 and pindel v2 has a default cutoff value c = 3. we compare with pindel v1 in finding the deletions up to 1 mbps. but for pindel v2, since its running time is significantly longer than pindel v1 when finding larger svs, we only compare with it in finding deletions up to 8092 bp. in this article, we focus on deletions that are at least 50 bps, although the algorithm of svseq can be used to find smaller deletions. we note that there are existing methods, e.g. the program dindel , which are dedicated for finding smaller indels. we only compare with pindel in finding deletions, while pindel can also find insertions, inversions and tandem duplications. assuming paired-end reads are properly mapped, the reads picked out for the first step of svseq are the ones with the anchors mapped as a whole read but the reads themselves could not. the reads are stored in the fastq format. the positions and strands of the anchors are provided in another file to svseq. (there is a demo on the svseqs website). in the second step, svseq take the bam files as input for spanning pairs. for both steps, svseq takes the reference in fasta format as input.  
