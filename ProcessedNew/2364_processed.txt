improved gap size estimation for scaffolding algorithms motivation: one of the important steps of genome assembly is scaffolding , in which contigs are linked using information from read-pairs. scaffolding provides estimates about the order, relative orientation and distance between contigs. we have found that contig distance estimates are generally strongly biased and based on false assumptions. since erroneous distance estimates can mislead in subsequent analysis, it is important to provide unbiased estimation of contig distance. results: in this article, we show that state-of-the-art programs for scaffolding are using an incorrect model of gap size estimation. we discuss why current maximum likelihood estimators are biased and describe what different cases of bias we are facing. furthermore, we provide a model for the distribution of reads that span a gap and derive the maximum likelihood equation for the gap length. we motivate why this estimate is sound and show empirically that it outper-forms gap estimators in popular scaffolding programs. our results have consequences both for scaffolding software, structural variation detection and for library insert-size estimation as is commonly performed by read aligners. availability: a reference implementation is provided at https://github. com/scilifelab/gapest supplementary information: supplementary data are availible atthe decreasing cost of sequencing has made whole-genome sequencing commonplace . when sequencing a genome, one obtains a large set of short fragments of dna (usually referred to as reads). assembling these reads (and optimally reconstruct the genome or chromosomes that were sequenced into one piece) remains a complex task . due to the presence of repeats, allelic differences and sequencing errors, the result of an assembly is rarely a complete reconstruction of the genome. instead, the result is often subsets of reads assembled into longer fragments of genomic sequences referred to as contigs. since the goal is to recreate the genome, ordering and placing these contigs as they appear on the genome (given that the contigs are correctly assembled) is an important assembly step after contig construction in a process called scaffolding . in scaffolding, the problem is to link together contigs in their correct order and orientation using paired reads. these paired reads have some known distance (up to a distribution) between them on the genome. if the two separate reads from a pair map to two different contigs, a relation between the two contigs can be inferred. contigs that can be linked together represent a longer fragment of the genome where sub-parts of the fragment remain unknown (i.e. the gaps between contigs) and such a fragment consisting of more than one contig is called a scaffold. modern scaffolder programs involve two steps (either separate or intermixed):finding optimal order and orientation of the contigs with respect to some objective function. checking for paired-read inconsistencies. this involves removing reads that have been mapped with too small/ large an insert size (with respect to some generously set thresholds) and reads that have been mapped in the wrong relative orientation (often removed in the optimization step). after this is done, the distance between contigs is often estimated separately using a maximum likelihood (ml) estimation from the reads that are linking the contigs . the issue of gap length estimation should not be undervalued: high-quality scaffolding provides an understanding of what is necessary for finishing a genome , with the contig distances effectively quantifying the unassembled parts of the genome. bad estimates of contig distances, in particular under-estimates, can mislead finishing. bad distance estimates can also interfere in genome annotation, e.g. with an underestimated gap suggesting that there is not room for an expected feature, or e.g., suggesting that a potential intron is too large in the case of over-estimation. furthermore, with contig distances being an essential indicator in the scaffolding process, a systematic bias can impair correct scaffolding. from currently implemented techniques of gap size estimation, we noticed surprisingly poor estimates even in ideal cases without mapping errors or duplicated reads. both over-and underestimation of hundreds of base pairs could occur. this prompted our group to model gap size. our aim is to provide to whom correspondence should be addressed. an accurate gap size estimation to be applied after ordering and orientation of contigs and filtering of paired-read inconsistencies. it is commonly assumed that the distribution of insert sizes for reads that span over a certain gap (or even over a single position in the genome) is the same as the distribution of the paired end library (often approximated as a normal distribution). this is an erroneous assumption. there is an observation bias from the assumption that reads that span the gap are coming from the whole insert size distribution of the library.gives examples of two types of biases that can occur and which reads would actually be observed in these cases. a negative bias occurs when the gap size is underestimated due to only observing reads from the upper part of the distribution. similarly, a positive bias occurs when overestimating the gap by only observing reads from the lower parts of the library insert size distribution. another example of positive bias is when aligning reads to a short contig, a case occurring frequently when working with fragmented assemblies. then, only pairs with shorter insert size will have both reads mapped. this is highly relevant for read aligners such as bowtie and burrows wheeler aligner (bwa) (li, h. and durbin) that are routinely estimating the insert sizes for paired-read libraries. since they are designed mainly for high-quality reference genomes, they are implicitly using an infinite contig length assumption, and hence underestimate the insert size on fragmented assemblies. a heuristic way to deal with this bias is by choosing only large contigs (compared to the insert size of the library) and consider only paired reads that place sufficiently far from contig ends . in sections 2.12.3, we explain a model for estimating gap lengths. section 2.4 derives an estimate from the model in a special case and gives some intuition behind the estimate. in section 2.5, the model is used to derive a closed form ml expression and we discuss this expression and its practical implications. section 3 shows results of gap estimations from our formula compared to estimations from popular scaffolding programs. the results are discussed in section 4.to investigate the bias in gap estimation of current dedicated scaffolders, we simulated a 300 000 bp genome with no biological structure (e.g. free from repeats). this is done to allow us to focus on the concept of pure gap estimation rather than e.g. removal of repeat contigs and mapping errors. under these simple scaffolding circumstances a reasonable gap estimation model should perform well. three different libraries were simulated from this genome where paired read positions were uniformly distributed throughout the genome (see). in the evaluation, we tested our gap estimation model, implemented in the program gapest (code provided at https://github .com/scilifelab/gapest), against three state-of-the-art scaffolders: sopra (v1.4.6), sspace (v2.0) and opera (v1.02). gapest takes a sam-file as input and infers the gaps between contigs by parsing the positions of the mapped reads in the sam-file. the gap estimation is based on the formula in theorem 1. reads were mapped with bwa (li, h. and durbin) using default parameters for all programs except opera which is coupled with bowtie . we chose bwa since it is able to align soft-clipped reads (read aligned partially to contigs) which gives more observations to our tests.the scaffolders we tested perform poorly and suffer from severe bias even in ideal conditions. opera and sopra show very similar gap estimations. although opera estimates several gap sizes simultaneously, this has no advantage in our tests since paired reads do not span over more than one gap. under these circumstances, operas gap estimator works with one gap at a time, and effectively becomes the one used by sopra. using simulated datasets, gapest outperforms the scaffolders tested when estimating gap lengths (figs 4 and 5). given the assumptions (in agreement with scaffolding literature) of reads being sequenced uniformly throughout the genome and that the library insert size is somewhat normal, gapest appears to be unbiased in all cases. gapest also produces accurate results with the biological data, as shown in sections 3.3 and 3.4. this type of gap estimation could open up new ways to tackle the scaffolding problem. for example, using the gap information in the ordering step of the scaffolding algorithm could improve relative placings of the contigs. as indicated in section 1, our model for gap size estimation can be used in more general contexts. for example, read aligners commonly estimate insert size by observing reads pairs that map to the same contig. this is a slightly different problem. on one hand, paired reads with large insert size are more likely to span any position on the genome (as seen in section 2.4), giving rise to negative bias. on the other hand, one will observe less paired reads with large insert size on a given contig, since long reads are more likely to have one of the reads placed outside the contig. this gives rise to positive bias and the problem is exacerbated if contigs are short relative to insert size distribution. another problem that requires sensitive estimates of insert-size distributions on a given contig is structural variation detection with paired read information. here we are facing the sameobservation bias as in the read alignment problem. our model provides the framework for deriving the exact distribution in each individual case and using this, the sensitivity in detection of structural variants can be improved.we have, in this article, discussed the mathematical theory behind gap estimation. this theory has resulted in a model that explains the most likely length of the gap between two contigs given the observed read pairs that span the gap. moreover, we have implemented the formula of the ml equation and compared the estimates to state-of-the-art scaffolding software. empirical results suggest that our model gives a significant improvement in estimating gap length. we encourage developers of existing scaffolder programs to use this formula for gap size estimation where possible.py j jc 1 j; jc 2 j f y ddy ; 3 noting that the integration bounds in the normalizing constant follow from the definition of pojd; jc 1 j; jc 2 j (it is zero outside this interval). from this, the log likelihood can be written aswe want to differentiate this expression with respect to d to obtain the maximum likelihood equation for d. by linearity of the differential operator, differentiation of (4) can be performed separately for each term. the first term is constant in d and cancels out. the second term becomesnow, if we let gd r jc1jjc2j1 2r1 py j jc 1 j; jc 2 jfy ddy, we can write the third term aswe therefore haveletting this equation be equal to zero to find the ml estimate, we get (after some algebraic manipulations)here, i(y) is the stepwise function obtained from differentiating pyjd and it is defined bywhere c min minfjc 1 j; jc 2 jg and c max maxfjc 1 j; jc 2 jg. furthermore, evaluating the integral in (5) gives 1 jgjwhich can be written asfinally, we note that jgj will cancel when dividing g0d with g(d). this is the result we wanted to prove.  
