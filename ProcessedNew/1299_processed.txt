deep learning of the tissue-regulated splicing code motivation: alternative splicing (as) is a regulated process that directs the generation of different transcripts from single genes. a computational model that can accurately predict splicing patterns based on genomic features and cellular context is highly desirable, both in understanding this widespread phenomenon, and in exploring the effects of genetic variations on as. methods: using a deep neural network, we developed a model inferred from mouse rna-seq data that can predict splicing patterns in individual tissues and differences in splicing patterns across tissues. our architecture uses hidden variables that jointly represent features in genomic sequences and tissue types when making predictions. a graphics processing unit was used to greatly reduce the training time of our models with millions of parameters. results: we show that the deep architecture surpasses the performance of the previous bayesian method for predicting as patterns. with the proper optimization procedure and selection of hyperparameters, we demonstrate that deep architectures can be beneficial, even with a moderately sparse dataset. an analysis of what the model has learned in terms of the genomic features is presented.alternative splicing (as) is a process whereby the exons of a primary transcript may be connected in different ways during pre-mrna splicing. this enables the same gene to give rise to splicing isoforms containing different combinations of exons, and as a result different protein products, contributing to the cellular diversity of an organism . furthermore, as is regulated during development and is often tissue dependent, so a single gene can have multiple tissue-specific functions. the importance of as lies in the evidence that at least 95 of human multi-exon genes are alternatively spliced and that the frequency of as increases with species complexity . one mechanism of splicing regulation occurs at the level of the sequences of the transcript. the presence or absence of certain regulatory elements can influence which exons are kept, while others are removed, before a primary transcript is translated into proteins. computational models that take into account the combinatorial effects of these regulatory elements have been successful in predicting the outcome of splicing . previously, a splicing code that uses a bayesian neural network (bnn) was developed to infer a model that can predict the outcome of as from sequence information in different cellular contexts . one advantage of bayesian methods is that they protect against overfitting by integrating over models. when the training data are sparse, as is the case for many datasets in the life sciences, the bayesian approach can be beneficial. it was shown that the bnn outperforms several common machine learning algorithms, such as multinomial logistic regression (mlr) and support vector machines, for as prediction in mouse trained using microarray data. there are several practical considerations when using bnns. they often rely on methods like markov chain monte carlo (mcmc) to sample models from a posterior distribution, which can be difficult to speed up and scale up to a large number of hidden variables and a large volume of training data. furthermore, computation-wise, it is relatively expensive to get predictions from a bnn, which requires computing the average predictions of many models. recently, deep learning methods have surpassed the state-ofthe-art performance for many tasks . deep learning generally refers to methods that map data through multiple levels of abstraction, where higher levels represent more abstract entities. the goal is for an algorithm to automatically learn complex functions that map inputs to outputs, without using hand-crafted features or rules . one implementation of deep learning comes in the form of feedforward neural networks, where levels of abstraction are modeled by multiple non-linear hidden layers. with the increasingly rapid growth in the volume of omic data (e.g. genomics, transcriptomics, proteomics), deep learning has the potential to produce meaningful and hierarchical representations that can efficiently be used to describe complex biological phenomena. for example, deep networks may be useful for modeling multiple stages of a regulatory network at the sequence level and at higher levels of abstraction. ensemble methods are a class of algorithms that are popular owing to their generally good performance , and are often used in the life sciences . the strength of ensemble methods comes from combining the predictions of many models. random forests is an example, as is the bayesian model averaging method previously used to model the regulation of splicing. recently, neural network learning has been improved using a technique called dropout, which makes neural networks behave like an ensemble method . dropout works by randomly removing hidden neurons during the presentation of each training example. the outcome is that instead of training a single model with n hidden variables, it approximates to whom correspondence should be addressed. the author 2014. published by oxford university press. this is an open access article distributed under the terms of the creative commons attribution non-commercial license (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. for commercial re-use, please contact journals.permissions@oup.com the training of 2 n different networks, each on a different subset of the training data. it is described as an extreme form of bagging and is a computationally efficient way of doing model averaging . with large datasets, learning with mcmc methods can be slow and can be outperformed by stochastic optimization methods in practice . these algorithms process small subsets (minibatches) of data at each iteration, and update model parameters by taking small steps in the direction of the gradient to optimize the cost function. it is common to use stochastic gradient descent to train feedforward neural networks. the learning algorithm (backpropagation) is also conceptually simple, involving for the most part matrix multiplications, which makes them suitable for speedup using graphics processing units (gpu). here, we show that the use of large (many hidden variables) and deep (multiple hidden layers) neural networks can improve the predictive performances of the splicing code compared with previous work. we also provide an evaluation method for researchers to improve and extend computational models for predicting as. another goal is to describe the procedure for training and optimizing a deep neural network (dnn) on a sparse and unbalanced biological dataset. furthermore, we show how such a dnn can be analyzed in terms of its inputs. to date, aside from a small number of works , deep learning methods have not been applied in the life sciences, even though they show tremendous promise. we show results supporting that dnn with dropout can be a competitive algorithm for doing learning and prediction on biological datasets, with the advantage that they can be trained quickly, have enough capacity to model complex relationships and scale well with the number of hidden variables and volume of data, making them potentially highly suitable for omic datasets. different from the previous bnn, which used 30 hidden units, our architecture has thousands of hidden units with multiple non-linear layers and millions of model parameters (supplementary). we also explored a different connection architecture compared with previous work. before, each tissue type was considered as a different output of the neural network. here, tissues are treated as an input, requiring that the complexity of the splicing machinery in response to the cellular environment be represented by a set of hidden variables that jointly represent both the genomic features and tissue context. besides a different model architecture, we also extended the codes prediction capability. in previous work, the splicing code infers the direction of change of the percentage of transcripts with an exon spliced in (psi) , relative to all other tissues. here, we perform absolute psi prediction for each tissue individually without the need for a baseline averaged across tissues. we also predict the difference in psi (psi) between pairs of tissues to evaluate the models tissue-specificity. we show how these two prediction tasks can be trained simultaneously, where the learned hidden variables are useful for both tasks. we compare the splicing codes performance trained with the dnn with the previous bnn and additionally optimized a mlr classifier on the same task for a baseline comparison. a gpu was used to accelerate training of the dnn, which made it feasible to perform hyperparameter search to optimize prediction performance with cross validation.we present three sets of results that compare the test performance of the bnn, dnn and mlr for splicing pattern prediction. the first is the psi prediction from the lmh code tested on all exons. the second is the psi prediction evaluated only on targets where there are large variations across tissues for a given exon. these are events where psi ! ae0.15 for at least one pair of tissues, to evaluate the tissue specificity of the model. the third result shows how well the code can classify psi between the five tissue types. hyperparameter tuning was used in all methods. the averaged predictions from all partitions and folds are used to evaluate the models performance on their corresponding test dataset. similar to training, we tested on exons and tissues that have at least 10 junction reads. for the lmh code, as the same prediction target can be generated by different input configurations, and there are two lmh outputs, we compute the predictions for all input combinations containing the particular tissue and average them into a single prediction for testing. to assess the stability of the lmh predictions, we calculated the percentage of instances in which there is a prediction from one tissue input configuration that does not agree with another tissue input configuration in terms of class membership, for all exons and tissues. of all predictions, 91.0 agreed with each other, 4.2 have predictions that are in adjacent classes (i.e. low and medium, or medium and high), and 4.8 otherwise. of those predictions that agreed with each other, 85.9 correspond to the correct class label on test data, 51.2 for the predictions with adjacent classes and 53.8 for the remaining predictions. this information can be used to assess the confidence of the predicted class labels. note that predictions spanning adjacent classes may be indicative that the psi value is somewhere between the two classes, and the above analysis using hard class labels can underestimate the confidence of the model.  
