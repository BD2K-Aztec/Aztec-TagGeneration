genome analysis cosmos: python library for massively parallel workflows efficient workflows to shepherd clinically generated gen-omic data through the multiple stages of a next-generation sequen-cing pipeline are of critical importance in translational biomedical science. here we present cosmos, a python library for workflow management that allows formal description of pipelines and partitioning of jobs. in addition, it includes a user interface for tracking the progress of jobs, abstraction of the queuing system and fine-grained control over the workflow. workflows can be created on traditional computing clusters as well as cloud-based services. availability and implementation: source code is available for academic non-commercial research purposes. links to code and documentation are provided at http://lpm.hms.harvard.edu and http:// wallthe growing deluge of data from next-generation sequencers leads to analyses lasting hundreds or thousands of compute hours per specimen, requiring massive computing clusters or cloud infrastructure. existing computational tools like pegasus and more recent efforts like galaxy and bpipe allow the creation and execution of complex workflows. however, few projects have succeeded in describing complicated workflows in a simple, but powerful, language that generalizes to thousands of input files; fewer still are able to deploy workflows onto distributed resource management systems (drms) such as platform load sharing facility (lsf) or sun grid engine that stitch together clusters of thousands of compute cores. here we describe cosmos, a python library developed to address these and other needs.  
