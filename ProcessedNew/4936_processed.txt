systems biology xip: a computational environment to create, extend and share workflows xip (extensible integrative pipeline) is a flexible, editable and modular environment with a user-friendly interface that does not require previous advanced programming skills to run, construct and edit workflows. xip allows the construction of workflows by linking components written in both r and java, the analysis of high-throughput data in grid engine systems and also the development of customized pipelines that can be encapsulated in a package and distributed. xip already comes with several ready-to-use pipeline flows for the most common genomic and transcriptomic analysis and 300 computational components.large-scale sequencing and microarray technologies are high-throughput methodologies that generate huge genomic and transcriptomic data that must be processed in a multi-step fashion. usually, it is carried out by several distinct programs that are interconnected in a specific order, forming a workflow process, namely pipeline . for example, a simple workflow to investigate genes potentially related to cancer might begin with microarray image analysis, normalization, statistical tests to identify differentially expressed genes between the normal and the tumor tissues followed by a multiple test p-value correction.have described that pipelines must satisfy at least three characteristics: (i) flexibility: a software can be used to analyze different data sets that may require different analysis tools; (ii) integrability: a system should provide the framework to facilitate data integration of analysis results from different tools; and (iii) extensibility: a system needs to allow for the inclusion of new tools in a modular fashion. in addition to these characteristics that are actually necessary to a pipeline, we believe that the portability with grid engines and the interoperability with pre-existing systems are also important in this new era of generation of high-throughput data. the portability with grid engines makes possible to run heavy routines in supercomputers (hundreds of cores) in an easy manner while the interoperability allows the use of workflows constructed under different platforms. to facilitate the construction of workflows, we present xip (extensible integrative pipeline), a free [under the lesser general public license (lgpl)] and easy-to-use environment designed to integrate the state-of-the-art computational methods and to satisfy researchers need in multi-collaborative projects. carried out in different laboratories to guarantee both reproducibility and quality. the construction of a computational pipeline under the xip platform does not require advanced computer-programming skills. at, there is a list of components and a tool to search for a specific algorithm. to build a workflow, the user clicks on the component of interest and drags and drops on the canvas . the order of analysis in the pipeline is set according to the order of the components defined by the arrows of the workflow . the tail of the arrow represents from which component the data comes, and the head points to the next analysis step. in other words, the direction of the arrows indicates the data flow. the parameters of each component can be easily set up by using the graphical interface illustrated on, and the results are visualized in separate windows as shown in. xip satisfies the three essential characteristics for a pipeline platform and also the fourth (portability to grid engines) and fifth (interoperability) described in section 1 as follows:(1) flexibility: the specific requirements of a research project make it difficult to use a pipeline designed for a particular data set for analysis of another data set. as a result, two different pipelines must be constructed, both sharing several common components. however, notice that it is not necessary to reconstruct the entire pipeline, but only the different parts. as the pipelines constructed by xip are modular, i.e. the pipelines are composed of an ordered sequence of components, one must replace only the different components to adapt the pipeline to a new data set.(2) integrability: components written in both r and java programming languages run on xip. internally, xip translates the r data structures into java structures, thus allowing the connection of packages available at the r webpage (http://www.r-project.org) and the biojava project .(3) extensibility: r and java functions developed by different groups can automatically be translated to a xip component and included in the platform. therefore, xip can be customized and extended with several components depending on the users necessities.(4) portability to grid engine: the analysis of large amounts of data generated by the new technological approaches in molecular biology requires high-performance computational resources. the xip platform allows the construction of pipelines that use grid engines to parallelize computational jobs. to run a parallel job, the user must set up a cluster (server) with several cores and log in to this remote server. the integration with grid engines makes xip suitable for individual researchers with modest data sizes as well as for big collaborative projects with large amounts of data.(5) interoperability: owing to several different pipeline platforms available in the literature such as pegasus , kepler and galaxy , each one with unique advantages, it would be interesting whether one platform could integrate components developed in different environments. xip satisfies the interoperability by converting the components developed in the galaxy platform to an xip component. interoperability with other systems is under development. once a pipeline is constructed, it can be distributed in both a xip xml format and a jar file. the xip xml is a markup language that stores the pipeline structure, i.e. the information about how the components are interconnected. the jar format is a closed stand-alone package that runs in a computational) and the cso validator . other examples can be found at the xip webpage. summing up, the main advantages of xip are (i) it satisfies all the five characteristics for a pipeline platform; (ii) components developed in the galaxy platform can be converted to xip components; and (iii) stand-alone packages created under xip can be run outside the xip environment. the entire code is open and we encourage researchers to contribute with novel functionalities for the xip platform.  
