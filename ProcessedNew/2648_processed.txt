kmad: knowledge-based multiple sequence alignment for intrinsically disordered proteins intrinsically disordered proteins (idps) lack tertiary structure and thus differ from globular proteins in terms of their sequencestructurefunction relations. idps have lower sequence conservation, different types of active sites and a different distribution of functionally important regions, which altogether make their multiple sequence alignment (msa) difficult. the kmad msa software has been written specifically for the alignment and annotation of idps. it augments the substitution matrix with knowledge about post-translational modifications, functional domains and short linear motifs. results: msas produced with kmad describe well-conserved features among idps, tend to agree well with biological intuition, and are a good basis for designing new experiments to shed light on this large, understudied class of proteins. availability and implementation: kmad web server is accessible atmore than 30 of all human proteins contain unfolded regions . this stands in marked contrast to how little we know about them . intrinsically disordered proteins (idps) lack a stable tertiary structure, and thus lack a hydrophobic core. they thus also lack an active site. idps often interact with other proteins by means of short linear motifs (slims), which are very abundant in disordered regions. this is a fundamental component of cell signalling . these idp characteristics have many consequences for aligning their sequences and thus for their study in general. algorithms underlying existing msa software are directly or indirectly based on knowledge obtained from studying 3d protein structures. aligning a hydrophobic residue in the protein core with a hydrophilic one is penalized heavily when aligning ordered proteins, but this is much less the case when aligning idps simply because idps do not have a hydrophobic core. in addition, folded proteins contain large protein protein interaction surfaces, ion binding sites, active sites or other 3d motifs that msa software capitalizes on, while idps generally consist of short motifs surrounded by stretches of highly variable length and composition. the main function determinants of idps are slims, and posttranslational modifications (ptms). for the specific purpose of aligning idps, we introduce knowledge-based multiple sequence alignment (msa) for idps, or kmad, that incorporates slim, domain and ptm annotations in the alignment procedure. obviously, the inclusion of this knowledge will cause these motifs to line up in the final msa without certainty that this reflects biological reality. this way, however, kmad generates hypotheses that can be validated experimentally to progress, for example, protein engineering, drug design or the analysis of genetic disorders. in these research fields, scientists most often are interested in one single protein and want to gather information for this one protein. in the particular case of idps such information normally relates to slims and ptms and how conserved these are in an msa. in the hssp project , the concept of the insertion-free msa was introduced specifically for this v c the author 2015. published by oxford university press.kmad overcomes several problems encountered with other methods when aligning idps. two examples are shown inand 4. the first example illustrates the advantage of kmads use of slims. clustal omega spreads out the lig_bir_ii_1 motif. in the kmad alignment, the motif is lined up nicely in all sequences but 2. even if this predicted slim should not be aligned as in the b panel of, the bioscientist will still benefit from awareness of the presence of this conserved motif in the n-terminal segment. the second example illustrates the use of ptms. the phosphorylated serines at positions 74 and 75 in the first sequence are shifted to the left relative to the columns of phosphorylated serines at positions 75 and 76 in the other four sequences. a gap at position 73 in the query sequence would be a better solution in this case, but because we want to keep the first sequence indel-free, an insertion is introduced in all other sequences. the phosphorylated serine at position 94 in the first sequence seems better aligned with the serines at position 92 in sequences 2 and 3, and indeed, kmad finds this solution. eventually, glycosylated asparagines at position 102 in sequences 4 and 5 should most probably be aligned to asparagines at position 105 from sequences 13. all problems mentioned above are solved by kmad with no harm to the rest of the alignment. the problem. excerpts from clustal omega and kmad alignments of human sialoprotein (sial_human) with four homologues. (a) clustal omega alignment annotated with ptms; (b) kmad alignment annotated with ptms. ptm sites are highlighted with bright colours (red is annotated phosphorylation, orange is predicted phosphorylation, green is n-linked glycosylation; further colour details are given on the project website). the two serines that seem to appear in the sequences 4 and 5 around position 93 in the kmad alignment are located in the gap (indicated with lowercase characters) around position 90 in the clustal omega alignment. in dna analysis, protein engineering, etc, this software feature is used frequently. the gapped alignment that provides a more phylogeny-oriented view on this sequence family is available at the kmad websitemore balibase results and also prefab benchmarking results are available at the kmad website.. schematic representation of kmads scoring function; i and j are positions in the profile and in the sequence, respectively; profile i is a vector of length 20 that contains the frequencies of the 20 amino acid types m at position i in the alignment that resulted from the previous iteration (in the first iteration all profile values are 0 or 1, according to the first sequence). d is an idp-specific 20 20 substitution matrix . the residue score is the convolution of the profile vector for i and the d column for j. x ft are weights for the three feature types f t (x ft weights optionally can be set by the user). u f ;i values for ptms and slims are determined from the conservation of that feature at i. u f ;i values for domains are the conservation of the domain at position i minus the conservation of all other domains at that position. the terms r relate to the perceived reliability (pr) of the feature; experimentally determined ptms, for example, weigh three times higher than predicted ones. r f ;i;j is the product of the average pr of the feature f at position i in the profile and the pr of this feature at position j in the sequence. the metascore for j is the weighted sum of scores for all observed features that the predicted threonine phosphorylation sites around position 106 cannot be lined up is beyond kmads reach. figures 3 and 4 provide two examples in which knowledge of the presence of sequence motifs is used to better align those motifs. this method is of course highly cyclic and we therefore compared the performance of kmad with five other msa methods using the balibase and prefab suites. most proteins in these benchmarks have a stable 3d structure, while kmad was designed for the alignment of idps. we therefore used kmad in refinement mode starting with clustal omega alignments. to avoid circularity when testing kmad on the balibase motif reference set we performed a leave-one-out validation, i.e. in each alignment the motif annotated by balibase was excluded from the kmad annotations. the score differences inare all within the margin of error, given that noise in the benchmarks (www.cmbi.ru.nl/kmad/balibase/) contributes a few percent to the scores. we chose four sequence families for testing the cpu performance of the six methods. the sequences in these families on average are about 150, 250, 550 and 750 amino acids long, respectively. from each family subsets of 5, 50, 500, 5 k, 20 k and 80 k were selected and these 24 groups of sequences were aligned with each of the six methods using each time one core on the same computer that had more than adequate ram, so that the wall-time of each calculation provided a good measure for the cpu performance of the method. the results are visualized in. in this plot, some points are missing because we stopped each alignment when after 1 week no result had been returned yet. clearly, kmad outperforms the other methods for large alignments.  
