phylogenetics mrbayes on a graphics processing unit motivation: bayesian phylogenetic inference can be used to propose a tree of life for a collection of species whose dna sequences are known. while there are many packages available that implement bayesian phylogenetic inference, such as the popular mrbayes, running these programs poses significant computational challenges. parallelized versions of the metropolis coupled markov chain monte carlo (mc 3) algorithm in mrbayes have been presented that can run on various platforms, such as a graphics processing unit (gpu). the gpu has been used as a cost-effective means for computational research in many fields. however, until now, some limitations have prevented the gpu from being used to run mrbayes mc 3 effectively. results: we give an appraisal of the possibility of realistically implementing mrbayes mc 3 in parallel on an ordinary four-core desktop computer with a gpu. an earlier proposed algorithm for running mrbayes mc 3 in parallel on a gpu has some significant drawbacks (e.g. too much cpugpu communication) which we resolve. we implement these improvements on the nvidia geforce gtx 480 as most other gpus are unsuitable for running mrbayes mc 3 due to a range of reasons, such as having insufficient support for double precision floating-point arithmetic. experiments indicate that run-time can be decreased by a factor of up to 5.4 by adding a single gpu (versus state-of-the-art multicore parallel algorithms). we can also achieve a speedup (versus serial mrbayes mc 3) of more than 40 on a sufficiently large dataset using two gpus.given the dna sequences of several organisms, bayesian inference can be used to infer their phylogenetic tree of life. mrbayes is a popular software package that implements the metropolis coupled markov chain monte carlo (mc 3 ) sampling method for bayesian inference of phylogeny. to whom correspondence should be addressed.metropolis coupled mcmc is ideally suited to implementation on a parallel processing machine or even on a network of workstations (each processor being assigned one chain), since each chain will in general require about the same amount of computation per iteration, and interactions between chains are simple. (in fact, several modified versions of mrbayes mc 3 have been developed that allow the user to run multiple chains in parallel on multi-cpu-based hardware (cf. section 2.1). the purpose of this article is to instead analyze the possibility of implementing mrbayes mc 3 in parallel on a graphics processing unit (gpu). note that, in the rest of this article, whenever we discuss mrbayes, we implicitly refer to version 3.1.2 (the current version).figurestwo important factors that affect the performance of a parallel algorithm are communication overhead, where processes require data from other processes, and load imbalance, where one process takes significantly longer than another. as the problem size increases, we attribute these near-constant speedups to load imbalance for pmc 3 , and both load imbalance and communication overhead in hmc 3. for gmc 3 , communication overhead increases with the problem size, as does the time required for the component that is run in serial.we have analyzed the prospect of realistically implementing a gpu-based version of mrbayes mc 3 on an ordinary computer. for this research, we exclusively focused on the 4-by-4 nucleotide substitution gtr+ and gtr+i+ models, and used the nvidia geforce gtx 480. we tested the algorithm on datasets of interest to biologists, along with a group of simulated datasets. the experiments suggest that a single gpu can improve the performance of mrbayes mc 3 by up to a factor of roughly 19 (versus serial mrbayes mc 3 ). moreover, we can increase this speedup further by using additional gpu(s). @bullet it is now possible to use a gpu to substantially reduce the run-time of mrbayes mc 3 .@bullet for mrbayes mc 3 , achieving a speedup on a gpu will, for an appropriately sized dataset, be less expensive than achieving the equivalent speedup using multi-cpu-based hardware. moreover, a gpu can be conveniently added to an existing desktop computer.as time progresses, we anticipate that the gpu will offer increasingly greater potential for bayesian phylogenetic inference. however, we encountered several obstacles in this research that the reader should be aware of. @bullet currently, very few gpus are suitable for running the proposed algorithm due to inadequate support for double precision floating-point arithmetic. nvidias fermi architecture is a recent technology that provides sufficient support for double precision floating-point arithmetic. @bullet there is a restriction on the largest dataset that can be processed by a single gpu due to memory capacity. it is possible topage: 1261 12551261  
