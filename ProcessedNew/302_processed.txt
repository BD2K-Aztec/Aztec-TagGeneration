an automatic tool to analyze and cluster macromolecular conformations based on self-organizing maps motivation: sampling the conformational space of biological macromolecules generates large sets of data with considerable complexity. data-mining techniques, such as clustering, can extract meaningful information. among them, the self-organizing maps (soms) algorithm has shown great promise; in particular since its computation time rises only linearly with the size of the data set. whereas soms are generally used with few neurons, we investigate here their behavior with large numbers of neurons. results: we present here a python library implementing the full som analysis workflow. large soms can readily be applied on heavy data sets. coupled with visualization tools they have very interesting properties. descriptors for each conformation of a trajectory are calculated and mapped onto a 3d landscape, the u-matrix, reporting the distance between neighboring neurons. to delin-eate clusters, we developed the flooding algorithm, which hierarchically identifies local basins of the u-matrix from the global minimum to the maximum. availability and implementation: the python implementation of the som library is freely available on github: https://github.com/clustering is an ideal way to reduce huge high-dimensional data sets generated by conformational sampling, facilitating their analysis and visualization. in general, clustering requires prior knowledge, such as the relevant number of clusters. furthermore, the encoding of the structures in 3d cartesian atomic coordinates depends strongly on alignment, a problem when studying large conformational transitions such as folding/unfolding. our novel algorithm to analyze conformational sampling addresses these points: (i) to abolish the dependence on structural alignment, we use the matrix of squared euclidean distances as conformational descriptor. (ii) we exploit the property of large self-organizing maps (soms) to spontaneously and clearly cluster similar conformations in basins, and to separate dissimilar ones by barriers, by projecting the highdimensional exploration onto 3d landscape maps.the som algorithm was applied to the analysis of 15 ms molecular dynamics at 330 k of a simplified sequence of a 56-residue a=b subdomain of the protein g . this 750 000-frame trajectory presents multiple folding and unfolding events. the map organizes the large diversity of explored conformations, from extended forms to the native state. the u-matrix depicts the covered conformational space and its topology. the minimum spanning tree between local minima reveals possible transition paths between conformational basins. we found 53 conformational basins and corresponding minima. the transition (i ! j) probability flux for each pair of basins (i, j) can be computed as explained in. this markov model provides the distribution of the first passage times in the folded basin. the distribution we obtain is similar to the one found byand can be fitted by a single exponential in a similar way, with a mean folding time of 137 ns, compared with 163 ns (seein supplementary materials).the package presented here exploits the ability of soms to spontaneously cluster macromolecular conformations. it provides a powerful tool for the analysis and visualization of the sampled conformational space even when they cover extremely different areas. it can also delineate more subtle conformational changes such as catalytic mechanisms of an enzyme . furthermore, the method can be applied to sparser sampling as inwith only 3900 conformations. the som algorithm is a non-linear dimensionality reduction technique, in contrast to linear approaches such as principal component analysis. this is of major importance for the study of highly non-linear processes such as folding/unfolding. the som computation effort scales linearly with data size and this enables us to cluster even massive numbers of conformations. this is very important given the ever increasing length of simulations. it is largely automatic and has only very few parameters, which we have optimized for this type of application. the good agreement with the previous study byon the same trajectory is highly satisfying, in particular considering the fact that our method requires no interventions. the som library is very flexible and the conformational descriptors can be tailored to different cases of conformational clustering and analysis.  
