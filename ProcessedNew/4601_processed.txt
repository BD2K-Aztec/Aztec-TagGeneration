data and text mining the gnat library for local and remote gene mention normalization identifying mentions of named entities, such as genes or diseases, and normalizing them to database identifiers have become an important step in many text and data mining pipelines. despite this need, very few entity normalization systems are publicly available as source code or web services for biomedical text mining. here we present the gnat java library for text retrieval, named entity recognition, and normalization of gene and protein mentions in biomedical text. the library can be used as a component to be integrated with other text-mining systems, as a framework to add user-specific extensions, and as an efficient stand-alone application for the identification of gene and protein names for data analysis. on the biocreative iii test data, the current version of gnat achieves a tap-20 score of 0.1987. availability: the library and web services are implemented in java and the sources are available from http://the extremely rapid growth of published literature in the biological sciences necessitates the constant improvement of automated textmining tools to extract relevant information and convert it into structured formats. terms for the same entities used in biomedical articles can vary widely between authors and across time . thus, two key tasks in biomedical text analysis are named entity recognition (ner; finding names of genes, cell lines, drugs, etc.) and entity mention normalization (emn; mapping a recognized entity to a repository, such as entrez gene or pubchem). both tasks enable indexing, retrieval and integration of literature with other resources. gene and protein names in particular represent central entities that are discussed in biomedical texts. while a growing number of tools for gene ner are freely available (e.g.), only a limited number of tools provide gene normalization capabilities that can be used off-the-shelf by end users (e.g.). to whom correspondence should be addressed.in this article, we present a new version of the gnat system for gene mention recognition and normalization and make it available as an open-source java library and as a remote web service. gnat now relies on a modular architecture, allowing integration of new components by implementing relatively simple http interfaces and allows its components to be distributed on servers (local or remote; public or private). the framework allows end users to send pubmed or pubmed central document identifiers as well as free text to our server, returning lists of gene mentions with entrez gene ids. text mining application developers can make use of the same service by using gnat as a component in their own processing pipelines or by customizing gnat toward their requirements. here we present the major components in gnat, demonstrate how they interact and how they can be exchanged and extended by developers. we present an overview of the web services provided, which can be used remotely from our server or set up by users at their local sites. finally, we discuss the performance of gene mention normalization provided by gnat.large-scale community challenges to assess the status and compare methods for gene mention normalization have been ongoing since 2003 (see the overview of biocreative i, task 1b, in). gnat has been evaluated on three biocreative datasets: biocreative i is composed of abstracts from papers on mouse, fruit fly, and yeast genes, biocreative ii is composed of abstracts from papers on only human genes, and biocreative iii is composed of full-text articles with no restriction on species. for human genes only, an earlier version of gnat was ranked first among the participants in biocreative ii , achieving a precision and recall of 82.1 and 81.6, respectively, on a test set of 262 abstracts. subsequent modifications to gnat improved precision to 90.1 and with recall at 81.1 . on a dataset derived from biocreative i+ii, covering genes from 13 species in 100 abstracts , the provided default processing pipelines achieves 79 precision at 65 recall. for biocreative iii, performance was evaluated using the tap-k metric , which is based on a ranked list of predictions . the 50 manually annotated full-text articles chosen for maximal variability among submissions served as the gold standard for biocreative iii, on which gnat achieves a tap-20 score of 0.1987, with the highest ranking method yielding only 0.3466 . due to the difference in the scoring metrics, results are not easy to compare directly between biocreative challenges; our own experiments show precision and recall values for the current system of 53.6 and 47.4, respectively, on the manually curated training data (see). one drawback of the current default processing pipeline of gnat relative with the biocreative iii test set comes from limiting our predictions to genes from 20 model organisms. the manually curated gold standard for 50 full-text documents includes an unusual composition of species compared with the training set: for example, 23 of all genes in the gold standard belong to enterobacter sp. 638. this species and three more that contribute an additional 15 to the gold standard genes are not currently supported by the default dictionary-based ner in gnat, but user-specific dictionaries could be added quickly when new species are anticipated, a procedure for which we provide detailed instructions in the documentation. future extensions of the banner library within gnat to map any recognized gene name to species and candidate ids should also help to make up for the low recall introduced by the current species limitation in species supported. the current version of gnat implements a clientserver architecture, where individual modules can be set up to run within the client or as servers. typically, a module would run as a server if it performs a memory-intensive processing step, requires a certain time for startup or is a finalized component; modules run as client are those which are suited to individual users needs or those undergoing development. using the default pipeline, it takes an average of 5 s to annotate a pubmed abstract; however, this number clearly depends on the underlying hardware and usage of remote services and can thus serve only as a rough estimate. given the modular architecture, gnats modules can be easily tailored or replaced. for example, gnat currently relies on linnaeus for species ner and provides an interface to banner for gene ner, demonstrating the ability to easily incorporate external tools, especially if they provide a java api.  
