data and text mining fast integration of heterogeneous data sources for predicting gene function with limited annotation motivation: many algorithms that integrate multiple functional association networks for predicting gene function construct a composite network as a weighted sum of the individual networks and then use the composite network to predict gene function. the weight assigned to an individual network represents the usefulness of that network in predicting a given gene function. however, because many categories of gene function have a small number of annotations, the process of assigning these network weights is prone to overfitting. results: here, we address this problem by proposing a novel approach to combining multiple functional association networks. in particular, we present a method where network weights are simultaneously optimized on sets of related function categories. the method is simpler and faster than existing approaches. further, we show that it produces composite networks with improved function prediction accuracy using five example species (yeast, mouse, fly, esherichia coli and human). availability: networks and code are available from:the past decade has seen a dramatic increase in the quantity and variety of publicly available genomic and proteomic data, and a parallel increase in the number of computational methods to integrate these heterogeneous data in generating predictions about protein and gene function [see noble and ben-hur (2007) for a review]. many of these methods, often called gene (or protein) function prediction algorithms, use the same basic framework: first, they generate so-called functional association networks that capture information about shared gene (or protein) function implicit in each dataset, then they integrate these networks to generate a single composite network which they input, along with a set of labels that describe gene function, to a kernel-or network-based classification algorithm (e.g.). once trained, these classification algorithms assign to whom correspondence should be addressed. discriminant values to each gene that can then be thresholded to generate hypotheses about the function of unlabeled genes. the functional association network is a natural and widely used representation for capturing information about shared gene function from high-throughput data sources. in this representation, nodes correspond to genes or proteins and the edges are weighted according to the evidence implied by a given data source for shared function of the connected nodes. these edge weights are calculated using a similarity metric matched to a given data type; for example, the pearsons correlation coefficient (pcc) is often used to measure pairwise similarities between gene expression profiles. once calculated, it is relatively easy to translate these networks into kernels for kernel-based learning methods [e.g. by using a diffusion kernel (. an important step in predicting gene function is the construction of a composite network from multiple functional association networks. a common approach is to construct a function-specific composite network as a weighted sum of the individual networks such that the weight of each network is determined based on the networks predictiveness of a set of positively labeled genes that are deemed to have the same specific function . the positive gene labels are derived from online databases such as gene ontology (go;), kegg and enzyme commission (ec;). these databases provide a controlled vocabulary describing categories of gene function and curated lists of genes annotated to these functions. there are two challenges in constructing function-specific composite networks. first, because many functional categories have only a few annotations, it is difficult to assign network weights without overfitting. second, for an algorithm to be widely applicable it must be fast and scalable to combine dozens of networks with over 10 000 nodes (genes) each. here, we investigate a number of network weighting schemes to avoid overfitting. in particular, we propose a new approach that we refer to as simultaneous weights (sws). sw is based on our previous algorithm, genemania , which constructs function-specific composite network by solving a constrained linear regression problem. however, instead of assigning function-specific network weights, we simultaneously optimize the weights on a group of related function categories by solving a single-constrained linear regression problem. we evaluate the impact of several regularization schemes such as lasso , elastic net , ridge regularization on our previous weighting scheme (here, we first evaluate sw and compare its performance to several other approaches: various regularized linear regression methods, the tss algorithm and a simpler correlation-based method (described below), using the yeast benchmark networks. we then show analogous results using mouse, fly, human and e.coli benchmark data.we have introduced a new network weighting scheme for combining multiple networks that are derived from genomic and proteomic data in order to construct a composite network that is predictive of gene function. we have shown that by fitting network weights that are simultaneously optimized on a group of functions from the same branch of go, we greatly improve prediction performance. we have shown that we can obtain these sws by solving a constrained linear regression problem. in our experiments, the sw method results in a significant improvement in predicting gene function in yeast, mouse and fly. in human and e.coli, sws performs only slightly better than a uniform network combination; this is because these networks tend to be sparser than the other networks making it hard to assign accurate network weights. in our experiments, we have observed that adding a small amount of ridge regularization to sw results in a slight performance improvement; the regularization parameter can be set using cv; alternatively, we have observed good performance by setting it to 0.001 n 2 (n1) (i.e. 0.1 of the total number of observations).our results show that fitting the sws to go categories in the same hierarchy with a broad range of specificities (those withannotations) outperform more specific groupings of the go categories. note that, because we adjust the target vector t c to balance the number of positives and negatives in each category c, the larger go categories contribute more to the overall target vectort vector vectort ; on the other hand, there are many more categories withannotations. in summary, we have demonstrated the feasibility and the utility of constructing a single composite network with sws for predicting various go categories. unlike a fixed network combination with uniform weights, sws account for noisy and redundant networks. this observation can in turn speed up gene function prediction from multiple networks.  
