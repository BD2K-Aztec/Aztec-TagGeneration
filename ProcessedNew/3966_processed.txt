reliability-oriented bioinformatic networks visualization we present our protein-protein interaction (ppi) network visualization system robinviz (reliability-oriented bioinformatic networks visualization). clustering the ppi network based on gene ontology (go) annotations or biclustered gene expression data, providing a clustered visualization model based on a central/peripheral duality, computing layouts with algorithms specialized for interaction reliabilities represented as weights, completely automated data acquisition, processing are notable features of the system. availability: robinviz is a free, open-source software protected under gpl. it is written in c++ and python, and consists of almost 30 000 lines of code, excluding the employed libraries. source code, user manual and other supplementary material are available for download atan observation applicable to most ppi networks is that they contain proteins and interactions in large quantities. from an information visualization perspective, it is not desirable to present the drawing of a large graph at a single shot for readability purposes. a classical technique employed commonly in the graph drawing field is clustered visualizations. in ppi settings, simply applying this technique out of a blackbox without incorporating suitable biological semantics is usually not enough. we construct a visualization model that applies the clustered visualization technique on the ppi networks domain by incorporating biological data in the form of go annotations and gene expression analysis results. the core of the model consists of the central/peripheral duality to represent the clustered visualization. central view contains an abstract graph representing a clustering of the ppi network based on go annotations or biclustering analysis of gene expression data. each central cluster has its own peripheral window for a detailed view and analysis of intracluster interactions. within this model, both the created abstract graphs and the ppi network itself are weighted. edge weights in the ppi network represent the reliability of the interactions, whereas those in the created abstract graphs represent the abundance of reliable cross-talks between clusters. an additional feature of robinviz is its incorporation of these weightsare weighted. each central node is a collection of proteins from the underlying ppi network. an edge between a pair of central nodes corresponds to the union of interactions between the proteins included in them. associated with each central node, there is a peripheral view graph containing all of its proteins and the edges connecting them in the underlying network. if co-ontology is used as the verification concept of choice, each user-selected category from the provided go tree becomes a central node. next a set of go annotation resources are selected by the user to assign the proteins associated with that node. the marked annotations are merged and filtered according to the set of categories. the user may also choose co-expression as the verification concept. in this case, one of the three popular biclustering algorithms from literature, cc, bimax and real implemented within the system are presented as alternatives. once the algorithm and its specific parameters are decided, the biclusters are computed accordingly. the set of proteins corresponding to the genes found in each bicluster constitutes a central node. edges and the peripheral views are then computed as described previously. with regards to the weights, if the co-ontology concept is in use the weight of a central node is determined by the ppi hit ratio, a combined measure of the size of the corresponding ppi subnetwork in the peripheral view and of the density of the high reliability interactions in it. with the co-expression concept, user is provided with additional options including h-value and functional enrichment valuescommon measures of biclustering correlation. the weight of an edge between two central nodes is the weighted sum of the reliability values of interactions between the proteins included in them. finally, the interaction reliability value itself is the weight assigned to a peripheral graph edge. with such a visualization model, each edge in the central graph provides clues of potential false positives of the underlying ppi network as far as the provided verification concept and the corresponding central nodes are concerned. analogously, each disconnected pair of proteins in a peripheral view provides information regarding the false negatives. we note that the verification process may also be viewed from the opposite direction, giving rise to a bidirectional verification model; see supplementary material for further details. with regards to the layout computations, we note that drawing constraints of weighted graphs are not the same as those of unweighted graphs. in drawings of weighted graphs, the neighborhood of a heavy-weight node should not be too cluttered, heavy-weight edges should not be too long and the crossings between heavy-weight edges should be avoided. we provide weighted extensions of the popular graph drawing algorithms in use, including the spring embedder, the sugiyama style layered drawing and various circular-track based methods, each extension aiming to satisfy the mentioned constraints. a node coloring mechanism is embedded in the system to provide further clues on go categories. each node in a peripheral view is drawn as a colored pie. each color represents a high-level go category that the protein corresponding to the node is associated with. the pie chart of a central node is colored according to the colors of the nodes in the corresponding ppi subnetwork thus giving a clue regarding the high-level go categories inside the corresponding peripheral view. further details regarding a node can be obtained by right clicking on the node. enrichment analysis results including bonferroni corrected p-values and enrichment ratios based on high-level go functional categories are available. a second option available to nodes from both views is the online information. to investigate the interactions of a specific protein in more detail, user can display 1-hop or 2-hop neighborhood of a specific protein from a peripheral view. we note that in this case not only the interactions residing in the peripheral view graph but also all the interactions from the underlying ppi network are visualized. in the co-expression mode, heatmap and parallel coordinate visualizations are also generated for a detailed analysis of the bicluster corresponding to a central node. further aids include search panel, selection focus, animation aids, session save/load capabilities, and preconfigured parameter settings.  
