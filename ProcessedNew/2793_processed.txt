sequence analysis mapdamage: testing for damage patterns in ancient dna sequences ancient dna extracts consist of a mixture of contaminant dna molecules, most often originating from environmental microbes, and endogenous fragments exhibiting substantial levels of dna damage. the latter introduce specific nucleotide misincorporations and dna fragmentation signatures in sequencing reads that could be advantageously used to argue for sequence validity. mapdamage is a perl script that computes nucleotide misincorporation and fragmentation patterns using next-generation sequencing reads mapped against a reference genome. the perl script outputs are further automatically processed in embedded r script in order to detect typical patterns of genuine ancient dna sequences. availability and implementation: the perl script mapdamage is freely available with documentation and example files atthe field of ancient dna (adna) has a colorful history, with early claims of dna survival from the cretaceous periods later recognized as the by-product of contamination . extensive fragmentation and substantial chemical modifications of nucleotide bases are introduced post-mortem as a result of dna damage . some of these modifications, such as abasic sites, single-strand breaks and interstrand cross-links, are not replicated by standard taq dna polymerases , hence the relatively better preserved modern contaminant dna molecules will often outcompete ancient templates during polymerase chain reaction (pcr) amplification. for non-human species, contamination can be controlled by using specific pcr primers and/or human oligonucleotide pcr blockers and by filtering out human-related sequences. but as long as to whom correspondence should be addressed. ancient human fossils are concerned, including close relatives such as neandertals, contamination is still a risk. several recent methodological improvements have helped improve reliability when sequencing ancient hominids. firstly, dna libraries are tagged in clean labs with project-specific indexes in order to track back downstream contamination sources that could result from library amplification and/or sequencing . in addition, typical sequence patterns resulting from adna damage have been identified that help distinguish damaged ancient sequences from modern contaminants; these include: short sequence length; an excess of cytosine to thymine (c-to-t) misincorporations at 5 ends of sequences, and complementary guanine to adenine (g-to-a) misincorporations at 3-termini, due to enhanced cytosine deamination in single stranded 5-overhanging ends ; and an excess of purines at the genomic coordinate located just before the sequencing start, indicative of post-mortem depurination, followed by strand fragmentation . here, we present a perl script that analyzes the size distribution of next-generation sequencing reads, and dynamically recovers nucleotide misincorporation patterns in a position-dependent manner. in addition, the base composition of the genomic regions located up-and downstream of each read is recorded within windows of user-defined sizes. using sam files as input and corresponding reads mapped against a reference genome, the script mapdamage provides summary tables required to gauge adna authenticity based on dna damage patterns.script outline: the following programs must be installed prior to running mapdamage: samtools and the r environment (r development core) that generates userfriendly tables and graphics using downstream scripts. three main commands can be used to run mapdamage: map, merge and plot. the main command, map, takes as input a sam file (if present, headers with @sq lines will be skipped) and the reference genome used to map next-generation sequencing reads as a fasta file. corresponding genomic regions from the reference are retrieved using samtools and aligned to sequencing reads using the cigar information . the merge command compiles, in single tables, all individual tables generated with the map command for individual chromosomes. these tables can be further processed with the plot command that produces graphics without any requirements of r knowledge. the global pipeline is described in the supplementary.  
