sequence analysis phylogenetics, likelihood, evolution and complexity phylogenetics, likelihood, evolution and complexity (plex) is a flexible and fast bayesian markov chain monte carlo software program for large-scale analysis of nucleotide and amino acid data using complex evolutionary models in a phylogenetic framework. the program gains large speed improvements over standard approaches by implementing partial sampling of substitution histories, a data augmentation approach that can reduce data analysis times from months to minutes on large comparative datasets. a variety of nucleotide and amino acid substitution models are currently implemented, including non-reversible and site-heterogeneous mixture models. due to efficient algorithms that scale well with data size and model complexity , plex can be used to make inferences from hundreds to thousands of taxa in only minutes on a desktop computer. it also performs probabilistic ancestral sequence reconstruction. future versions will support detection of co-evolutionary interactions between sites, prob-abilistic tests of convergent evolution and rigorous testing of evolutionary hypotheses in a bayesian framework. availability and implementation: plex v1.0 is licensed under gpl. source code and documentation will be available for download at www.evolutionarygenomics.com/programsdata/plex. plex is implemented in c and supported on linux, mac os x and other platforms supporting standard c compilers.comparative genomic and phylogenetic datasets are growing dramatically in size, thanks to rapid and inexpensive next-generation dna sequencing technologies. the wealth of information present in large datasets, however, is difficult to exploit due to the non-linearly increasing computational burden imposed by increasing data size and model complexity . for example, it is not uncommon for phylogenetic analysis of large datasets to now incur compute times on the order of months, even with models that are fairly simple from a mechanistic, biochemical perspective (e.g.). to help overcome these challenges, we developed phylogenetics, likelihood, evolution and complexity (plex), which implements rapid data augmentation methods using partial sampling of substitution histories and derivative methods. plex is an active research platform and will support the future development of new models and algorithms. the capabilities of plex will therefore expand over time. for example, the current version now incorporates more models than previously as well as implementations of conjugate gibbs sampling and slice sampling . phylogenetic analysis task . furthermore, the approach was designed to substantially reduce the scaling of time complexity with model complexity (supplementary), so that model realism can be more effectively explored without the need to greatly oversimplify models for computational convenience. for example, the times to achieve an average of 1000 effectively independent posterior samples on a large dataset are shown for a variety of amino acid substitution models . remarkably, the most parameter-rich site-homogeneous model in this set is also the easiest to sample from (and therefore the fastest), because conjugate gibbs sampling mechanisms are possible for all parameters in this case (general non-reversible). thus, not only do these approaches reduce the need to simplify models for computational convenience but also in some cases they facilitate an inversion of incentives, making complex models more computationally convenient than simpler ones. it should be noted that similar contrasts can be constructed when exact substitution timings are augmented . for performance comparisons between plex and several popular phylogenetics programs, see supplementary results. when gibbs update mechanisms are unavailable for a given model, plex uses slice sampling or metropolishastings updates. the simple form of plexs likelihood function often makes likelihood evaluations for these mechanisms extremely rapid and sometimes even o(1) . the plex code is written in c/c and has no dependencies on external libraries. it should therefore compile on any platform that supports standard c/c.  
