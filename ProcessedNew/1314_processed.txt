sequence analysis deml: robust demultiplexing of illumina sequences using a likelihood-based approach motivation: pooling multiple samples increases the efficiency and lowers the cost of dna sequenc-ing. one approach to multiplexing is to use short dna indices to uniquely identify each sample. after sequencing, reads must be assigned in silico to the sample of origin, a process referred to as demultiplexing. demultiplexing software typically identifies the sample of origin using a fixed number of mismatches between the read index and a reference index set. this approach may fail or misassign reads when the sequencing quality of the indices is poor. results: we introduce deml, a maximum likelihood algorithm that demultiplexes illumina sequences. deml computes the likelihood of an observed index sequence being derived from a specified sample. a quality score which reflects the probability of the assignment being correct is generated for each read. using these quality scores, even very problematic datasets can be demultiplexed and an error threshold can be set. availability and implementation: deml is freely available for use under the gplwhile the high-throughput of next generation sequencing is beneficial for many applications, such as high coverage whole-genome sequencing, it may be economically disadvantageous for the sequencing of small numbers of loci. it is possible to sequence large number of samples in a single run by incorporating unique sequence indices for each sample, a process referred to as multiplexing. current illumina protocols allow for 1 or 2 index sequences to be used. the computational process by which reads are assigned to the sample of origin is called demultiplexing. the default demultiplexer provided by illumina in the casava package allows for 0 or 1 mismatches between the sequenced index and the user-supplied reference indices. various heuristics have been proposed to assign reads to their sample of origin . although these methods perform well for sequencing reads with high quality, poor demultiplexing remains a common reason for low retrieval or misassignment of sequences from a multiplexed run. increased error ratesparticularly during sequencing of the index can lead to a higher number of mismatches and hinders assignment to the correct sample. for some applications, high read error rates can be tolerated as long as the reads can be mapped to the reference (e.g. transcriptome quantification). we introduce deml, a new approach to demultiplexing samples based on likelihood of assignment to a particular sample and provide a freely available, open source c implementation. briefly, we compute the likelihood of a read to originate from each of the original samples, assign reads to the most likely sample of origin and compute the overall confidence in this assignment. we show that by using thresholds on these confidence values, even very problematic datasets can be safely demultiplexed. by simulating increasing error in the indices we show that, especially at high error rates, deml with default quality cutoffs enables the user to demultiplex several fold more sequences than the vendors default demultiplexer or other methods based on fixed mismatches. the false discovery rate (fdr) remains below that of other tools based on hamming distance. deml, licensed under the gpl, can run on aligned or unaligned bam files or fastq files.of the total of 15 245 844 clusters that were detected in our test dataset, 8 070 867 clusters had both forward and reverse reads aligning to the human control region and 4 629 687 to the phix. using the sample assignment provided by deml for the reads mapping to the phix, the rate of false assignment was computed as a functionresults. as z 1 measures the probability of misassignment given the potential index sequence set on a phred scale, the relationship between the misassignment rate on a log scale and the z 1 score should be linear. for reads where both mates aligned to the phix, the misassignment rate was computed by considering any read pair not assigned by deml to the phix as a mislabeling. as z 1 can take many discrete values, the misassignment rate was plotted for multiple z 1 value bins (see). deml retrieves more sequences and achieves a lower fdr than currently available approaches (seeand supplementary results).  
