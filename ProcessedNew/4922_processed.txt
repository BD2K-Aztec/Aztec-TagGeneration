data and text mining whiteboard: a framework for the programmatic visualization of complex biological analyses whiteboard is a class library implemented in c that enables visualization to be tightly coupled with computation when analyzing large and complex datasets. availability and implementation: the c source code, coding samples and documentation are freely available under the lesser general public license from http://whiteboard-class.sourceforge.net/.a key aspect in understanding complex biological or medical systems lies in visualizing the data, which allows for recognizing patterns that may explain the mechanisms underlying the evolution of phenotypes, or susceptibility to, and progression of, diseases. especially for large datasets, as routinely generated by high throughput sequencing technologies, the challenge of graphically presenting the data goes well beyond drawing simple plots, often encompassing both figures that show how variables change across entire genomes, as well as graphs that highlight specific sites at a nucleotide or amino acid resolution. moreover, a meaningful interpretation often involves mathematical or statistical algorithms, where, ideally, analysis and visualization are tightly coupled. unfortunately, it is common practice for these to be decoupled, with the heavy-lifting computation being done in one language, followed by the visualization being done with a graphical package like r (http:// cran.r-project.org) or matlab (http://www.mathworks.com), or via a scripting language like python (www.python.org). although this approach can be effective, it becomes necessary to reduce size of the analytical data, not because its best for the visualization, but to accommodate the limits inherent in the choice of graphical package. here, we describe whiteboard, a class library implemented in c, allowing for easily graphing any kind of data into any format. the whiteboard interface is accessed through the whiteboard class which is a collection of graphics objects to be drawn, and a display object on to which the graphics objects are displayed, either through a 2d or 3d geometry. graphics objects are defined as derived classes of the abstract base class graphic and provide the basic definitions of what is to be displayed. a toolkit of basic graphics objects is provided, including line, rect, arc, etc. as well as compound graphics, such as arrows and boxes. display objects, represented by the abstract base class display_type, are used to transform the basic definitions provided by the graphic objects into the format of choice for the graphical output. a derived class, ps_display, is provided to generate figures in post-script (ps-adobe-3.0 epsf-3.0) displays, which are of production quality, as well as fully editable in graphics processing programs. the code is designed to be extensible, and other file formats can be accommodated by implementing a class for the desired output format. detailed documentation about the interface, together with a set of example source code files, can be found here: http://whiteboardclass.sourceforge.net/. in conclusion, whiteboard provides a programmatic interface for visualizing large and complex datasets, which can easily be integrated into programs analyzing biological or medical processes.images can be generated in production quality and ready for publication, interactively, or even as animations. implemented in c, whiteboard allows for adding extensions supplied by us, and its wider community of users.(b). example graphs generated with whiteboard. (a) visualization of protein alignments, color coded by taxa and shaded by local sequence similarity; (b) synteny between the zebrafish and medaka genomes, color coded by chromosomes (boxes to the left). alignments were generated with satsuma ; (c) a clustered heat map based on rna-sequencing expression values (yellow notes high expression, black low); (d) one time point of differential expression of hox genes (data from) during the development of zebrafish (blue shades indicate lower than the mean, red higher). an animated image containing all time points can be found at http://whiteboard-class.sourceforge.net/  
