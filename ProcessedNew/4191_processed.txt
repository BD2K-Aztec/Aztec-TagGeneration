systems biology senssb: a software toolbox for the development and sensitivity analysis of systems biology models senssb (sensitivity analysis for systems biology) is an easy to use, matlab-based software toolbox, which integrates several local and global sensitivity methods that can be applied to a wide variety of biological models. in addition to addressing the sensitivity analysis problem, senssb aims to cover all the steps involved during the modeling process. the main features of senssb are: (i) derivative and variance-based global sensitivity analysis, (ii) pseudo-global identifiability analysis, (iii) optimal experimental design (oed) based on global sensitivities, (iv) robust parameter estimation, (v) local sensitivity and identifiability analysis, (vi) confidence intervals of the estimated parameters and (vii) oed based on the fisher information matrix (fim). senssb is also able to import models in the systems biology markup language (sbml) format. several examples from simple analytical functions to more complex biological pathways have been implemented and can be downloaded together with the toolbox. the importance of using sensitivity analysis techniques for identifying unessential parameters and designing new experiments is quantified by increased identifiability metrics of the models and decreased confidence intervals of the estimated parameters. availability: senssb is a software toolbox freely downloadable from http://www.iim.csic.es/gingproc/senssb.html. the web site also contains several examples and an extensive documentation.sensitivity analysis (sa) is receiving an increasing attention in the field of systems biology and several tools have been developed, namely sbml-sat , potterswheel , and systems biology toolbox 2 . however, neglecting any of the steps of the model building cycle as considered in the area of systems identification can lead to wrong models or models with a low predictive capacity. that is why, in senssb, the use of global optimization methods for parameter estimation (pe) and optimal experimental design (oed) has been coupled with other computational procedures based on sa for checking identifiability and other related measures. another additional advantage is that to whom correspondence should be addressed. the toolbox is able to handle deterministic non-linear dynamic models described by sets of ordinary differential equations (odes), differential algebraic equations (daes) or even black boxes. model building can be regarded as a cycle: starting from a goal definition (purpose of the model) and some a priori knowledge (e.g. preliminary data and initial hypothesis), a model framework is chosen and a model structure (system of equations) is proposed. the validity of this structure should be tested by means of an identifiability analysis , e.g. making use of sa tools that can help to identify critical and negligible parameters and to establish a parameter ranking. if experimental data are available, pe is then carried out, leading to a first model. otherwise a set of experiments must be designed and performed before the pe. the quality of these estimators should be assessed by checking the correlation between them and computing their confidence intervals. this initial model must be validated with new experiments, which in most cases will reveal a number of deficiencies. thus, a new model structure and/or a new experimental design must be planned, and the process is repeated iteratively until the validation step is considered satisfactory. all these tasks were implemented in matlab, generating gateways for calling external fortran codes when needed. these fortran codes were implemented as matlab mex-files leading to an integrated environment able to perform robust pe, identifiability analysis and oed of dynamic experiments. moreover, senssb includes a novel methodology for performing oed based on global sensitivities with a great potential on the systems biology field where experiments can be very expensive and time consuming. in order to make the problem implementation easier, senssb includes a user-friendly graphical interface where the model and other inputs (e.g. initial values, measurement times, control variables, etc.) can be specified. the matlab gui (graphical user interface) generates an input file that senssb uses for performing all the requested tasks as detailed below. results are displayed on the screen and saved as an output file together with several graphic files.  
