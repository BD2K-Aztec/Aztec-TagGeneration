databases and ontologies calctavâ€”integration of a spreadsheet and taverna workbench motivation: taverna workbench is an environment for construction, visualization and execution of bioinformatic workflows that integrates specialized tools available on the internet. it already supports major bioinformatics services and is constantly gaining popularity. however, its user interface requires considerable effort to learn, and sometimes requires programming or scripting experience from its users. we have integrated taverna with openoffice calc, making the functions of the scientific workflow system available in the spreadsheet. in calctav, one can define workflows using the spreadsheet interface and analyze the results using the spreadsheet toolset. results: technically, calctav is a plugin for openoffice calc, which provides the functionality of taverna available in the form of spreadsheet functions. even basic familiarity with spreadsheets already suffices to define and use spreadsheet workflows with taverna services. the data processed by the taverna components is automatically transferred to and from spreadsheet cells, so all the visualization and data analysis tools of openoffice calc are available to the workflow creator within one, consistent user interface. availability: calctav is available under gplv2 fromspecialized systems for defining and conducting biological experiments in silico, such as taverna (see) or kepler (see), have clear advantages over software designed and written ad hoc. to name just the main reasons: @bullet correctness is much easier to achieve by using software organized from carefully tested and verified components.@bullet the general design of the experiment is required to implement it and is separate from the software itself, thus providing easy insight into the experiment, for its author, later for the reviewers and finally for the readers of the publication . @bullet experiments, once created, are portable (can be easily transferred to some other machine and executed there) and reusable (can be easily modified and executed again)., which help in designing and debugging computations. spreadsheets also have very intuitive user interface for working with collections of data based on the fill handle mechanism, which is a method of copying formulas to the neighboring cells, with suitable reference modifications. portability of spreadsheet workflows is obvious, while creating spreadsheet templates without data offers a convenient method to achieve reusability. it is also important that there exists vast literature concerning spreadsheets in general and openoffice calc in particular, and that the majority of design methods and tips described there apply to our spreadsheet interface, as well.technically speaking, calctav is a plugin for openoffice calc, which provides the computational functionality of taverna within spreadsheet. it extends the spreadsheet system in the following ways:(1) external data sources and computing services of taverna are wrapped as spreadsheet functions. tools for managing these services are provided.(2) complex data objects, such as lists and nested lists can be stored in cells, transferred between cells and presented to the user. basic construction and deconstruction operations for those objects are provided, e.g. elements of a list can be extracted into a row or column of cells.(3) a tool for visualization and editing of complex data objects located in cells is provided.(4) to increase performance, calls to remote data sources and computing facilities are executed in multiple threads.(5) extended control over recomputation of the data sheet is provided, so it can be made automatic, blocked or manually enforced for selected cells.(6) a workflow structure view, to supplement the standard spreadsheet mechanism for presenting cell function dependencies with arrows, is provided. certain xml formats of complex data objects are presently not supported. calctav does not limit quantities of data that can be processed. however, it does not offer implicit iteration present in taverna. this mechanism of the original workflow system works as follows: if a processor expects a single input item and returns a single output, but receives a list of items as input, it is invoked for every element of that list, and produces a list of its individual outputs. in calctav, we have adopted the spreadsheet paradigm, that each cell is evaluated only once. iteration is achieved with the spreadsheet fill handle mechanism by making copies of the cells with function calls, one for each item of the list to be processed. this way, calctav spreadsheets can be extended by copying cells to process list of variable length limited only by the number of cells prepared beforehand. this mild limitation, however, helps very much in debugging spreadsheet-workflows, as every processor call is executed in a separate cell and can be debugged individually. this should help novice users, for whom calctav is particularly intended. in order to test and demonstrate how cactav compares to taverna, we have implemented a computational procedure based on a reallife experiment described in article, in the form of a bionformatic workflow using both systems, and executed them. it involves annotation of genes, which according to highthroughput mutagenesis experiment are required for mycobacterial survival during infection. the workflow analyses published list of genes which are differentially represented according to statistical analysis of microarray data. the gene names written in the spreadsheet column are automatically assigned gene orthology and metabolic pathway annotation according to the kegg database. the user uses the fill handle tool to iterate over the list of genes and calctav plugin connects to the web services of kegg and executes queries. subsequently, spreadsheet functions are used to calculate frequency of the functional descriptors assigned to the list of differentially represented genes. the functional categories are then sorted to identify those which are most frequently associated with the genes required for mycobacterial survival during infection.  
