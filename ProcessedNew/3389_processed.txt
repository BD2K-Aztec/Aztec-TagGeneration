sequence analysis orthagogue: an agile tool for the rapid prediction of orthology relations motivation: the comparison of genes and gene products across species depends on high-quality tools to determine the relationships between gene or protein sequences from various species. although some excellent applications are available and widely used, their performance leaves room for improvement. results: we developed orthagogue: a multithreaded c application for high-speed estimation of homology relations in massive datasets, operated via a flexible and easy command-line interface.the notion of sequence homology in biology refers to similarities at the nucleotide or amino acid sequence level that may reflect ancestry and evolutionary conservation. two types of homology are most often distinguished: orthology (resulting from a speciation event) and paralogy (resulting from a gene duplication). software tools for establishing homologies between genes or their products are becoming increasingly important to transfer knowledge from well-studied model organisms to other organisms . identification of genuine homology relationships is no trivial task, as it requires the knowledge of the last common ancestor (lca) for every pair of sequences. in theory, lcas could be predicted on the basis of phylogenetic analysis but this is not feasible at the proteome scale due to performance limitations. therefore, a variety of heuristic approaches are used instead of exhaustive phylogenetic analyses to estimate orthology relations. depending on the heuristics, different sets of orthologs are generated with a varying degree of overlap and it is not trivial to gauge the precision of predictions objectively. as a result a large number of widely used database resources [e.g. cog , kog , eggnog , roundup and oma (were generated. nevertheless, as the number of complete proteomes is steadily growing, even heuristic algorithms meet their performance limitations, an issue that is bound to become more and more acute in the future. therefore, we embarked on a high-performance implementation of one of the popular heuristic approaches exemplified by the orthomcl software . the orthomcl procedure comprises three major steps:(1) performing an all-against-all blast (basic local alignment tool, altschul et al., 1990).(2) identification of putative orthology and inparalogy relations with the inparanoid algorithm .steps 1 and 2 tend to be time-consuming with large datasets comprising complete proteomes (in the range of a couple of days each for 150 proteomes, the exact duration depending on the setup). while the time constraints of step 1 can be mitigated by deployment on a large computer cluster, there is no way to shorten step 2. we therefore re-implemented step 2 (comprising sub-steps 811 of the orthomcl procedure as outlined in its user guide (http://orthomcl.org/common/downloads/software/v2.0/ userguide.txt), and developed the c application orthagogue (from the greek agogos lead). the development of this application implied boosting the data parsing efficiency, optimizing the memory use and data containers and providing a flexible command line user interface. the result is an open source software with a significantly shorter running time and an increased algorithmic flexibility.  
