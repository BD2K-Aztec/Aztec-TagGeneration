sequence database versioning for command line and galaxy bioinformatics servers motivation: there are various reasons for rerunning bioinformatics tools and pipelines on sequencing data, including reproducing a past result, validation of a new tool or workflow using a known dataset, or tracking the impact of database changes. for identical results to be achieved, regularly updated reference sequence databases must be versioned and archived. database administrators have tried to fill the requirements by supplying users with one-off versions of databases , but these are time consuming to set up and are inconsistent across resources. disk storage and data backup performance has also discouraged maintaining multiple versions of databases since databases such as ncbi nr can consume 50 gb or more disk space per version, with growth rates that parallel moores law. results: our end-to-end solution combines our own kipper software packagea simple key-value large file versioning systemwith biomaj (software for downloading sequence databases), and galaxy (a web-based bioinformatics data processing platform). available versions of databases can be recalled and used by command-line and galaxy users. the kipper data store format makes publishing curated fasta databases convenient since in most cases it can store a range of versions into a file marginally larger than the size of the latest version. availability and implementation: kipper v1.0.0 and the galaxy versioned data tool are written in python and released as free and open sourceas outlined in motivation, the challenge is to efficiently archive versions of large fasta format reference sequence databases which usually grow with many inserts but relatively few deletes or updates. these databases are suited to differential archiving (hereafter referred to as diff) in which the differences between consecutive version files are encoded as a set of instructions that enables their regeneration. with this in mind, we reviewed existing solutions for large text file versioning using the following criteria:we concluded that a large fasta file differential archiving system would have to be developed. some ncbi reference databases provide daily diff files spanning the most recent month (e.g. ftp://ftp. ncbi.nih.gov/genbank/daily-nc/) but no publically available clientside system exists for version update and retrieval. git (http://gitscm.com), a file and code versioning tool, was evaluated as a possible solution but was found to be inefficient at versioning large fasta files. as noted by ram (2013) git does not handle large datasets well, and must externalize them as separate files using tools like git-annex (https://git-annex.branchable.com). our review of popular key-value databases (see supplementary data) found that they lack a versioning system for key-value contents.we have found that kipper can version 50 gb text files that other archiving systems like git have no capacity for. there are a fewthe standardization of reference databases by date of publication is a key problem for experimental replication in the bioinformatics realm. the community needs to develop a basic metadata standard for reference database sharing. towards this goal, our kipper versioning and archiving system brings reference database reproducibility, ease of use and lower maintenance costs to existing server infrastructure. we welcome partnerships to extend the kipper data store functionality, and we encourage reference database providers to consider kipper for convenient version storage, recall and publishing.  
