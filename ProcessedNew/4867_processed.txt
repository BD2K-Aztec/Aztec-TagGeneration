visual dsd: a design and analysis tool for dna strand displacement systems the visual dsd (dna strand displacement) tool allows rapid prototyping and analysis of computational devices implemented using dna strand displacement, in a convenient web-based graphical interface. it is an implementation of the dsd programming language and compiler described by lakin et al. (2011) with additional features such as support for polymers of unbounded length. it also supports stochastic and deterministic simulation, construction of continuous-time markov chains and various export formats which allow models to be analysed using third-party tools. availability: visual dsd is available as a web-based silverlight application for most major browsers on windows and mac os x at http://research.microsoft.com/dna. it can be installed locally for offline use. command-line versions for windows, mac os x and linux are also available from the web page.novel techniques for designing and manipulating synthetic dna are making it possible to construct increasingly sophisticated biological computation devices. one such technique is dna strand displacement in which hybridization between complementary dna strands is the sole computational mechanism. designing novel biomolecular computing devices has practical benefits as well as offering fundamental insights into understanding life as biomolecular information processing. as these devices increase in complexity, it becomes intractable to calculate the low-level interactions between the dna species by hand. thus, one of the main barriers to continued progress in this nascent field is the lack of automation and abstraction in the design process. visual dsd implements a domain-specific language whose syntax is tailored to allow concise encodings of the species in a dsd system. the dsd programming language is described in . the system automatically computes all possible reactions between the species, providing the benefits of a reaction-based approach without the difficulty of manually constructing the reaction network. to whom correspondence should be addressed.the user can choose an appropriate level of abstraction in the compilation process, from low-level detailed views to higher level simplified views. the design can then be visualized and analyzed to eliminate any unwanted behaviour. visual dsd provides suitable analysis tools both for large-scale designs involving many thousands of formal and intermediate species, such as dna logic gates , and for systems involving low species populations, such as dna implementations of stack machines .visual dsd has been used to model and analyse a wide range of dna strand displacement devices, including logic gates , neural network computation , fork and join gates , oscillators and a range of other devices including catalytic gates and schemes for simulating arbitrary chemical systems . note that secondary structures such as hairpin, pseudoknot and multiloop junctions are not currently supported; however, some of these structures, including hairpins, are currently under development for a future release. we have found that the tool is particularly beneficial when designing new systems from scratch, as the visualizations make it easy to debug programs. support for reusable modules in program code makes it quick and easy to construct new, larger systems using pre-designed components. the tool embodies the scientific workflow and can increase efficiency and productivity of dna device design and analysis by allowing users to simulate systems before attempting to build them in the lab, thereby saving time and lab resources. it also enables in silico investigation of the behaviour of systems that are beyond the current state of the art in fabrication, such as particularly large and/or complex systems. furthermore, once a design has been formalized in the dsd language it becomes possible to perform formal verification of certain aspects of its behaviour, for example using a stochastic model checker or a theorem prover. we are continually developing the software and adding new features.  
