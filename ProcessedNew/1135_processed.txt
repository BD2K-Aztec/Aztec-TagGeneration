condop: an r package for condition-dependent operon predictions the use of high-throughput rna sequencing to predict dynamic operon structures in pro-karyotic genomes has recently gained popularity in bioinformatics. we provide the r implementation of a novel method that uses transcriptomic features extracted from rna-seq transcriptome profiles to develop ensemble classifiers for condition-dependent operon predictions. the condop package provides a deeper insight into rna-seq data analysis and allows scientists to highlight the operon organization in the context of transcriptional regulation with a few lines of code.transcriptome profiling of bacterial organisms by high-throughput rna-seq can be used to predict operon structures. we have recently proposed a new computational strategy that integrates rna-seq transcriptome profiles with dna-sequence based information to accurately predict operons in a condition/transcriptome-specific manner . our method is capable of highlighting significant changes occurring in the operon map annotated in the door database in specific dynamic conditions assayed at the transcriptome level by rna-seq. to this end, an ensemble classification system employing genomic and transcriptomic features, is trained to distinguish operon pairs (ops) from non-operon pairs (nops). the ensemble classifier is based on three different machinelearning approaches: neural networks (nn), support vector machines (svms) and random forests (rfs). the training of each model is based on a small set of ops and nops that are systematically selected from the rna-seq transcriptome profile and considered as gene pairs with a known operon status. the trained models are finally used to predict (or re-define) the operon status of the gene pairs that are excluded from the training and validation steps, namely door operon pairs (dops), and those that are not annotated as operon pairs in the door database, namely putative operon pairs (pops). the ensemble classification system is implemented with a simple majority-voting schema that combines the classification predictions of all the trained models. after reclassifying the adjacent gene pairs, a linkage process is compiled to find adjacent genes predicted as ops and group them into operons. this process generates a new operon map namely conditiondependent operon map. here we present the r software package condop, an implementation of this method freely available at cran (https://cran.r-project.org). sequence and intergenic regions namely the cdss and igrs, (iii) it calculates cutoffs to distinguish low expressed rna-seq data from high expressed regions on the forward and reverse strand and (iv) it identifies the start and end points in transcription. the pre-processed information is then used as input to the function run.condop, which develops an ensemble classifier combining both genomic and transcriptomic features to classify operon pairs. each gene pair is characterized by a set of features extracted from the genome sequence (the fasta file) and the rna-seq transcriptome profile. the condition-dependent operon predictions are defined with the following tasks: (i) start and end points in transcription associated with operons annotated in door are considered, they are respectively named with osps and oeps, (ii) confirmed operons are then determined and the datasets of ops and nops are built, (iii) operon classification using genomic and transcriptomic features of confirmed ops and nops is performed, (iv) the operon status of putative operon pairs (pops) is predicted and (v) the condition dependent operon map is compiled and exported as a tab-delimited file.here we show how to use condop to identify changes in the operon organization of escherichia coli under two different growth conditions . library(condop) data(ct1) ga system.file( extdata , nc_000913.gff , package condop ) da system.file( extdata , 1944.opr , package condop ) in.objs pre.proc(gff.file ga, door.op.file da, nc_000913 , list.cov.dat list(ct1)) res run.condop(data.in in.objs, bkgexprcds 0.2, bkgexprigr 0.2, cl.run 30, nfolds 5, cons 2, find.ext true, return.all false, save.tab.file condop ) escherichia coli k12 wild-type cells (mg1655) were grown in lb medium with and without a-methylglucoside . bowtie and samtools were used for the rna-seq read alignment and the generation of the count table data files respectively. the necessary inputs are included into the condop r package. the pre.proc function compiles the input data structures for the main function run.condop, which is then used to build the condition dependent operon map. an important step of the run.condop function is the selection of the confirmed operons , upon which the set of ops and nops is built. the users can influence this selection by properly modifying the thresholds (bkgexprcds and bkgexprigr) used for defining the detectable expression above the background (supplementary material s1). the set of ops and nops is used for the training and validation of three different classification models, which predictions are combined by using a simple voting schema. the users can exploit the parameters cons to specify the minimum number of positive votes to declare a gene pair as operon pair. for instance, with cons equals to 2, the voting system tags a gene pair as an op when at least two classifiers have predicted that gene pair as an op. all the models are trained and evaluated by using cross-validation and bootstrap. users can indicate the number of folds and bootstrapping iterations by setting the nfolds and cl.run parameters respectively. further details about the parameter setting and the description of the data inputs/output of the condop functions are provided as supplementary materials (supplementary material s1).  
