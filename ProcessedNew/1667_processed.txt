evolution of gene neighborhoods within reconciled phylogenies motivation: most models of genome evolution integrating gene duplications, losses and chromosomal rearrangements are computa-tionally intractable, even when comparing only two genomes. this prevents large-scale studies that consider different types of genome structural variations. results: we define an adjacency phylogenetic tree that describes the evolution of an adjacency, a neighborhood relation between two genes, by speciation, duplication or loss of one or both genes, and rearrangement. we describe an algorithm that, given a species tree and a set of gene trees where the leaves are connected by adjacencies, computes an adjacency forest that minimizes the number of gains and breakages of adjacencies (caused by rearrangements) and runs in polynomial time. we use this algorithm to reconstruct contiguous regions of mammalian and plant ancestral genomes in a few minutes for a dozen species and several thousand genes. we show that this method yields reduced conflict between ancestral adjacencies. we detect duplications involving several genes and compare the different modes of evolution between phyla and among lineages. availability: c++ implementation using bio++ package, available upon request to sverine brard.a phylogenetic tree describes the kin relationships between a set of homologous objects. non-homologous objects may have other types of relationships, such as interactions, functional relationships, co-expression or neighborhood between genes. studying the pattern of descent of these relationships can be used to define homology between them, reconstruct ancestral relationships and build phylogenetic trees. the evolution of gene proximity or interaction has been the subject of numerous recent studies. it is for example a way to assess co-evolution between genes, even if often co-evolution is detected by searching for similarities in gene trees, but without modeling explicitly the relation that make the genes co-evolve . closer to our study, and or propose methods to reconstruct to whom correspondence should be addressed. ancestral proteinprotein interactions or gene neighborhoods based on a model of evolution allowing gene duplications. they, however, assume that the chronology of duplications is known, which often is not the case. define a general problem of network evolution without this assumption and give a heuristic solution for the comparison of two species. our model considers the more specific problem of gene neighborhoods on chromosomes, but generalizes s method in that it handles an arbitrary number of species and provides an exact solution to a less constrained problem. several methods are aimed at building ancestral chromosomes (which can be seen as relationships between genes). most of these methods, however, ignore duplications and losses and are limited to gene families which have exactly one representative in each studied species . the number of such gene families becomes smaller and smaller as the number of species grows. some methods take as input gene trees allowing duplications and losses but do not model these events and treat them as noise that is removed for the construction of chromosomes by traveling salesman-like optimization methods. , or model duplications only in the context of whole genome duplications. here, we propose a method that takes a species tree and a set of gene trees as inputs, and models the gain and breakage of gene adjacencies along a pair of trees, taking duplications and losses into account. we consider two genes to be adjacent if they are on the same chromosome in the same genome and no other gene is located between the two. we give an exact polynomial algorithm which minimizes the number of gains and breakages of adjacencies, or more generally, the gain/breakage cost of an evolutionary scenario for gene adjacencies. the result consists of sets of adjacency trees, which are phylogenetic trees describing the evolution of a family of homologous adjacencies (adjacencies that share a common ancestor and derived from it). we assume that adjacencies evolve independently from each other, so we do not model the rearrangement explicitly (inversions, translocations etc.), but model their effect on adjacencies, which thus can undergo gains and breakages. doing this, we solve a problem that fits in the methodological program started by , which mixes rearrangements and reconciliations of phylogenetic trees (a reconciliation is an annotation of gene tree nodes by duplication or speciation events, according to a species tree). algorithmically, the dynamic programming principle we use generalizes the sankofffitch (copyedited by:  
