rhat: fast alignment of noisy long reads with regional hashing motivation: single molecule real-time (smrt) sequencing has been widely applied in cutting-edge genomic studies. however, it is still an expensive task to align the noisy long smrt reads to reference genome by state-of-the-art aligners, which is becoming a bottleneck in applications with smrt sequencing. novel approach is on demand for improving the efficiency and effectiveness of smrt read alignment. results: we propose regional hashing-based alignment tool (rhat), a seed-and-extension-based read alignment approach specifically designed for noisy long reads. rhat indexes reference genome by regional hash table (rht), a hash table-based index which describes the short tokens within local windows of reference genome. in the seeding phase, rhat utilizes rht for efficiently calculating the occurrences of short token matches between partial read and local genomic windows to find highly possible candidate sites. in the extension phase, a sparse dynamic programming-based heuristic approach is used for reducing the cost of aligning read to the candidate sites. by benchmarking on the real and simulated datasets from various prokaryote and eukaryote genomes, we demonstrated that rhat can effectively align smrt reads with outstanding throughput. availability and implementation: rhat is implemented in c; the source code is available at https://github.com/hit-bioinformatics/rhat.single molecule real-time (smrt) sequencing has been widely applied since its emergence in 2009 . with the superior read length and less systematic bias respect to next generation sequencing (ngs) , smrt sequencing performed well in various cutting-edge genomics studies . however, its higher sequencing error rate affects various critical steps of smrt data analysis. one of them is read alignment. read alignment is to recover the likely genomic origins of reads by aligning them against reference genome. as one of the most fundamental and computing-intensive steps in genome re-sequencing studies , efficient read alignment is on widely demand. however, due to the higher error rate, the speed of smrt read alignment is not as fast as that of ngs reads , which has become a bottleneck of smrt data application. many efforts have been made to read alignment , however, most of them are designed for ngs reads which are less adaptive to noisy smrt reads. previous studies also indicated that long sequence alignment approaches can sensitively align smrt reads, but at the expense of efficiency.three state-of-the-art smrt read aligners are bwa-sw , blasr and bwa-mem , with no exception on the basis of seedand-extension. mainly, they match partial reads (seeds) to reference genome at first, and extend the matches (hits) to compose full alignments. the major difference is in the way of seeding. bwa-sw aligns substrings of read to reference genome by suffix trie traversing, to find approximate matches with few positions as hits. blasr and bwa-mem use exact matches of short tokens between read and reference genome. blasr formulated a probability model to depict the relationship between the error rate and the number of seeds. this model finds all the short token matches longer than a pre-defined threshold as hits. bwa-mem finds all the maximal exact matches (mems) as hits, and also refers to the model of blasr to tune its parameters for smrt reads. efforts have also been made to improve the efficiency of extension, i.e. bwa-sw and bwa-mem utilized banded smith-waterman algorithm, and blasr used a sparse dynamic programming (sdp)-based heuristic . one of the major bottlenecks of the state-of-the-art aligners is the efficiency of seeding. to be robust to the high error rate, all the three aligners densely employed the substrings starting from all the offsets of the read as seeds. however, for blasr and bwa-mem, due to the repetitiveness of genomes, there could be a great amount of hits generated by the dense short seeds along the whole read, which is expensive to merge and prioritize. for bwa-sw, the cost could be also huge to align many substrings of the noisy long read to reference genome. moreover, as all the three aligners used burrows-wheeler transformation (bwt) for indexing reference genome, there is additional cost to perform lf-mapping to locate the precise genomic positions of the hits. thus, for bwa-mem and blasr, the overhead of retrieving all the hits of short seeds is also nonneglectable. herein, we propose an efficient noisy long read alignment approach, regional hashing-based alignment tool (rhat), for smrt read alignment. rhat aligns smrt reads with specifically designed seed-and-extension strategy. in the seeding phase, rhat selects a substring of the read as seeding region, and partitions reference genome into a series of windows, to find the windows having most k-mer matches with the seeding region as candidate sites for extension. this operation is implemented with small overhead through a hash table-based index, regional hash table (rht). in the extension phase, a sdp-based heuristic is designed for efficiently aligning the read to the candidate sites. there are aligners based on q-gram filter which also utilizes the occurrences of short tokens matches within local genomic regions for seeding. however, despite of various implementations, they were mainly designed for shorter reads (from several tens to hundreds of bp) with lower error rates (around several percent), i.e. the ngs reads. this design may be not practical to smrt read alignment. for rhat, the characteristics of smrt reads are fully considered in the design of genome indexing and read alignment modules for improving the performance. we benchmarked rhat on real and simulated smrt datasets from various prokaryote and eukaryote genomes. the experimental results demonstrated that rhat can effectively align smrt reads with a considerable improvement on throughput. moreover, it has superior ability in terms of end-to-end alignment which can produce consecutive alignments for most of the reads.seven real and simulated smrt datasets from various genomes (supplementary) were used for benchmarking rhat and three state-of-the-art aligners, blasr (version 1.3.1), bwa-mem (version 0.7.12) and bwa-sw (version 0.7.12). rhat were run with a variety of configurations on the parameters; blasr was run in its default setting with two kinds of indices, i.e. bwt and suffix array (sa), respectively; bwa-sw was run with parameters (b5 q2 r1 z20) referring to previous study ; and bwa-mem was run with the smrt optimized parameters (x pacbio). more details of the implementation of the benchmarking are in supplementary protocol.we propose rhat, a novel seed-and-extension based approach for noisy long read alignment. mainly, there are three key features of rhat. (i) rhat utilizes the occurrences of k-mer matches between a substring of the read and the reference genome for seeding, which directly reduces the short tokens that need to be handled without loss of effectiveness. (ii) with the help of rht, the seeding can be efficiently implemented by multi-way merging. furthermore, it also has a small overhead for retrieving k-mer matches. (iii) the sdpbased heuristic approach also reduces the cost of aligning the noisy long read to local genomic sites. moreover, this heuristic approach also helps in preventing ill-defined alignment by the constraint on the distance between local matches. rhat was benchmarked on real and simulated datasets from various genomes. the experimental results demonstrated that rhat can be robust to the high error rate and provide effective alignments for smrt reads. comparing to other state-of-the-art aligners, there are two other major contributions made by rhat. first, rhat has an outstanding throughput which could be beneficial for breaking the bottleneck of the application on smrt data. second, rhat can more consecutively align smrt reads, which could also facilitate downstream analysis. a major drawback of rhat is that the sdp-based heuristic could be affected by the false positive local matches. this issue could make rhat misalign a proportion of bases and map the read to an incorrect position nearby the correct one. in downstream analysis, two methods could be useful for reducing this affection. one is to directly clip the alignments which have large indels within their beginning parts. the other one is to correct the potential errors by local re-alignment which is based on the multiple sequence alignment (msa) of the reads aligned to the same local genomic region. considering its sensitivity, correctness, consecutiveness and throughput, rhat is overall an effective and efficient tool for smrt read alignment. with the explosive increase of sequencing data, the improvement made by rhat is profitable to various applications of smrt sequencing. it could be a good choice to incorporate rhat into the developing computational biology pipelines to leverage cutting-edge genomic studies. future works will focus on two aspects. firstly, the sequencing quality scores are still not taken into account. in the future, we will develop novel method to incorporate the quality scores into extension phase for further improving the quality of alignment. for example, the quality scores may be useful for more effectively recognizing false positive local matches which is beneficial for mitigating their affection on the building of skeleton. secondly, the memory footprint of rhat is relatively high, and the k-mer size is also limited by the data structures of rht. considering larger k-mer size could be also helpful for aligning noisy long reads , we will also focus on developing novel succinct data structures which can support larger k-mer size for seeding and further reduce the memory footprint.  
