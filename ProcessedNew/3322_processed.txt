genome analysis omega: an overlap-graph de novo assembler for metagenomics motivation: metagenomic sequencing allows reconstruction of microbial genomes directly from environmental samples. omega (overlap-graph metagenome assembler) was developed for assembling and scaffolding illumina sequencing data of microbial communities. results: omega found overlaps between reads using a prefix/suffix hash table. the overlap graph of reads was simplified by removing transitive edges and trimming short branches. unitigs were generated based on minimum cost flow analysis of the overlap graph and then merged to contigs and scaffolds using mate-pair information. in comparison with three de bruijn graph assemblers (soapdenovo, idba-ud and metavelvet), omega provided comparable overall performance on a hiseq 100-bp dataset and superior performance on a miseq 300-bp dataset. in comparison with celera on the miseq data-set, omega provided more continuous assemblies overall using a fraction of the computing time of existing overlap-layout-consensus assemblers. this indicates omega can more efficiently assemble longer illumina reads, and at deeper coverage, for metagenomic datasets. availability and implementation: implemented in c++ with source code and binaries freely available at http://omega.omicsbio.org.metagenome assemblers attempt to reconstruct genomes of microorganisms in a community from its metagenomic sequencing data. in recent years, many isolate genome assemblers have been developed for illumina sequencing data using de bruijn graphs [e.g. abyss , idba , allpath , velvet and soapdenovo (and overlap graphs [e.g. sga and pegasus (. however, they cannot be directly applied to metagenome assembly for the following reasons. first, isolate genome assemblers typically assume a uniform coverage depth across a genome. this assumption is used for identifying repeat regions in a genome and estimating the size of a genome. in metagenome assembly, however, genomes may have vastly different coverage depths depending on their relative abundances in a community. second, isolate genome assembly only needs to resolve repeat regions within a single genome, while metagenome assembly also has to handle repeat regions between multiple genomes. third, sequencing errors significantly convolute the assembly by introducing false overlaps between reads and disrupting true overlaps. error correction can be performed for isolate genome assembly using consensus sequences. however, it is difficult to separate sequencing errors from single nucleotide polymorphisms (snps) in metagenome assembly. to address these challenges, some of the de bruijn graph assemblers have been upgraded for illumina metagenomic sequencing data, including metavelvet and idba-ud . in this study, the omega (overlap-graph metagenome assembler) algorithm was developed specifically for metagenome assembly. omega followed the general overlap graph (string graph) approach described in boa and pegasus . here, the overlap graph approach was adapted to metagenome assembly by addressing its differences from isolate genome assembly described above. the assembly performance of omega was compared with soapdenovo, idba-ud and metavelvet on illumina hiseq 100-bp data and miseq 300-bp data. soapdenovo was selected because it was used for metagenome assembly in the human microbiome project and many joint genome institute studies. idba-ud and metavelvet were designed specifically for metagenome assembly. a widely used overlap-layout-consensus assembler, celera , was also compared using the miseq 300-bp data.  
