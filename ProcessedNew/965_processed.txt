chopbai: bam index reduction solves i/o bottlenecks in the joint analysis of large sequencing cohorts advances in sequencing capacity have led to the generation of unprecedented amounts of genomic data. the processing of this data frequently leads to i/o bottlenecks, e. g. when analyzing a small genomic region across a large number of samples. the largest i/o burden is, however, often not imposed by the amount of data needed for the analysis but rather by index files that help retrieving this data. we have developed chopbai, a program that can chop a bam index (bai) file into small pieces. the program outputs a list of bai files each indexing a specified genomic interval. the output files are much smaller in size but maintain compatibility with existing software tools. we show how preprocessing bai files with chopbai can lead to a reduction of i/o by more than 95 during the analysis of 10 kb genomic regions, eventually enabling the joint analysis of more than 10 000 individuals. availability and implementation: the software is implemented in c , gpl licensed and available atsequencing capacity has increased dramatically in recent years making it feasible to sequence cohorts of tens of thousands of individuals. the recent introduction of the hiseq x ten system allows for sequencing up to 18 000 whole human genomes per year at 30-fold coverage. raw sequencing data is typically processed with standard bioinformatics pipelines on a computational cluster, parallelized by sample. several variant calling tools, such as gatks unifiedgenotyper , need to work with aligned reads from all sequenced individuals in order to achieve higher accuracy and comparability across samples. instead of parallelizing by sample, we can parallelize this joint analysis by genomic region. here, bam index files allow quick random access to genomic regions, thus limiting the amount of i/o performed on bam files that are typically more than 50 gb in size.unfortunately this methodology does not scale for analyses of tens of thousands individuals. in many cases we are interested in small regions where the amount of data transferred per individuals is dwarfed by the size of the index file. a typical bai index file is roughly 10 mb in size, hence around 100 gb of data transfer to a cluster node for each region is required in the case of 10 000 individuals. depending on the size of the region this overhead can be an order of magnitude larger than the data transfer required to obtain the aligned reads from the bam files. thus, the transfer of the indices becomes an i/o bottleneck in the network. to solve this issue, we propose a method for chopping up the index in a predictable fashion, so that each cluster node can use a small portion of the overall index and network traffic is reduced significantly. we describe our method, chopbai, and show a reduction in data transfer of more than 95 for 10 kb genomic regions, whileto evaluate the gain of preprocessing bam indices with chopbai we indexed a 62 gb bam file containing reads from an icelander sequenced at 30-fold coverage on a hiseq x ten sequencing machine and aligned with bwa-mem to grch38. the complete bam index is 8.8 mb in size, whereas the reduced index built for a 1 mb region on chromosome 1 is on average only 4.5 kb without linear index and 7.2 kb including a linear index. to quantify chopbais impact on i/o, we measured the total amount of data transferred by samtools when querying for regions of varying sizes. the data transfer was measured using the strace tool and includes reading the bam index, bam header and all chunks needed to retrieve the reads from the queried region.displays the total amount of data read using the complete and reduced indices. the absolute data transfer difference between the complete and reduced index remains the same over all tested interval sizes, but it becomes proportionally less with increasing interval size as shown by the log-scaled axis. we observe a 95 reduction in the data read for 10 kb regions, from 9.3 mb for the full index to 450 kb for the reduced index. the amount of data written is equal for the complete and reduced indices. chopbai can create reduced indices for a list of regions, i.e. chop up the complete index into smaller pieces. the running time for chopping the bam index for the complete human genome into 1 mb indices that overlap by 500 kb was approximately 15 s on a standard desktop computer, thus imposing a negligible overhead in terms of preprocessing.when running an analysis of several small regions across thousands of individuals, such as certain commands in gatk (2010) and popins , the status quo puts an unnecessary burden on the network of a computational cluster. with chopbais preprocessing, the i/o imposed by bam index files in the analysis of 10 kb regions of 10 000 bam files can be reduced from 93 to 4.5 gb per job. this reduction in network i/o removes a significant bottleneck when processing a large set of samples over small regions and enables running an order of magnitude more jobs simultaneously. as sequencing is becoming more and more common, chopbai will be equally useful for analyzing large sequencing cohorts of other species where the bai indexing scheme allows for fast access to small subsets of reads.conflict of interest: none declared.  
