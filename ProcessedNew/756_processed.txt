bioimage informatics biojs: an open source javascript framework for biological data visualization biojs is an open-source project whose main objective is the visualization of biological data in javascript. biojs provides an easy-to-use consistent framework for bioinformatics application programmers. it follows a community-driven standard specification that includes a collection of components purposely designed to require a very simple configuration and installation. in addition to the programming framework, biojs provides a centralized repository of components available for reutilization by the bioinformatics community. availability and implementation:numerous web applications exist for the visualization and integration of biological data. biological data can be complex and heterogeneous, making it challenging to integrate and visualize results in web applications. javascript is a popular language for developing rich internet applications (ria); most ria rely on javascript libraries for deployment of functionality. despite its widespread use in bioinformatics, javascript applications are usually implemented to satisfy a particular utility, ignoring its potential for reutilization by other applications with similar purposes. here, we present biojs, an open source community-driven javascript framework of reusable graphical components. biojs offers a set of standard guidelines on how to develop components for javascript modules in the life sciences. these guidelines make installation and addition of new code the same for all new components, minimizing effort and encouraging good programming practice. biojs provides a catalogue of open source modules in javascript for life sciences. these modules include many commonly used functionalities, available there for developers or scientists to download. biojs embraces a similar philosophy to previously successful biologically oriented open source projects, such as bioperl , biojava , biopython or bioruby , advocating that any functional component or module should be developed only once and reused whenever possible. our approach offers a standard and scalable set of specifications to produce custom applications; it also facilitates the integration of components into more comprehensive web applications. to our knowledge, no community efforts have so far achieved a coordinated development of javascript applications for the visual representation of biological data.  
