genetics and population analysis pygenclean: efficient tool for genetic data clean up before association testing genetic association studies making use of high-throughput genotyping arrays need to process large amounts of data in the order of millions of markers per experiment. the first step of any analysis with genotyping arrays is typically the conduct of a thorough data clean up and quality control to remove poor quality genotypes and generate metrics to inform and select individuals for downstream statistical analysis. we have developed pygenclean, a bioinformatics tool to facilitate and standardize the genetic data clean up pipeline with genotyping array data. in conjunction with a source batch-queuing system, the tool minimizes data manipulation errors, accelerates the completion of the data clean up process and provides informative plots and metrics to guide decision making for statistical analysis. availability and implementation: pygenclean is an open source python 2.7 software and is freely available, along with documentation and examples, from http://www.statgen.org.genome-wide association studies and similar designs typically rely on the use of massive amounts of genotype data covering the genome of thousands of study participants. before proceeding to statistical analysis with genotyping array data, quality control (qc) and data clean up are usually performed to identify poorly performing samples and failed genotypes and to produce the analysis set according to set genetic ancestry criteria. this is particularly important for association tests, which can be sensitive to even small sources of systematic or random errors. when joined with large sample size and a large number of genotyped markers, small errors can cause loss of statistical power and spurious associations. hence, a thorough qc is required, even though it might become computationally intensive . plink is a tool widely used for quality assessment , providing multiple quality metrics about markers and samples that allows efficient data management. even though plink is a complete toolset, it lacks automation, and some steps require a considerable amount of manual tuning. pygenclean automates the qc procedure using plink, while providing the user with multiple summarization files and visual aids for quick identification of quality issues. it also allows for the parallelization of steps for servers with a drmaa-compliant distributed resource management system. the tool consists of multiple stand-alone scripts that are linked together via a main script and a configuration file, the latter facilitating user customization. remove all the samples that have a missing rate higher than a user-defined threshold. the sex_check module uses plinks check sex options to compare gender registered in the input files and the gender deduced by their x chromosome heterozygosity rate. using all samples, the script also produces a graph showing the summarized y intensities in function of the summarized x intensities of all samples, highlighting problematic samples . the script also produces a plot showing the overall log r ratio and b allele frequency (baf) for both x and y chromosomes of problematic samples, helping in the identification of allelic imbalance and in estimating the number of x and y chromosomes. finally, the script computes the heterozygosity rate on the x chromosome and the number of missing calls on the y chromosome, helping in the resolution of possible gender mix ups. the find_related_samples module uses plinks genome option to estimate the relatedness of study participants using identity-by-descent and identity-by-state for each sample pairs. it finds the possible degree of relatedness using the cotterman coefficients as estimated by plink (z 0 , z 1 and z 2 ). the script also computes the ibs2 ratio to produce two plots of z 0 and z 1 in function of ibs2 ratio (above a user defined threshold) . those plots provide visual support for the identification of sample pair relatedness . finally, the script offers the possibility of randomly selecting one sample of each related group, excluding other related samples from the final dataset. the check_ethnicity module uses the plink program to compute the multidimensional scaling (mds) values of the samples. this method requires a pairwise identity-by-descent matrix to be computed, which can be computationally demanding. using parallelization, the pygenclean script efficiently computes the mds values using plink and, with the addition of reference populations (such as ceu, yri and jpt-chb), will find outliers with respect to a user-defined reference population and will create mds graphs. the outliers detection script uses the standard deviation of each cluster found by a k-means algorithm. two additional scripts are provided for the automation of the qc pipeline. the first one, subset, helps to subset the dataset by excluding or selecting a set of markers or samples. the second one, compare_gold_ standard, compares the current dataset with a gold standard. for example, if some samples from the 1000 genomes project were genotyped, the script compares the study genotypes with those of the reference 1000 genomes project data. if needed, markers are flipped according to their minor allele for comparability.a dataset comprising 6528 samples (including multiple duplicates of four hapmap samples and internal control samples) genotyped at the beaulieu-saucier pharmacogenomics centre on the illumina humanomni2.5exome beadchip (2 567 845 markers including 42 822 duplicated markers) was processed with pygenclean. a parameter file, as described in, was created and used on a cluster with 10 nodes of 8 intel xeon cpus at 2.40 ghz (with hyper-threading) and 47 gb of random access memory for each node. the sample_missingness module was run two times (with 10 and 2 of missing calls thresholds), and the snp_missingness module was run in between to minimize data loss. to optimize computation speed, the duplicated_samples module was run independently of the others, and some script was run in parallel on the cluster. all other scripts were run with default parameters. after 4 days of computation (including manual verification time), the final dataset after qc consisted of 2 059 052 markers genotyped on 5749 unique samples. note that the full power of the cluster is used only for the relatedness and the ethnic modules, as only a maximum of four processes were used in parallel for the other modules. as genetic datasets are getting larger, efficient genetic data qc and clean up procedures are required. pygenclean ensures quick, customizable and traceable results with datasets of any size.  
