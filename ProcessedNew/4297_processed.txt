data and text mining smash: a benchmarking toolkit for human genome variant calling motivation: computational methods are essential to extract action-able information from raw sequencing data, and to thus fulfill the promise of next-generation sequencing technology. unfortunately, computational tools developed to call variants from human sequen-cing data disagree on many of their predictions, and current methods to evaluate accuracy and computational performance are ad hoc and incomplete. agreement on benchmarking variant calling methods would stimulate development of genomic processing tools and facilitate communication among researchers. results: we propose smash, a benchmarking methodology for evaluating germline variant calling algorithms. we generate synthetic datasets, organize and interpret a wide range of existing benchmark-ing data for real genomes and propose a set of accuracy and computational performance metrics for evaluating variant calling methods on these benchmarking data. moreover, we illustrate the utility of smash to evaluate the performance of some leading single-nucleotide polymorphism, indel and structural variant calling algorithms. availability and implementation: we provide free and open access online to the smash tool kit, along with detailed documentation, atnext-generation sequencing is revolutionizing biological and clinical research. long hampered by the difficulty and expense of obtaining genomic data, life scientists now face the opposite problem: faster, cheaper technologies are beginning to generate massive amounts of new sequencing data that are overwhelming our technological capacity to conduct genomic analyses . computational processing will soon become the bottleneck in genome sequencing research, and as a result, computational biologists are actively developing new tools to more efficiently and accurately process human genomes and call variants, e.g. samtools , gatk , platypus (http://www.well.ox.ac.uk/platypus), breakdancer , pindel and dindel . unfortunately, single-nucleotide polymorphism (snp) callers disagree as much as 20 of the time , and there is even less consensus in the outputs of structural variant algorithms . moreover, reproducibility, interpretability and ease of setup and use of existing software are pressing issues currently hindering clinical adoption . indeed, reliable benchmarks are required to measure accuracy, computational performance and software robustness, and thereby improve them. in an ideal world, benchmarking data to evaluate variant calling algorithms would consist of several fully sequenced, perfectly known human genomes. however, ideal validation data do not exist in practice. technical limitations, such as the difficulty in accurately sequencing low-complexity regions, along with budget constraints, such as the cost to generate high-coverage sanger reads, limit the quality and scope of validation data. nonetheless, significant resources have already been devoted to generate subsets of benchmarking data that are substantial enough to drive algorithmic innovation. alas, the existing data are not curated, thus making it extremely difficult to access, interpret and ultimately use for benchmarking purposes. owing to the lack of curated ground truth data, current benchmarking efforts with sequenced human genomes are lacking. the majority of benchmarking today relies on either simulated data or a limited set of validation data associated with real-world datasets. simulated data are valuable but do not tell the full story, as variant calling is often substantially easier using synthetic reads generated via simple generative models. sampled data, as mentioned earlier, are not well curated, resulting in benchmarking efforts, such as the genome in a bottle consortium and the comparison and analytic testing resource (gcat) (http://www.bioplanet. com/gcat), that rely on a single dataset with a limited quantity of validation data. rigorously evaluating predictions against a validation dataset presents several additional challenges. consensus-based evaluation approaches, used in various benchmarking efforts , may be misleading. indeed, to whom correspondence should be addressed.in this section, we first evaluate the impact of our ambiguity resolution algorithms. we next illustrate the utility of smash by evaluating the performance of some leading snp, indel and structural variant calling algorithms. the goal of these experiments is to highlight smashs functionality, and to simplify the discussion, we use the default settings for all variant calling algorithms and the same machine instance in all of our amazon elastic compute cloud (ec2) experiments. we note that improved accuracy and computational performance results may indeed be possible via parameter tuning and optimizing to minimize ec2 instance footprints. in all reported results, evaluation is reported as described in section 2.2. see section g in the supplementary material for further implementation details.hundreds of variant calling algorithms have been proposed, and the majority of these algorithms have been benchmarked in some form (see detailed discussion in section a in the supplementary material). to the best of our knowledge, none of these existing benchmarking methodologies accounts for noise in validation data, ambiguity in variant representation or computational efficiency of variant calling methods in a consistent and principled fashion. given the rapid growth of next-generation sequencing data, the need for a robust and standardized methodology has never been greater.the it industry serves as an illuminating case study in the context of benchmarking. similar to next-generation sequencing technology, the it industry has benefited greatly from the additional hardware resources provided by moores law. however, the industrys rapid progress also hinged on the agreement on proper metrics to measure performance as well as consensus regarding the best benchmarks to run to fairly evaluate competing systems . prior to this industry-wide agreement, each company invented its own metrics and ran its own set of benchmarking evaluations, making the results incomparable and customers suspicious of them. even worse, engineers at competing companies were unable to determine the usefulness of their competitors innovations, and so the competition to improve performance occurred only within companies rather than between them. once the it industry agreed on a fair playing field, progress accelerated, as engineers could see which ideas worked well (and which did not), and new techniques were developed to build on promising approaches. similarly, we believe that smash could help accelerate progress in the field of genomic variant calling. we have compiled a rich collection of datasets and developed a principled set of evaluation metrics that together allows for quantitative evaluation of variant calling algorithms in terms of accuracy, computational efficiency and robustness/ease-of-use (via ability to run on aws). moreover, although smash currently focuses on benchmarking variant calling algorithms for normal human genomes, we believe that the motivating ideas behind smash, along with the tools developed as part of smash, will be useful in devising analogous variant calling benchmarking toolkits for human cancer genomes and for the genomes of other organisms. finally, we view smash as a work in progress, as the contents of smash reflect (and are limited by) existing technologies. smash currently has limited ground truth data for human genomes, and the validation data across datasets are enriched in easier non-repetitive regions owing to underlying sequencing and chip biases. like any benchmarking suite, smash must evolve over time to stay relevant. as new sources of validation data become available, e.g. the na12878 knowledge base (m.depristo, 2013, personal communication) or curated variants from illuminas platinum genome, these datasets should be incorporated into smash. existing datasets should also be updated to keep them fresh and prevent algorithms from overfitting to stale benchmarks, and benchmarking datasets should be deprecated as new data sources obviate their utility.  
