grass: a generic algorithm for scaffolding next-generation sequencing assemblies motivation: the increasing availability of second-generation high-throughput sequencing (hts) technologies has sparked a growing interest in de novo genome sequencing. this in turn has fueled the need for reliable means of obtaining high-quality draft genomes from short-read sequencing data. the millions of reads usually involved in hts experiments are first assembled into longer fragments called contigs, which are then scaffolded, i.e. ordered and oriented using additional information, to produce even longer sequences called scaffolds. most existing scaffolders of hts genome assemblies are not suited for using information other than paired reads to perform scaffolding. they use this limited information to construct scaffolds, often preferring scaffold length over accuracy, when faced with the tradeoff. results: we present grass (generic assembly scaffolder) a novel algorithm for scaffolding second-generation sequencing assemblies capable of using diverse information sources. grass offers a mixed-integer programming formulation of the contig scaffolding problem, which combines contig order, distance and orientation in a single optimization objective. the resulting optimization problem is solved using an expectationmaximization procedure and an unconstrained binary quadratic programming approximation of the original problem. we compared grass with existing hts scaffolders using illumina paired reads of three bacterial genomes. our algorithm constructs a comparable number of scaffolds, but makes fewer errors. this result is further improved when additional data, in the form of related genome sequences, are used. availability: grass source code is freely available fromhigh-throughput sequencing (hts) technologies, such as illumina (illumina, inc., san diego, ca), 454 (roche applied science, penzberg, germany) and solid and iontorrent (life technologies, to whom correspondence should be addressed.carlsbad, ca) produce millions of short dna reads of typical lengths of 36500 bp at low cost, making them attractive for de novo sequencing applications. with the aid of assembly algorithms , short reads can be joined together into longer sequences called contigs. however, contigs are typically shorter than the sequenced dna molecules, as genomic repeat regions longer than the read length cannot be unambiguously assembled using the read sequences alone. scaffolding, the process of using additional data to place contigs in the right order, orientation and at the right distance in longer (gapped) supercontigs called scaffolds, is a crucial step in obtaining high-quality draft genome sequences. paired reads (mate pair or paired end reads, depending on the sequencing protocol), i.e. reads of known relative orientation, order and approximate physical distance, are often used for scaffolding. additional information, including reference sequences of related organisms, restriction maps and rna-seq data, can be used to derive more accurate contig placement , thereby reducing the cost of finishing experiments and allowing for more reliable downstream analyses. however, most existing scaffolding algorithms are not able to utilize such information for scaffolding. to our knowledge, only bambus and sopra can make use of additional data sources, although the latter was not originally designed for this purpose. generally, the contig scaffolding problem (csp) is finding a linear ordering and orientation of contigs that minimizes the number of unsatisfied scaffolding constraints. these constraints are derived from the available data through translation of the inherent distance, order and orientation constraints onto the contigs. the derived constraints can be mutually exclusive, which makes the problem of minimizing the number of unsatisfied constraints np-hard . consequently, practical scaffolding algorithms only approximately solve this problem: bambus separately finds contig orientation and order and uses greedy heuristics to remove inconsistent constraints; sspace greedily extends scaffolds using a heuristic stopping criterion; and sopra uses an iterative procedure to identify a subset of contigs with consistent scaffolding constraints. notable exceptions are opera and the mip scaffolder , which simplify the csp by dropping types of constraints. opera implements an algorithm for finding an exact csp solution without minimumcontig distance constraints; the mip scaffolder couples a mixed-integer programming (mip) formulation of the csp that does not enforce order constraints with an algorithm heuristically dividing the original problem into subproblems to be solved exactly. we propose a novel generic assembly scaffolding (grass) algorithm that can be applied to any type of scaffolding information. our work is similar to, as we propose a mip formulation of the scaffolding problem. however, we combine contig orientation, order and distance in a single quadratic optimization objective. similar to, we employ an iterative procedure to select a consistent subset of contigs. however, we apply an expectationmaximization strategy to maximize the objective function that identifies inconsistent constraints rather than contigs, thereby retaining more scaffolding information. we implemented the algorithm in c++ and tested it on de novo assemblies of paired read data for the bacteria eschrichia coli, pseudoxanthomonas suwonensis, and pseudomonas syringae and compared it with the sspace, opera and mip scaffolders. grass produces a competitive number of scaffolds with fewer scaffolding errors, particularly when combining various sources of scaffolding information.we presented grass, a generic scaffolding algorithm suitable for combining multiple information sources, as well as grass+, incorporating a post-processing scaffolding step. its use was demonstrated by scaffolding genomes based on paired read data and information in related genome sequences, both individually and combined. grass achieves the best results when all available scaffolding information is used, as this allows conflicting information from a single source to be ignored when the majority of sources do not support it. such a mode of operation is supported by the possibility of choosing weights for the individual information sources, combined with the contig link erosion threshold. we compared grass with a number of state-of-the-art scaffolders (sspace, mip and opera) on three datasets. grass constructs the most accurate scaffolds on all datasets, while keeping the number of scaffolds low. only sspace consistently produces lower numbers of scaffolds, but these are significantly less accurate. the accuracy/contiguity tradeoff displayed by grass puts it in a unique niche compared with existing scaffolders. the current implementation of grass supports the use of paired read information and related genomes for scaffolding. however, the algorithm is not limited to any particular set of information sources. we will extend grass to allow use of other sources, such as optical restriction maps, rna-seq and est data.  
