mirach: efficient model checker for quantitative biological pathway models model checking is playing an increasingly important role in systems biology as larger and more complex biological pathways are being modeled. in this article we report the release of an efficient model checker mirach 1.0, which supports any model written in popular formats such as csml and sbml. mirach is integrated with a petri-net-based simulation engine, enabling efficient online (on-the-fly) checking. in our experiment, by using levchenko et al. model, we reveal that timesaving gains by using mirach easily surpass 400 compared with its offline-based counterpart. availability and implementation: mirach 1.0 was developed using java and thus executable on any platform installed with jdk 6.0 (not jre 6.0) or later. mirach 1.0, along with its source codes, documentation and examples are available atas larger and more complex biological pathways are being modeled, the manual validation of these models becomes tedious if not impossible. therefore, there is a growing interest in the development and application of model checking algorithms for biological pathway models. prism is a probabilistic model checker that is widely used in many different domains . as prism is meant for a wide range of domains, it has its own specific prism format for models to adhere to.introduced biolab, an algorithm to verify properties written in probabilistic bounded linear temporal logic, using the bionetgen modeling (rulebased) framework. genetic network analyzer (gna) is software for the modeling and simulation of qualitative models in the form of piecewise-linear differential equations, which also includes the ability to do model checking . donaldson and gilbert (2008a) developed a monte carlo offline-based model checker (mc2). mc2 has the advantage of being independent from the modeling framework and is able to perform model checking as long simulation results can be obtained. however, this implies that to whom correspondence should be addressed. the full simulation needs to be completed and all traversed states recorded before model checking can commence. this wastes cpu and storage resources if the decision of validity or rejection for the simulation can be determined early in its execution. online or onthe-fly model checking does the exactly this. it carries out model checking during the simulation run and results need not be recorded as simulation runs are only executed for as long as a decision needs to be made. in this article, we present an on-the-fly probabilistic model checker, mirach, for quantitative pathway models that supports popular formats such as sbml and csml (http://www.csml.org/). this quantitative model checker, mirach, would certainly be a valuable addition to the available arsenal of qualitative (gna) and rule-based (biolab) model checkers.as for the latter, we implemented wilson interval to estimate the confidence interval of the probability that the property holds. we have chosen to use wilson interval instead of the simpler normal approximation interval because normal approximation is known to perform badly when the sample probability is close to 0 or 1 and fail completely when it is at 0 or 1. due to this, one cannot devise a sequential sampling algorithm that stops sampling once the confidence interval falls below a certain value (user defined). wilson interval does not have these limitations and allows us more flexibility and efficiency in our model checker.in this article, we have presented an efficient model checker, mirach 1.0, for validating the ever-growing biological pathway simulation modelsboth in complexity and quantity. major contributions include the implementation of the more efficient onthe-fly approach that saves significant amounts of computation time with minimal memory increase, the ability to accept quantitative models directly in the popular sbml and csml formats, and the first model checker to be integrated with the hfpne simulation engine, an expressive and powerful petri net framework for defining biological pathway models.  
