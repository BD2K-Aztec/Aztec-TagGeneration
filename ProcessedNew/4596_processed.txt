the genomedata format for storing large-scale functional genomics data we present a format for efficient storage of multiple tracks of numeric data anchored to a genome. the format allows fast random access to hundreds of gigabytes of data, while retaining a small disk space footprint. we have also developed utilities to load data into this format. we show that retrieving data from this format is more than 2900 times faster than a naive approach using wiggle files.the advent of functional genomics assays based on next-generation sequencing finally allows the high-throughput acquisition of data at 1-bp resolution across entire genomes. processing this information, however, provides a challenge for several orders of magnitude beyond that of previous genomic analyses and demands new techniques for efficient operation. we introduce the genomedata format for genome-scale numerical data, which uses an hdf5 (hierarchical data format; http://hdfgroup. org/hdf5/) container for efficient, random access to huge genomic datasets. we also provide a python interface to this format. traditional data interchange formats such as the wiggle (http://genome.ucsc.edu/goldenpath/help/wiggle.html) and bedgraph (http://genome.ucsc.edu/goldenpath/help/bedgraph. html) formats provide excellent means of disseminating genomewide datasets but suffer from several disadvantages in the repeated processing of this data. storing numerical data as ascii text is inefficient and impedes random access to the data. this problem becomes even more apparent when processing the data in scripting languages such as python and r, which provide high-performance methods for bulk numerical operations on arrays, but no method for reading in data in interchange formats quickly. it is also necessary to validate this data before use, checking that there is exactly one data point per position and that data are not defined outside the boundaries of the underlying sequence. genomedata provides anpage: 1459 14581459  
