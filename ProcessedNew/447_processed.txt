approximate probabilistic analysis of biopathway dynamics motivation: biopathways are often modeled as systems of ordinary differential equations (odes). such systems will usually have many unknown parameters and hence will be difficult to calibrate. since the data available for calibration will have limited precision, an approximate representation of the odes dynamics should suffice. one must, however, be able to efficiently construct such approximations for large models and perform model calibration and subsequent analysis. results: we present a graphical processing unit (gpu) based scheme by which a system of odes is approximated as a dynamic bayesian network (dbn). we then construct a model checking procedure for dbns based on a simple probabilistic linear time temporal logic. the gpu implementation considerably extends the reach of our previous pc-cluster-based implementation (liu et al., 2011b). further, the key components of our algorithm can serve as the gpu kernel for other monte carlo simulations-based analysis of biopathway dynamics. similarly, our model checking framework is a generic one and can be applied in other systems biology settings. we have tested our methods on three ode models of bio-pathways: the epidermal growth factornerve growth factor pathway, the segmentation clock network and the mlc-phosphorylation pathway models. the gpu implementation shows significant gains in performance and scalability whereas the model checking framework turns out to be convenient and efficient for specifying and verifying interesting pathways properties. availability: the source code is freely available at http://www.comp. nus.edu.sg/rpsysbio/pada-gpu/the modeling and analysis of biopathways dynamics is a core activity in systems biology. a standard approach is to view a biopathway as a network of biochemical reactions and to model the network as a system of ordinary differential equations (odes;). since biopathways often involve a large number of reactions, the corresponding ode systems will not admit closed form solutions and one will have to resort to numerical simulations. however, the ode systems will often contain many to whom correspondence should be addressed. unknown parameters (rate constants and initial concentration levels) which will first have to be estimated using meager data of limited precision. consequently, for large pathways model construction and analysis are difficult problems. with this as motivation, a probabilistic approximation method was developed inby which an ode system is reduced to a dynamic bayesian network (dbn). parameter estimation followed by sensitivity analysis is then carried out on this simpler model using standard bayesian inference techniques. this method is promising in terms of efficiency, accuracy and applicability (, b). our goal here is to extend this scheme in two significant ways. the core features of these two extensions are of independent interest and can be deployed in other settings involving biopathways models. the first extension is a parallel implementation of the dbn approximation scheme using graphical processing units (gpus). it is computationally intensive to construct the dbn from a system of odes. in our experience, a single pc is hopelessly inadequate while even a pc-cluster quickly runs into scalability issues. on the other hand, a supercomputing facility may not be available or affordable. in comparison, gpus provide an excellent combination of cost and performance. however, not all algorithms map well onto a gpu platform due to its memory hierarchy. specifically, one must carefully balance parallelism with memory accesses to obtain good performance. in our dbn constructionexplained in more detail in the next sectiona computationally intensive phase is the generation of a large number of trajectories using numerical simulations. this can be done in parallel and hence the gpu platform is a natural choice. however, each variable can appear in multiple equations. hence to generate a trajectory one must, in principle, access all the equations in each integration step. further, the threads generating the trajectories will have to record a good deal of intermediate information to construct the conditional probability tables (cpts) of the dbn. for large ode systems the intermediate data generated will be too large to be stored in the fast local memory. one will instead have to use the slow global memory for this purpose. this can lead to a severe degradation in performance. to get around this we create a heterogeneous pool of threads in which each trajectory is computed in a distributed fashion whereas a second group of threads manage the data movement. there are other settings in which a set of trajectories is generated which is then subjected to statistical analysis to derive system properties. in such applications too, our compilation strategy will likely lead to high-performance gpu implementations. the second major contribution of the article is a probabilistic model checking procedure for dbns. we use a simple probabilistic variant of linear time temporal logic (ltl;) in whichhere, we present our results concerning the gpu implementation and the probabilistic model checking method.approximating the ode-based biopathway dynamics as a dbn allows model analysis tasks such as parameter estimation, sensitivity analysis and probabilistic verification to be efficiently carried out. in this article, we have presented a gpu-based implementation for constructing the dbn approximations. the significant read-sharing in the algorithm will prevent a nave implementation from scaling upto large biopathways models. to overcome this, we have proposed a compilation strategy in which heterogeneous threads consisting of trajectory-computing threads and global memory access threads are suitably folded into warps. further, load balancing was achieved using a simple timing model. in our experiments, we were able to achieve significant speedup compared with a 10-cpu cluster implementation. furthermore, our method scales well whereas the cluster-based implementation begins to consume infeasible amounts of resources for large models. we have also formulated a simple pctl and constructed an approximate but efficient model checking procedure. though probability enters the picture solely via atomic propositions, one can still formulate many interesting dynamic properties of pathway models. further, due the fact that there is a single finite run, the model checking procedure is particularly simple. admittedly it is an approximate procedure. however, one can begin with our method to get a preliminary feel for the dynamics and in case a biologically  
