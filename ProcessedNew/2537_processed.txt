systems biology interactive, multiscale navigation of large and complicated biological networks motivation: many types of omics data are compiled as lists of connections between elements and visualized as networks or graphs where the nodes and edges correspond to the elements and the connections, respectively. however, these networks often appear as hair-ballswith a large number of extremely tangled edgesand cannot be visually interpreted. results: we present an interactive, multiscale navigation method for biological networks. our approach can automatically and rapidly abstract any portion of a large network of interest to an immediately interpretable extent. the method is based on an ultrafast graph clustering technique that abstracts networks of about 100 000 nodes in a second by iteratively grouping densely connected portions and a biological-property-based clustering technique that takes advantage of biological information often provided for biological entities (e.g. gene ontology terms). it was confirmed to be effective by applying it to real yeast protein network data, and would greatly help modern biologists faced with large, complicated networks in a similar manner to how web mapping services enable interactive multiscale navigation of geographical maps (e.g. google maps). availability: java implementation of our method, named navicluster, is available at http://navicluster.in the post-genomic era, a great number of biological data that are available via the internet or obtained through high-throughput experiments are significantly inhibiting researchers from making sense of the data and communicating them to others in a concise and meaningful way . among these, one data type that has become increasingly common is binary relationship data, which are defined as sets of elements and 1-to-1 associations between them. proteinprotein interactions (ppi), correlatively expressed gene pairs, and genetic regulatory relationships exemplify this data type. they are conventionally presented using network (graph) visualization where nodes (vertices) and edges correspond to the elements and associations, respectively . the network visualization is widely used because it is typically assumed to be more interpretable by humans than a long list of associations. high quality visualization should allow for effective investigation of the information, hypothesis generation and biological discovery . unfortunately, network representations often fail to effectively convey information to readers in cases where the networks are large and complicated (e.g. 100 edges). the drawings of such networks, referred to as hair balls , occur frequently when analyzing high-throughput biological data. to avoid being overwhelmed by such complicated networks, effective navigation approaches that can abstract data properly and present them insightfully at a right level of detail are hence required . hierarchical clustering is a technique used with many types of data, including networks or graphs, that meaningfully groups data elements in a recursive manner, thereby producing a hierarchy, or tree, of clusters (supplementary). higher levels in the hierarchy contain fewer, larger clusters, each of which encompasses more data elements (or nodes, in the case of networks) than lower levels. in the case of hairballs, some methods use hierarchical clustering to create an interpretable visualization by displaying only the high-level clusters, thereby reducing the number of elements in the figure and abstracting the networks (e.g. the top panel in supplementary). by descending the hierarchy and showing the actual members of each cluster, detailed information can still be intuitively shown at a particular scale (e.g. the dotted arrows and regions in supplementary). a recent study reported that natural networks display hierarchical properties , suggesting that hierarchical clustering of biological networks is both reasonable and promising. despite the advantages of hierarchical clustering, existing visualization methods using this technique have some drawbacks that hinder effective investigation of large biological datasets. first, some methods require researchers to provide information onpage: 1122 11211127to confirm the novelty and capabilities of the present method, we compared it to other existing visualization methods such as genepro , power graphs , visant , biolayout express 3d and jclust (supplementary). our method was the only one capable of representing the hard-to-manage and complicated visualization of the overwhelming numbers of nodes and edges and providing the capability to navigate networks beyond cluster boundaries. genepro, biolayout express 3d and jclust can visualize clusters of nodes, but only at a single level. they do not support visualization of recursive clustering. visant provides multiscale visualization; however, the user must manually create metanodes (equivalent to clusters) themselves. cyoog (power graphs) hierarchically visualizes power nodes (equivalent to clusters) created by the power graph algorithm,. re-centered views for retrieving knowledge from both direct and indirect neighbors of proteins of interest in a large network. two views focusing on three proteins related to proteasome regulatory particle assembly (nas6, rpn14 and hsm3) were created using the re-centering function. edges not connected to these center proteins are omitted for clarity. (a) re-centered with the geodesic distance from the central nodes set to one. twenty seven of the 49 direct neighbors of the three proteins form a ubiquitin-dependent protein catabolic process cluster, nine form a dna repair cluster and eight form a chromatin silencing at telomere cluster. (b) re-centered with the geodesic distance set to two. this view delineates the more general functions of the proteins (see the main text). a large version of this figure is available at supplementarybut the speed is not fast enough to be used for interactive navigation of large biological networks. it should be noted that our method is highly extendable in several ways. first, any type of property information, not just go categories, can be used in the property-based clustering. for example, if a researcher is interested in diseases, she/he can use disease names associated with proteins derived from disease databases to investigate ppi networks by clustering proteins related to similar diseases. secondly, because the clustering components of the present method can abstract any sub-network very rapidly, any interactive function for producing network views of interest can be achieved if modules for selecting appropriate clusters/nodes are implemented. for example, it is easy to devise a module that interactively produces page: 1127 11211127  
