genome analysis splitmem: a graphical algorithm for pan-genome analysis with suffix skips motivation: genomics is expanding from a single reference per species paradigm into a more comprehensive pan-genome approach that analyzes multiple individuals together. a compressed de bruijn graph is a sophisticated data structure for representing the genomes of entire populations. it robustly encodes shared segments, simple single-nucleotide polymorphisms and complex structural variations far beyond what can be represented in a collection of linear sequences alone. results: we explore deep topological relationships between suffix trees and compressed de bruijn graphs and introduce an algorithm, splitmem, that directly constructs the compressed de bruijn graph in time and space linear to the total number of genomes for a given maximum genome size. we introduce suffix skips to traverse several suffix links simultaneously and use them to efficiently decompose maximal exact matches into graph nodes. we demonstrate the utility of splitmem by analyzing the nine-strain pan-genome of bacillus anthracis and up to 62 strains of escherichia coli, revealing their core-genome properties. availability and implementation: source code and documentation available open-source http://splitmem.sourceforge.net.we implemented algorithm 1 along with supplementary algorithm s3 in c++ and made it available open-source as the splitmem software. the code has been optimized for pangenome and multi-k-mer analysis, such that it can construct the graphs for several values of k iteratively without rebuilding the suffix tree. all testing was executed on a single core of a 64 core xeon e5-4650 server running at 2.70 ghz and a total of 1.5 tb of ram at cold spring harbor laboratory. using the software, we built compressed de bruijn graphs for the pan-genomes of main chromosomes of two species: the nine strains of b.anthracis and an arbitrary selection of nine strains of e.coli using the k-mer lengths 25, 100 and 1000 bp (accessions listed in supplementary). the three different k-mer lengths provide different contexts for localizing the graphs: shorter values provide higher resolution, whereas longer values will be more robust to repeats and link variations in close proximity into a single event. the overall characteristics of the pangenome graphs are presented inand renderings of the graphs are depicted in supplementary figures s5s10. the pan-genome graphs of the two species have similar topologies, although for a given value of k the e.coli graph has 24 times as many nodes and edges than b.anthracis. in both cases, the node length distributions are exponentially distributed as shown in supplementary figures s11 and s12. for example, the mean node length for b.anthracis with k-mers of length 100 is 382 bp and extending to as long as 451 679 bp. the sharp peak at 199 bp occurs from an enrichment of mutations where subpopulations or individual strains in the population differ by isolated single nucleotides more than k + 1 bp apart. at these sites, a bubble will form in the graph with a pair of nodes that are 2 k 1-bp long capturing all of the k-mers that intersect the variant. mutations of more than a single base form bubbles with nodes that are 2 k 1+v-bp long, where v is the length of the variant. copy number and other structural variants lead to more complex graph topologies but are all encoded in the pan-genome graph.shows the levels of population-wide genome sharing among the nodes of the compressed de bruijn graphs of the pan genomes with varying k-mer lengths. the sharing in b.anthracis is much higher than in e.coli across the levels of genome sharing. this follows naturally from the high diversity of e.coli strains , while many of the available sequences of b. anthracis were closely related and sequenced to track the origin of the amerithrax anthrax attacks . a major strength of a graphical pan-genome representation is that in addition to determining the shared or genome-specific sequences, the graph also encodes the sequence context of the different segments. we define the core genome to be the subsequences of the pan-genome that occur in at least 70 of the underlying genomes. we computed the distance of each noncore node to the core genome in python using networkx with a branch-and-bound search intuited by dijkstras algorithm for shortest path. note a breadth-first search is not sufficient as two nodes can be further apart in terms of hops, while they are actually closer neighbors with respect to base-pair distance along the path separating them. it traverses all distinct paths emanating from the source node until either a core node is reached or the current node was found to already have been visited by someshorter path. once a path is found from the source node to the core genome, it uses this distance to bound the maximum search distances of the other candidate paths. using this approach, we performed both a forward search among descendants and a backward search among predecessors to identify the distance to the closest core node and chose the minimum of these two distances in the two pan-genome graphs. this search takes o(m) time per source node, where m is the number of distinct edges in the graph. thus, this computation takes a total runtime of om over all nodes in the graph. to keep the search tractable, we limited the search to a 1000-hop radius around each node. supplementaryshows the distribution of distances in the graphs. overall, for b.anthracis, most of the nodes were in the core genome because the strains are so similar or there was a very short path to the core genome. in contrast, the results for e.coli show the distribution of distances to the core genome follows an exponential distribution, suggesting a complex evolutionary history of mutations.comparative genomics has been and continues to be one of our most powerful tools for understanding the genome of a species. now that genomic data are becoming more abundant, we are beginning to shift away from reference genomes and see the rise of pan-genomics. already hundreds of microbial species have multiple complete genomes available, and through the rise of long read sequencing technologies from pacbio and other companies, we expect a rapid growth in the availability of additional complete genomes . sequences that are highly conserved or segregating across the population can reveal clues about their phenotypic roles, and a comprehensive pan-genomic approach allows us to directly measure conservation in the context of the flanking sequences. the graphical pangenome approach also consolidates all available information about complex structural variations and gene flow into a unified framework. our new splitmem algorithm efficiently computes a graphical representation of the pan-genome by exploiting the deep relationships between suffix trees and compressed de bruijn graphs. mems are readily identified in a suffix tree and through the splitmem algorithm are efficiently transformed into the nodes and edges of a compressed de bruijn graph. this algorithm effectively unifies the most widely used sequence data structures in genomics into a single family containing suffix trees, suffix arrays, fm-indexes and now compressed de bruijn graphs. to accomplish this goal, we have proposed a new construct, called suffix skips, that generalizes the well-established concept of suffix links to interrelate more distantly related portions of the suffix tree. to demonstrate the utility of the algorithm, we have applied it to analyze the pan-genomes of all 9 b.anthracis and all 62 e.coli genomes. interestingly, when comparing a sample of nine e.coli genomes with the nine b.anthracis genomes, the distributions of the lengths of the nodes in the two pan-genome graphs are. the running time and peak memory of splitmem on the pangenome graphs of increasing numbers of e.coli strains with k-mer length of 25. each point represents the minimum value recorded over five trials to reduce measurement noise introduced by competing activity of the server. the line represents the linear regression of the points similar, whereas other properties are markedly different, such as the distributions of the levels of sharing or the distance to the core genomes. this suggests that we have only narrowly explored the genomic variability of b.anthracis, and future experimental work remains to examine the functional significance of the variable regions. future work remains to improve splitmem and further unify the family of sequence indices. although our current implementation can easily scale to dozens or hundreds of genomes on a common server, most desired are techniques to reduce the space consumption for even larger numbers of genomes. it is not directly possible to apply recent approaches using bloom filters or other techniques to save space but is an interesting research problem to consider. we are also currently investigating techniques to construct a pan-genome from the fm-index building on the algorithms of the string graph assembler for assembling a genome from short reads. these do not directly apply either without an exhaustive consideration of every kmer in the genomes, but there may be ways to generalize our algorithm from suffix trees. we also aim to research additional downstream analysis algorithms for the pan-genome, especially developing a sequence aligner which can align directly to the graph structure. finally, we also aim to extend the splitmem algorithm to become more robust in the presence of incomplete genomes, so that fragmented draft genomes can be more readily analyzed.  
