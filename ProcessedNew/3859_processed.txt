ragoutâ€”a reference-assisted assembly tool for bacterial genomes bacterial genomes are simpler than mammalian ones, and yet assembling the former from the data currently generated by high-throughput short-read sequencing machines still results in hundreds of contigs. to improve assembly quality, recent studies have utilized longer pacific biosciences (pacbio) reads or jumping libraries to connect contigs into larger scaffolds or help assemblers resolve ambiguities in repetitive regions of the genome. however, their popularity in contemporary genomic research is still limited by high cost and error rates. in this work, we explore the possibility of improving assemblies by using complete genomes from closely related species/strains. we present ragout, a genome rearrangement approach, to address this problem. in contrast with most reference-guided algorithms, where only one reference genome is used, ragout uses multiple references along with the evolutionary relationship among these references in order to determine the correct order of the contigs. additionally, ragout uses the assembly graph and multi-scale synteny blocks to reduce assembly gaps caused by small contigs from the input assembly. in simulations as well as real datasets, we believe that for common bacterial species, where many complete genome sequences from related strains have been available, the current high-throughput short-read sequencing paradigm is sufficient to obtain a single high-quality scaffold for each chromosome.the recent proliferation of next-generation sequencing with short reads has enabled many new experimental opportunities, but it has also raised formidable computational challenges in genome assembly. even for relatively simple bacterial genomes, their assemblies from current generation of high-throughput short reads are still fragmented with hundreds of contigs. to improve the assemblys quality, recent studies have utilized longer pacific biosciences (pacbio) reads or jumping libraries to connect contigs into larger scaffolds or help assemblers resolve ambiguities in repetitive regions of the genome . however, their popularity in current genomic research is still limited by high cost and error rates. when a related genome is available, an alternative approach is to use this genome to guide the assembly of the target genome, in a method called reference-assisted assembly. the first reference-assisted assembly tools aligned contigs against the reference and ordered them according to their positions in the reference genome. while this approach is still commonly used, it introduces errors when structural variations between the reference and the assembled (target) genome are present. in an attempt to address this problem, gaul and blanchette formulated the contig ordering problem, which attempts to order contigs so that the 2-break distance (dcj distance) between the resulting scaffold and the reference genome is minimized. this formulation has been further applied in some reference-guided assembly tools . unfortunately, while the approach is theoretically sound, these tools still generate erroneous scaffolds when there are rearrangements between the target and reference genomes. this poses an important question: is a single reference genome sufficient to obtain a single scaffold (for each chromosome) without errors? recently,introduced raca software, which made an important step toward reliable reconstruction of the target (assembled) genome. in contrast to other tools, which use only one reference, raca utilizes a reference as well as multiple outgroups to guide the assembly. this approach proved to be valuable, since the adjacency information in the outgroups can also help infer the adjacencies in the target assembly. although raca marked an important advancement in the reference-guided assembly problem, it still suffers some limitations. first, raca uses information from outgroup genomes, but it heavily relies on a single reference. as with any genome rearrangement tools, raca decomposes these sequences into synteny blocks. however, rather than constructing synteny blocks by considering all input sequences, raca constructs synteny blocks based on pairwise sequence alignment against only the reference genome. this approach, in some cases, cannot detect synteny blocks and also raises the question of what to do with assembly sequences (contigs) that do not align against the reference. second, unlike synteny blocks constructed from complete genomes, synteny blocks constructed in the presence of contigs can be fragmented, since assemblies usually have contigs of various lengths. constructing synteny blocks from fragmented assemblies raises a problem: on which scale should synteny blocks be constructed? if one constructs large-scale synteny blocks, then small and fragmented synteny blocks (within small contigs) are not considered, thus leading to gaps in the assembly. on the other hand, if one constructs small-scale synteny blocks, then the rearrangement to whom correspondence should be addressed. the author 2014. published by oxford university press. this is an open access article distributed under the terms of the creative commons attribution non-commercial license (http://creativecommons.org/licenses/ by-nc/3.0/), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. for commercial re-use, please contact journals.permissions@oup.com analysis becomes harder, since smaller synteny blocks are more likely to exhibit structural variations and are also more susceptible to be incorrectly identified (i.e. false synteny blocks). this dilemma must be addressed in order to obtain high-quality scaffolds. in this work, we present ragout (reference-assisted genome ordering utility), a genome rearrangement approach for reference-assisted assembly that can produce high-quality scaffolds with a small number of misordered contigs and high genome coverage. rather than working with a single reference, ragout uses multiple complete genomes from closely related species/ strains. in contrast with most existing tools, in which only a fixed scale of synteny blocks is used, our algorithm works iteratively with different scales of synteny blocks and also utilizes the assembly graph to improve scaffolds. we demonstrate that with multiple references, ragout significantly improves the assembly of the target genome compared to existing tools. through simulations as well as real datasets, we believe that for common bacterial species, for which many complete genome sequences from related strains have been made available, the current high-throughput short-read-sequencing paradigm is sufficient to assemble into a single high-quality scaffold. the ragout software is freely available at: https://github. com/fenderglass/ragout.we benchmarked ragout against other reference-assisted assembly tools [mauve contig mover , oslay , raca ] on one simulated and three real bacterial datasets. since the complete sequences of target genomes are available, we can also assess the quality of the resulting scaffolds by the number of misordered contigs, scaffold gaps and coverage. as each output scaffold is an ordered list of contigs, we define the number of misordered contigs as the minimum number of contigs in the scaffolds whose mapping positions or directions are not consistent with the mapping positions and directions of the contigs before and after them. also, we define the number of gaps in a scaffold as the number of contig pairs that are adjacent in a scaffold, but are separated by some other contigs when we map all contigs to the reference genome. the coverage is defined as the total number of aligned bases against the reference, divided by the genome size. mauve contig mover and oslay were run with parameters recommended for bacterial genomes. for ragout, we ran three iterations with the corresponding minimum synteny block sizes: 5000, 500, 100, as they are the default scales used in sibelia for bacterial genomes. since raca works with only one synteny block size, we chose the maximal synteny block scale (most reliable).in this article, we have presented ragout, a package for improving assemblies using multiple complete references. we demonstrated that with multiple related genomes available, one can obtain a complete and high-quality scaffold for each chromosome using only high-throughput short-read sequencing. this marks an important improvement in genome assembly of short reads and even raises a question whether long pacbio reads or long jumping libraries are needed for genomic studies of common bacteria where multiple related references have been available. the current version of ragout uses sibelia for synteny block reconstruction and therefore limits itself to bacterial genomes. when synteny blocks have been available, ragout is fast and memory-efficient. we plan to make ragout compatible with other synteny block generation tools that can work with mammalian genomes [e.g. cactus aligner] and further extend ragout to work with mammalian datasets. another limitation of ragout is that it only uses the assembly graph for recovering repetitive blocks or small contigs that could not be captured in synteny analysis. therefore, it can make mistakes when rearrangements happened on the target branch. since de bruijn graphs can be transformed into breakpoint graphs and vice-versa, the de bruijn graphs output from short-read assemblers can also be used for rearrangement analysis and we will focus on this issue in further studies.  
