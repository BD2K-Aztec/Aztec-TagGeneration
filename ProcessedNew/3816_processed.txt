pyrosetta: a script-based interface for implementing molecular modeling algorithms using rosetta pyrosetta is a stand-alone python-based implementation of the rosetta molecular modeling package that allows users to write custom structure prediction and design algorithms using the major rosetta sampling and scoring functions. pyrosetta contains python bindings to libraries that define rosetta functions including those for accessing and manipulating protein structure, calculating energies and running monte carlo-based simulations. pyrosetta can be used in two ways: (i) interactively, using ipython and (ii) script-based, using python scripting. interactive mode contains a number of help features and is ideal for beginners while script-mode is best suited for algorithm development. pyrosetta has similar computational performance to rosetta, can be easily scaled up for cluster applications and has been implemented for algorithms demonstrating protein docking, protein folding, loop modeling and design. availability: pyrosetta is a stand-alone package available atrecent advances in molecular modeling have lead to its increasing use in structural biology research for a wide range of applications. the rosetta biomolecular modeling suite, in particular, has proved effective in many diverse tasks including ab initio structure prediction and homology modeling , protein and small-molecule docking , loop modeling and design . to make these protocols more accessible, a number of web-based servers have been constructed, such as robetta , rosettadock and rosettaantibody . however, many modeling problems do not fit cleanly into one of the standard rosetta protocols, and algorithms that combine elements from different methods within rosetta are often required to to whom correspondence should be addressed. adequately model a particular system. developing such algorithms requires extensive experience in both c++ programming and rosetta software development, severely limiting its accessibility. to make custom molecular modeling using rosetta accessible to a broader community of structural biologists, we developed pyrosetta, a python-based implementation of the rosetta molecular modeling suite. our goal was to enable users to define a molecular modeling problem, design an algorithm to solve it and implement that algorithm on the computer using preexisting rosetta objects and functions. pyrosetta takes advantage of the object-oriented architecture of the new rosetta release v3.1 to provide users with easy access to all the major functions and objects used by rosetta developers (leaver-fay,a. et al., manuscript in preparation). pyrosetta can be run in two modes: interactive-mode, which contains tab-completion and help features which are ideal for beginners, and script-mode, which is better suited for algorithm development. we chose python as the scripting language because it is a sophisticated programming language that enjoys widespread use in the biology community and allows pyrosetta to be compatible with other python-based packages such as pymol and bio-python . our hope is that the extensive online communities of users of the many python-based bioinformatics tools will help develop and share interfaces with pyrosetta. since familiarity with rosetta objects and functions is essential for new users, a tutorial, users manual and sample scripts demonstrating usage are available on the web site. we used a number of tools to convert the classes and functions in the rosetta c++ source code into a python-accessible form. gcc-xml parses the classes and functions of the rosetta c++ code into an xml representation using the gcc compiler. the py++ package (language binding) uses the gcc-xml objects and generates python bindings using the boost.python library . to make this process feasible for over 2000 rosetta objects, this entire process is automated. the scripts are portable and tested on mac osx, linux and windows platforms. the building process requires 46 h depending on the platform and the pregenerated binary libraries are provided for download for all three platforms. a version of pyrosetta will be made available with each new release of rosetta along with intermediate versions that add additional features, fix bugs, improve accessibility or expand documentation. in terms of computational cost, pyrosetta performs almost identically to the c++ build of rosetta with performance benchmarks indicating a 5 difference in speed.page: 690 689691  
