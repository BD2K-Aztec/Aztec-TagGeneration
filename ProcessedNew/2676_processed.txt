sequence analysis lasagna-search 2.0: integrated transcription factor binding site search and visualization in a browser lasagna-search 2.0 is an integrated webtool for transcription factor (tf) binding site search and visualization. the tool is based on the lasagna (length-aware site alignment guided by nucleotide association) algorithm. it eliminates manual tf model collection and promoter sequence retrieval. search results can be visualized locally or in the university of california santa cruz genome browser. gene regulatory network inference based on the search results offers another way of visualization. a list of tfs and target genes is all a user needs to start using the tool. lasagna-search 2.0 currently offers 1792 tf models and supports 15 species for automatic promoter retrieval and visualization in the university of california santa cruz genome browser. it is a user-friendly tool designed for non-bioinformaticians and is suitable for research and teaching. we describe important changes made since the initial release. availability and implementation: lasagna-search 2.0 is freely available without registration ata transcription factor (tf) is a protein or protein complex that regulates gene expression by physically binding to the regulatory regions of its target genes. because of the similarity shared among binding sites of a tf, a model can be built from the known tf binding sites (tfbss) to search for novel binding sites in unannotated dna sequences. various assays can be used to identify binding sites of a tf. one of these is the highthroughput chip-seq method, which combines chromatin immunoprecipitation with massively parallel dna sequencing. briefly, dna bound by the tf in question is sequenced, producing short dna sequences or reads. by aligning these reads to a reference genome, we obtain the number of reads covering each genomic location or the binding signals, which are used by a peak finding algorithm to locate signal peaks in the genome. projects such as the encyclopedia of dna elements (encode) project (encode project) generated huge amounts of chip-seq data for human and mouse tfs across different cell types. this helps scientists better understand tf binding for the studied species. chip-seq data, however, are not available for lesser-studied tfs and species. as a result, tfbs search tools are still routinely used by scientists and databases curating tfbss and tf models are released or updated. lasagna-search 2.0 is an integrated webtool that allows users to perform tfbs search and visualization without leaving the website. it offers collections of 1792 tf models built from either tfbss or position-specific weight matrices (pwms), where the tfbss and pwms were collected from transfac , jaspar , uniprobe , oreganno and pazar . to use custom tf models, the tool accepts unaligned variable-length binding sites of a tf as well as tf models in the form of pwms. in case tfbss are provided, the lasagna algorithm is used to align variablelength tfbss before building a tf model. while users can provide dna sequences in the fasta format to be scanned for putative binding sites, lasagna-search supports automatic promoter sequence retrieval for 15 species. users can use official gene symbols, refseq mrna accession numbers or ncbi gene ids to search for genes and retrieve promoter sequences relative to the transcription start sites. promoter sequences retrieved via lasagna-search come with genomic locations, which allow the search results to be visualized with other annotations with ease. users can either visualize hits locally or in the university of california santa cruz (ucsc) genome browser with a mouse click. finally, significant binding sites of tf a found in the promoter of gene b suggest interaction between tf a and gene b. enabled by our tool, search results can hence be visualized as a network of tfs, tf coding genes and target genes. since the initial release of lasagna-search , we received constructive and encouraging feedback from the users, which resulted in lasagna-search 2.0. in this note, we describe the improvements, discuss the implications and outline future work.  
