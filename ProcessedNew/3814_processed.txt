structural bioinformatics pyrmsd: a python package for efficient pairwise rmsd matrix calculation and handling we introduce pyrmsd, an open source standalone python package that aims at offering an integrative and efficient way of performing root mean square deviation (rmsd)-related calculations of large sets of structures. it is specially tuned to do fast collective rmsd calculations, as pairwise rmsd matrices, implementing up to three well-known superposition algorithms. pyrmsd provides its own symmetric distance matrix class that, besides the fact that it can be used as a regular matrix, helps to save memory and increases memory access speed. this last feature can dramatically improve the overall performance of any python algorithm using it. in addition, its extensi-bility, testing suites and documentation make it a good choice to those in need of a workbench for developing or testing new algorithms. availability: the source code (under mit license), installer, test suites and benchmarks can be found at https://pele.bsc.es/ under the tools section.as molecular modeling keeps expanding, obtaining the root mean square deviation (rmsd) with optimum superposition for a large set of structures in an efficient and fast manner is a necessity. clustering methods, for example, which are becoming increasingly popular as trajectory analysis and compression tools , can benefit from the use of a pre-calculated pairwise distance matrix or even totally depend on it, e.g. spectral clustering . however, as hardware and algorithms improve, the output size of simulations grows bigger, and the calculation of the distance matrix becomes the bottleneck in any process depending on it. there are several implementations of the different superposition algorithms, which are written in wide spectra of programming languages. almost all molecular dynamics packages and biomolecule handling software include their own rmsd calculation tools. every time programmers need to use an external rmsd solution in a project, they have two options. the first one is to use an external source or library, which requires previous knowledge of the language in which it was written and its dependencies. a second option is to use a precompiled tool with a bigger scope, which means creating an interface with their own application by writing wrappers and output converters (with the consequent performance loss). in general, the main problems to face are fragmentation, excess of or missing features, bad documentation, lack of sources and the intrinsic difficulty of the languages used. pyrmsd is a python package that overcomes all the above problems in the following way: it is totally focused on the calculation of rmsd. it provides solutions for all the usual rmsd problems and is specially tuned for rmsd collective calculations, like pairwise rmsd matrices, a feature that is usually missing in most utilities. python (www.python.org) is an easy to learn and use programming language, which has an extensive library pool that includes wrappers for almost all libraries used in science. this makes it one of the better languages for scientific software prototyping and development.as pure python implementations have a poor performance (even when using fine tuned packages as numpy), pyrmsd uses python c extensions with openmp and cuda code, allowing the full use of multicore machines and graphics processing units (gpu). it implements the most important superposition algorithms in the same place. it is documented, well tested and open source; therefore, it can be the perfect workbench for any experienced user who wants to develop and test their own superposition algorithms.  
