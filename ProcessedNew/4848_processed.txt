genome analysis vat: a computational framework to functionally annotate variants in personal genomes within a cloud-computing environment the functional annotation of variants obtained through sequencing projects is generally assumed to be a simple intersection of genomic coordinates with genomic features. however, complexities arise for several reasons, including the differential effects of a variant on alternatively spliced transcripts, as well as the difficulty in assessing the impact of small insertions/deletions and large structural variants. taking these factors into consideration, we developed the variant annotation tool (vat) to functionally annotate variants from multiple personal genomes at the transcript level as well as obtain summary statistics across genes and individuals. vat also allows visualization of the effects of different variants, integrates allele frequencies and genotype data from the underlying individuals and facilitates comparative analysis between different groups of individuals. vat can either be run through a command-line interface or as a web application. finally, in order to enable on-demand access and to minimize unnecessary transfers of large data files, vat can be run as a virtual machine in a cloud-computing environment. availability and implementation: vat is implemented in c and php. the vat web service, amazon machine image, source code and detailed documentation are available at vat.recent technological advances have significantly reduced the cost of dna sequencing and have made it possible to sequence complete genomes on a large scale. currently, a number of efforts aim to sequence and genotype large numbers of individual genomes . these studies have already revealed many novel single nucleotide polymorphisms to whom correspondence should be addressed. the authors wish it to be known that, in their opinion, the first three authors should be regarded as joint first authors.(snps), multi-nucleotide polymorphisms (mnps), small insertions and deletions (indels) and structural variants (svs). in order to assess the functional impact of identified variants, a key objective is to determine whether those variants intersect with annotated elements. however, the intersection of variants with a gene annotation set is non-trivial . first, a variant may affect only a subset of the possible transcript isoforms of a given gene or it may have different effects on alternatively spliced transcripts. for example, a variant can affect the coding region of one transcript and overlap the canonical splice site of another. in addition, for cases in which neighboring snps (i.e. mnps) lie within the same codon, one must assess both snps simultaneously to evaluate the resultant codon change, as considering each independently could give rise to erroneous codon changes. second, indels in coding regions can either preserve the frame or introduce frameshifts. they can also partially overlap coding exons, thereby impairing splice sites as well as coding regions. assessing the functional impact in such cases is especially challenging. lastly, large svs can have drastic effects on the structure of a gene if exons are removed in whole or in part. as a result, it can be difficult to assess the overall functional impact of different types of variants on gene structures without having visual representations (supplementary). to address these challenges, we have developed the variant annotation tool (vat). like vat, other tools have been implemented to assess the functional impact of variants . one issue with these tools is that they are not cloud enabled. cloud-computing provides immense storage capacity and scalable compute resources as well as the ability to share data and perform collaborative analyses. given the increasing rate of data production, many foresee that sequencing reads will be stored on the cloud. in addition, the importance of software residing in the same space as the data on which it operates requires that the analysis pipelines processing these reads migrate to the cloud as well. thus, as vat will constitute an integral part of such pipelines, having it reside on the cloud will be necessary. thus, we provide vat as a virtual machine (vm) that can be run within a cloud-computing environment (including that operated by amazon) to take advantage of the scalability and unlimited storageof the vat web application. the web application may be accessed through the browser or a json-based interface. the i/o layer of vat takes advantage of the amazon s3 service and stores all data in s3 buckets or, if s3 support is disabled, simply writes to a local disk. this architecture may also be easily scaled to use more sophisticated storage schemes, such as hashing across multiple input and output buckets. (c) the vat ec2 cloud service is implemented in a service-oriented architecture consisting of a master node and a number of worker nodes. the master node hosts the user-facing interface and delegates tasks on behalf of the user to the worker nodes capacity offered by this framework. the utility of vat has been demonstrated by its extensive use in annotating the loss-of-function variants obtained as part of the 1000 genomes project .  
