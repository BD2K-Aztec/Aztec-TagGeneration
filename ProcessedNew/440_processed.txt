application of learning to rank to protein remote homology detection motivation: protein remote homology detection is one of the fundamental problems in computational biology, aiming to find protein sequences in a database of known structures that are evolu-tionarily related to a given query protein. some computational methods treat this problem as a ranking problem and achieve the state-of-the-art performance, such as psi-blast, hhblits and protembed. this raises the possibility to combine these methods to improve the predictive performance. in this regard, we are to propose a new computational method called protdec-ltr for protein remote homology detection, which is able to combine various ranking methods in a supervised manner via using the learning to rank (ltr) algorithm derived from natural language processing. results: experimental results on a widely used benchmark dataset showed that protdec-ltr can achieve an roc1 score of 0.8442 and an roc50 score of 0.9023 outperforming all the individual predictors and some state-of-the-art methods. these results indicate that it is correct to treat protein remote homology detection as a ranking problem, and predictive performance improvement can be achieved by combining different ranking approaches in a supervised manner via using ltr. availability and implementation: for users convenience, the software tools of three basic ranking predictors and learning to rank algorithm were provided atusing sequence similarity between protein pairs to detect evolutionary relationships is one of the central tasks in bioinformatics, which can be applied to the protein 3d structure and function prediction . unfortunately, remote homology protein pairs have similar structures and functions, but they lack easily detectable sequence similarity, because the protein tertiary structure is more conserved than protein sequence. therefore, it is often difficult to detect protein remote homology by computational approaches.some effective computational methods have been developed to address this challenging problem, which can be mainly divided into two groups, including discriminative methods and ranking methods. the first group discriminative methods treat protein remote homology detection as a classification problem using both the positive and negative samples to train the classification models, and then they are used to predict unseen samples. among this kind of approaches, the methods based on support vector machines (svms) achieve the state-of-the-art performance with appropriate kernel functions, which measure the similarity between any). these methods employ various features to represent the protein sequences, such as svm-fisher , svm-pdt , svm-pairwise , svm-la and some profilebased methods . in contract, the second group ranking methods treat protein remote homology detection as a ranking task or database searching task, where the query protein is searched against a protein database with known structures and functions, and a ranking list of the proteins in the database is returned according to their identified evolutionary relationships to the query protein. early ranking methods were based on sequence alignment algorithms, such as smith waterman algorithm . later, some more efficient algorithms were proposed so as to trade reduced accuracy for improved efficiency, such as basic local alignment search tool (blast) and fasta . because the evolutionary relations of remote homology proteins cannot be easily detected by sequence similarity, these methods can only achieve limited performance. the predictive accuracy was significantly improved by using the profile-based alignment algorithms, e.g. psi-blast method iteratively builds a probabilistic profile of a query sequence and therefore a more sensitive sequence comparison score can be calculated. several ranking methods employed the generative models iteratively trained by using positive samples of a protein family or superfamily and achieved better performance, e.g. hhblits generates a profile hidden markov model (profile hidden markov model (hmm)) from the query sequence and iteratively searches through a large database. recently, some ranking methods based on graph theory or semantic embedding techniques were proposed, e.g. motivated by the successful applications of googles pagerank algorithm, an unsupervised algorithm called rankprop was proposed, which is a network-based inference method. later, this method was further improved by a semi-supervised approach using labeled samples to learn a new network . based on the similarity between protein sequences and natural languages, the techniques derived from the field of natural language processing were applied to protein remote homology, e.g. protembed converts a large-scale embedding of protein feature vectors into a low-dimensional semantic space. therefore, evolutionarily related proteins are embedded in close proximity in this semantic space. the aforementioned ranking methods are based on different theories and achieve the state-of-the-art performance in the field of protein remote homology detection. therefore, it is interesting to explore whether these approaches can be combined to further improve their performance. however, how to combine these ranking methods into one predictor is a challenging problem, because they are based on different techniques and their predictive results are often different. to address this problem, we employed the learning to rank (ltr) algorithm to combine different ranking methods in a supervised fashion. ltr is a supervised algorithm for training the model in a ranking task, which has been successfully applied to information retrieval, natural language processing, data mining, etc. , e.g. ltr is severing as one of the key algorithms in many well-known searching engines, such as bing , yahoo! and google . in this study, we proposed a new computational method called protdec-ltr, which combines three state-of-the-art ranking methods by using ltr, including psi-blast , hhblits and protembed . to our best knowledge, protdec-ltr is the first computational predictor that can combine various ranking methods via using a supervised framework.  
